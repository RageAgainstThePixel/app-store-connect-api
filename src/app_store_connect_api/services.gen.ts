// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from './client';
import type { ActorsGetCollectionData, ActorsGetCollectionError, ActorsGetCollectionResponse, ActorsGetInstanceData, ActorsGetInstanceError, ActorsGetInstanceResponse, AgeRatingDeclarationsUpdateInstanceData, AgeRatingDeclarationsUpdateInstanceError, AgeRatingDeclarationsUpdateInstanceResponse, AlternativeDistributionDomainsGetCollectionData, AlternativeDistributionDomainsGetCollectionError, AlternativeDistributionDomainsGetCollectionResponse, AlternativeDistributionDomainsCreateInstanceData, AlternativeDistributionDomainsCreateInstanceError, AlternativeDistributionDomainsCreateInstanceResponse, AlternativeDistributionDomainsGetInstanceData, AlternativeDistributionDomainsGetInstanceError, AlternativeDistributionDomainsGetInstanceResponse, AlternativeDistributionDomainsDeleteInstanceData, AlternativeDistributionDomainsDeleteInstanceError, AlternativeDistributionDomainsDeleteInstanceResponse, AlternativeDistributionKeysGetCollectionData, AlternativeDistributionKeysGetCollectionError, AlternativeDistributionKeysGetCollectionResponse, AlternativeDistributionKeysCreateInstanceData, AlternativeDistributionKeysCreateInstanceError, AlternativeDistributionKeysCreateInstanceResponse, AlternativeDistributionKeysGetInstanceData, AlternativeDistributionKeysGetInstanceError, AlternativeDistributionKeysGetInstanceResponse, AlternativeDistributionKeysDeleteInstanceData, AlternativeDistributionKeysDeleteInstanceError, AlternativeDistributionKeysDeleteInstanceResponse, AlternativeDistributionPackageDeltasGetInstanceData, AlternativeDistributionPackageDeltasGetInstanceError, AlternativeDistributionPackageDeltasGetInstanceResponse, AlternativeDistributionPackageVariantsGetInstanceData, AlternativeDistributionPackageVariantsGetInstanceError, AlternativeDistributionPackageVariantsGetInstanceResponse, AlternativeDistributionPackageVersionsGetInstanceData, AlternativeDistributionPackageVersionsGetInstanceError, AlternativeDistributionPackageVersionsGetInstanceResponse, AlternativeDistributionPackagesCreateInstanceData, AlternativeDistributionPackagesCreateInstanceError, AlternativeDistributionPackagesCreateInstanceResponse, AlternativeDistributionPackagesGetInstanceData, AlternativeDistributionPackagesGetInstanceError, AlternativeDistributionPackagesGetInstanceResponse, AnalyticsReportInstancesGetInstanceData, AnalyticsReportInstancesGetInstanceError, AnalyticsReportInstancesGetInstanceResponse, AnalyticsReportRequestsCreateInstanceData, AnalyticsReportRequestsCreateInstanceError, AnalyticsReportRequestsCreateInstanceResponse, AnalyticsReportRequestsGetInstanceData, AnalyticsReportRequestsGetInstanceError, AnalyticsReportRequestsGetInstanceResponse, AnalyticsReportRequestsDeleteInstanceData, AnalyticsReportRequestsDeleteInstanceError, AnalyticsReportRequestsDeleteInstanceResponse, AnalyticsReportSegmentsGetInstanceData, AnalyticsReportSegmentsGetInstanceError, AnalyticsReportSegmentsGetInstanceResponse, AnalyticsReportsGetInstanceData, AnalyticsReportsGetInstanceError, AnalyticsReportsGetInstanceResponse, AppAvailabilitiesV2CreateInstanceData, AppAvailabilitiesV2CreateInstanceError, AppAvailabilitiesV2CreateInstanceResponse, AppAvailabilitiesV2GetInstanceData, AppAvailabilitiesV2GetInstanceError, AppAvailabilitiesV2GetInstanceResponse, AppAvailabilitiesCreateInstanceData, AppAvailabilitiesCreateInstanceError, AppAvailabilitiesCreateInstanceResponse, AppAvailabilitiesGetInstanceData, AppAvailabilitiesGetInstanceError, AppAvailabilitiesGetInstanceResponse, AppCategoriesGetCollectionData, AppCategoriesGetCollectionError, AppCategoriesGetCollectionResponse, AppCategoriesGetInstanceData, AppCategoriesGetInstanceError, AppCategoriesGetInstanceResponse, AppClipAdvancedExperienceImagesCreateInstanceData, AppClipAdvancedExperienceImagesCreateInstanceError, AppClipAdvancedExperienceImagesCreateInstanceResponse, AppClipAdvancedExperienceImagesGetInstanceData, AppClipAdvancedExperienceImagesGetInstanceError, AppClipAdvancedExperienceImagesGetInstanceResponse, AppClipAdvancedExperienceImagesUpdateInstanceData, AppClipAdvancedExperienceImagesUpdateInstanceError, AppClipAdvancedExperienceImagesUpdateInstanceResponse, AppClipAdvancedExperiencesCreateInstanceData, AppClipAdvancedExperiencesCreateInstanceError, AppClipAdvancedExperiencesCreateInstanceResponse, AppClipAdvancedExperiencesGetInstanceData, AppClipAdvancedExperiencesGetInstanceError, AppClipAdvancedExperiencesGetInstanceResponse, AppClipAdvancedExperiencesUpdateInstanceData, AppClipAdvancedExperiencesUpdateInstanceError, AppClipAdvancedExperiencesUpdateInstanceResponse, AppClipAppStoreReviewDetailsCreateInstanceData, AppClipAppStoreReviewDetailsCreateInstanceError, AppClipAppStoreReviewDetailsCreateInstanceResponse, AppClipAppStoreReviewDetailsGetInstanceData, AppClipAppStoreReviewDetailsGetInstanceError, AppClipAppStoreReviewDetailsGetInstanceResponse, AppClipAppStoreReviewDetailsUpdateInstanceData, AppClipAppStoreReviewDetailsUpdateInstanceError, AppClipAppStoreReviewDetailsUpdateInstanceResponse, AppClipDefaultExperienceLocalizationsCreateInstanceData, AppClipDefaultExperienceLocalizationsCreateInstanceError, AppClipDefaultExperienceLocalizationsCreateInstanceResponse, AppClipDefaultExperienceLocalizationsGetInstanceData, AppClipDefaultExperienceLocalizationsGetInstanceError, AppClipDefaultExperienceLocalizationsGetInstanceResponse, AppClipDefaultExperienceLocalizationsUpdateInstanceData, AppClipDefaultExperienceLocalizationsUpdateInstanceError, AppClipDefaultExperienceLocalizationsUpdateInstanceResponse, AppClipDefaultExperienceLocalizationsDeleteInstanceData, AppClipDefaultExperienceLocalizationsDeleteInstanceError, AppClipDefaultExperienceLocalizationsDeleteInstanceResponse, AppClipDefaultExperiencesCreateInstanceData, AppClipDefaultExperiencesCreateInstanceError, AppClipDefaultExperiencesCreateInstanceResponse, AppClipDefaultExperiencesGetInstanceData, AppClipDefaultExperiencesGetInstanceError, AppClipDefaultExperiencesGetInstanceResponse, AppClipDefaultExperiencesUpdateInstanceData, AppClipDefaultExperiencesUpdateInstanceError, AppClipDefaultExperiencesUpdateInstanceResponse, AppClipDefaultExperiencesDeleteInstanceData, AppClipDefaultExperiencesDeleteInstanceError, AppClipDefaultExperiencesDeleteInstanceResponse, AppClipHeaderImagesCreateInstanceData, AppClipHeaderImagesCreateInstanceError, AppClipHeaderImagesCreateInstanceResponse, AppClipHeaderImagesGetInstanceData, AppClipHeaderImagesGetInstanceError, AppClipHeaderImagesGetInstanceResponse, AppClipHeaderImagesUpdateInstanceData, AppClipHeaderImagesUpdateInstanceError, AppClipHeaderImagesUpdateInstanceResponse, AppClipHeaderImagesDeleteInstanceData, AppClipHeaderImagesDeleteInstanceError, AppClipHeaderImagesDeleteInstanceResponse, AppClipsGetInstanceData, AppClipsGetInstanceError, AppClipsGetInstanceResponse, AppCustomProductPageLocalizationsCreateInstanceData, AppCustomProductPageLocalizationsCreateInstanceError, AppCustomProductPageLocalizationsCreateInstanceResponse, AppCustomProductPageLocalizationsGetInstanceData, AppCustomProductPageLocalizationsGetInstanceError, AppCustomProductPageLocalizationsGetInstanceResponse, AppCustomProductPageLocalizationsUpdateInstanceData, AppCustomProductPageLocalizationsUpdateInstanceError, AppCustomProductPageLocalizationsUpdateInstanceResponse, AppCustomProductPageLocalizationsDeleteInstanceData, AppCustomProductPageLocalizationsDeleteInstanceError, AppCustomProductPageLocalizationsDeleteInstanceResponse, AppCustomProductPageVersionsCreateInstanceData, AppCustomProductPageVersionsCreateInstanceError, AppCustomProductPageVersionsCreateInstanceResponse, AppCustomProductPageVersionsGetInstanceData, AppCustomProductPageVersionsGetInstanceError, AppCustomProductPageVersionsGetInstanceResponse, AppCustomProductPageVersionsUpdateInstanceData, AppCustomProductPageVersionsUpdateInstanceError, AppCustomProductPageVersionsUpdateInstanceResponse, AppCustomProductPagesCreateInstanceData, AppCustomProductPagesCreateInstanceError, AppCustomProductPagesCreateInstanceResponse, AppCustomProductPagesGetInstanceData, AppCustomProductPagesGetInstanceError, AppCustomProductPagesGetInstanceResponse, AppCustomProductPagesUpdateInstanceData, AppCustomProductPagesUpdateInstanceError, AppCustomProductPagesUpdateInstanceResponse, AppCustomProductPagesDeleteInstanceData, AppCustomProductPagesDeleteInstanceError, AppCustomProductPagesDeleteInstanceResponse, AppEncryptionDeclarationDocumentsCreateInstanceData, AppEncryptionDeclarationDocumentsCreateInstanceError, AppEncryptionDeclarationDocumentsCreateInstanceResponse, AppEncryptionDeclarationDocumentsGetInstanceData, AppEncryptionDeclarationDocumentsGetInstanceError, AppEncryptionDeclarationDocumentsGetInstanceResponse, AppEncryptionDeclarationDocumentsUpdateInstanceData, AppEncryptionDeclarationDocumentsUpdateInstanceError, AppEncryptionDeclarationDocumentsUpdateInstanceResponse, AppEncryptionDeclarationsGetCollectionData, AppEncryptionDeclarationsGetCollectionError, AppEncryptionDeclarationsGetCollectionResponse, AppEncryptionDeclarationsCreateInstanceData, AppEncryptionDeclarationsCreateInstanceError, AppEncryptionDeclarationsCreateInstanceResponse, AppEncryptionDeclarationsGetInstanceData, AppEncryptionDeclarationsGetInstanceError, AppEncryptionDeclarationsGetInstanceResponse, AppEventLocalizationsCreateInstanceData, AppEventLocalizationsCreateInstanceError, AppEventLocalizationsCreateInstanceResponse, AppEventLocalizationsGetInstanceData, AppEventLocalizationsGetInstanceError, AppEventLocalizationsGetInstanceResponse, AppEventLocalizationsUpdateInstanceData, AppEventLocalizationsUpdateInstanceError, AppEventLocalizationsUpdateInstanceResponse, AppEventLocalizationsDeleteInstanceData, AppEventLocalizationsDeleteInstanceError, AppEventLocalizationsDeleteInstanceResponse, AppEventScreenshotsCreateInstanceData, AppEventScreenshotsCreateInstanceError, AppEventScreenshotsCreateInstanceResponse, AppEventScreenshotsGetInstanceData, AppEventScreenshotsGetInstanceError, AppEventScreenshotsGetInstanceResponse, AppEventScreenshotsUpdateInstanceData, AppEventScreenshotsUpdateInstanceError, AppEventScreenshotsUpdateInstanceResponse, AppEventScreenshotsDeleteInstanceData, AppEventScreenshotsDeleteInstanceError, AppEventScreenshotsDeleteInstanceResponse, AppEventVideoClipsCreateInstanceData, AppEventVideoClipsCreateInstanceError, AppEventVideoClipsCreateInstanceResponse, AppEventVideoClipsGetInstanceData, AppEventVideoClipsGetInstanceError, AppEventVideoClipsGetInstanceResponse, AppEventVideoClipsUpdateInstanceData, AppEventVideoClipsUpdateInstanceError, AppEventVideoClipsUpdateInstanceResponse, AppEventVideoClipsDeleteInstanceData, AppEventVideoClipsDeleteInstanceError, AppEventVideoClipsDeleteInstanceResponse, AppEventsCreateInstanceData, AppEventsCreateInstanceError, AppEventsCreateInstanceResponse, AppEventsGetInstanceData, AppEventsGetInstanceError, AppEventsGetInstanceResponse, AppEventsUpdateInstanceData, AppEventsUpdateInstanceError, AppEventsUpdateInstanceResponse, AppEventsDeleteInstanceData, AppEventsDeleteInstanceError, AppEventsDeleteInstanceResponse, AppInfoLocalizationsCreateInstanceData, AppInfoLocalizationsCreateInstanceError, AppInfoLocalizationsCreateInstanceResponse, AppInfoLocalizationsGetInstanceData, AppInfoLocalizationsGetInstanceError, AppInfoLocalizationsGetInstanceResponse, AppInfoLocalizationsUpdateInstanceData, AppInfoLocalizationsUpdateInstanceError, AppInfoLocalizationsUpdateInstanceResponse, AppInfoLocalizationsDeleteInstanceData, AppInfoLocalizationsDeleteInstanceError, AppInfoLocalizationsDeleteInstanceResponse, AppInfosGetInstanceData, AppInfosGetInstanceError, AppInfosGetInstanceResponse, AppInfosUpdateInstanceData, AppInfosUpdateInstanceError, AppInfosUpdateInstanceResponse, AppPreOrdersCreateInstanceData, AppPreOrdersCreateInstanceError, AppPreOrdersCreateInstanceResponse, AppPreOrdersGetInstanceData, AppPreOrdersGetInstanceError, AppPreOrdersGetInstanceResponse, AppPreOrdersUpdateInstanceData, AppPreOrdersUpdateInstanceError, AppPreOrdersUpdateInstanceResponse, AppPreOrdersDeleteInstanceData, AppPreOrdersDeleteInstanceError, AppPreOrdersDeleteInstanceResponse, AppPreviewSetsCreateInstanceData, AppPreviewSetsCreateInstanceError, AppPreviewSetsCreateInstanceResponse, AppPreviewSetsGetInstanceData, AppPreviewSetsGetInstanceError, AppPreviewSetsGetInstanceResponse, AppPreviewSetsDeleteInstanceData, AppPreviewSetsDeleteInstanceError, AppPreviewSetsDeleteInstanceResponse, AppPreviewsCreateInstanceData, AppPreviewsCreateInstanceError, AppPreviewsCreateInstanceResponse, AppPreviewsGetInstanceData, AppPreviewsGetInstanceError, AppPreviewsGetInstanceResponse, AppPreviewsUpdateInstanceData, AppPreviewsUpdateInstanceError, AppPreviewsUpdateInstanceResponse, AppPreviewsDeleteInstanceData, AppPreviewsDeleteInstanceError, AppPreviewsDeleteInstanceResponse, AppPricePointsV3GetInstanceData, AppPricePointsV3GetInstanceError, AppPricePointsV3GetInstanceResponse, AppPriceSchedulesCreateInstanceData, AppPriceSchedulesCreateInstanceError, AppPriceSchedulesCreateInstanceResponse, AppPriceSchedulesGetInstanceData, AppPriceSchedulesGetInstanceError, AppPriceSchedulesGetInstanceResponse, AppScreenshotSetsCreateInstanceData, AppScreenshotSetsCreateInstanceError, AppScreenshotSetsCreateInstanceResponse, AppScreenshotSetsGetInstanceData, AppScreenshotSetsGetInstanceError, AppScreenshotSetsGetInstanceResponse, AppScreenshotSetsDeleteInstanceData, AppScreenshotSetsDeleteInstanceError, AppScreenshotSetsDeleteInstanceResponse, AppScreenshotsCreateInstanceData, AppScreenshotsCreateInstanceError, AppScreenshotsCreateInstanceResponse, AppScreenshotsGetInstanceData, AppScreenshotsGetInstanceError, AppScreenshotsGetInstanceResponse, AppScreenshotsUpdateInstanceData, AppScreenshotsUpdateInstanceError, AppScreenshotsUpdateInstanceResponse, AppScreenshotsDeleteInstanceData, AppScreenshotsDeleteInstanceError, AppScreenshotsDeleteInstanceResponse, AppStoreReviewAttachmentsCreateInstanceData, AppStoreReviewAttachmentsCreateInstanceError, AppStoreReviewAttachmentsCreateInstanceResponse, AppStoreReviewAttachmentsGetInstanceData, AppStoreReviewAttachmentsGetInstanceError, AppStoreReviewAttachmentsGetInstanceResponse, AppStoreReviewAttachmentsUpdateInstanceData, AppStoreReviewAttachmentsUpdateInstanceError, AppStoreReviewAttachmentsUpdateInstanceResponse, AppStoreReviewAttachmentsDeleteInstanceData, AppStoreReviewAttachmentsDeleteInstanceError, AppStoreReviewAttachmentsDeleteInstanceResponse, AppStoreReviewDetailsCreateInstanceData, AppStoreReviewDetailsCreateInstanceError, AppStoreReviewDetailsCreateInstanceResponse, AppStoreReviewDetailsGetInstanceData, AppStoreReviewDetailsGetInstanceError, AppStoreReviewDetailsGetInstanceResponse, AppStoreReviewDetailsUpdateInstanceData, AppStoreReviewDetailsUpdateInstanceError, AppStoreReviewDetailsUpdateInstanceResponse, AppStoreVersionExperimentTreatmentLocalizationsCreateInstanceData, AppStoreVersionExperimentTreatmentLocalizationsCreateInstanceError, AppStoreVersionExperimentTreatmentLocalizationsCreateInstanceResponse, AppStoreVersionExperimentTreatmentLocalizationsGetInstanceData, AppStoreVersionExperimentTreatmentLocalizationsGetInstanceError, AppStoreVersionExperimentTreatmentLocalizationsGetInstanceResponse, AppStoreVersionExperimentTreatmentLocalizationsDeleteInstanceData, AppStoreVersionExperimentTreatmentLocalizationsDeleteInstanceError, AppStoreVersionExperimentTreatmentLocalizationsDeleteInstanceResponse, AppStoreVersionExperimentTreatmentsCreateInstanceData, AppStoreVersionExperimentTreatmentsCreateInstanceError, AppStoreVersionExperimentTreatmentsCreateInstanceResponse, AppStoreVersionExperimentTreatmentsGetInstanceData, AppStoreVersionExperimentTreatmentsGetInstanceError, AppStoreVersionExperimentTreatmentsGetInstanceResponse, AppStoreVersionExperimentTreatmentsUpdateInstanceData, AppStoreVersionExperimentTreatmentsUpdateInstanceError, AppStoreVersionExperimentTreatmentsUpdateInstanceResponse, AppStoreVersionExperimentTreatmentsDeleteInstanceData, AppStoreVersionExperimentTreatmentsDeleteInstanceError, AppStoreVersionExperimentTreatmentsDeleteInstanceResponse, AppStoreVersionExperimentsV2CreateInstanceData, AppStoreVersionExperimentsV2CreateInstanceError, AppStoreVersionExperimentsV2CreateInstanceResponse, AppStoreVersionExperimentsV2GetInstanceData, AppStoreVersionExperimentsV2GetInstanceError, AppStoreVersionExperimentsV2GetInstanceResponse, AppStoreVersionExperimentsV2UpdateInstanceData, AppStoreVersionExperimentsV2UpdateInstanceError, AppStoreVersionExperimentsV2UpdateInstanceResponse, AppStoreVersionExperimentsV2DeleteInstanceData, AppStoreVersionExperimentsV2DeleteInstanceError, AppStoreVersionExperimentsV2DeleteInstanceResponse, AppStoreVersionExperimentsCreateInstanceData, AppStoreVersionExperimentsCreateInstanceError, AppStoreVersionExperimentsCreateInstanceResponse, AppStoreVersionExperimentsGetInstanceData, AppStoreVersionExperimentsGetInstanceError, AppStoreVersionExperimentsGetInstanceResponse, AppStoreVersionExperimentsUpdateInstanceData, AppStoreVersionExperimentsUpdateInstanceError, AppStoreVersionExperimentsUpdateInstanceResponse, AppStoreVersionExperimentsDeleteInstanceData, AppStoreVersionExperimentsDeleteInstanceError, AppStoreVersionExperimentsDeleteInstanceResponse, AppStoreVersionLocalizationsCreateInstanceData, AppStoreVersionLocalizationsCreateInstanceError, AppStoreVersionLocalizationsCreateInstanceResponse, AppStoreVersionLocalizationsGetInstanceData, AppStoreVersionLocalizationsGetInstanceError, AppStoreVersionLocalizationsGetInstanceResponse, AppStoreVersionLocalizationsUpdateInstanceData, AppStoreVersionLocalizationsUpdateInstanceError, AppStoreVersionLocalizationsUpdateInstanceResponse, AppStoreVersionLocalizationsDeleteInstanceData, AppStoreVersionLocalizationsDeleteInstanceError, AppStoreVersionLocalizationsDeleteInstanceResponse, AppStoreVersionPhasedReleasesCreateInstanceData, AppStoreVersionPhasedReleasesCreateInstanceError, AppStoreVersionPhasedReleasesCreateInstanceResponse, AppStoreVersionPhasedReleasesUpdateInstanceData, AppStoreVersionPhasedReleasesUpdateInstanceError, AppStoreVersionPhasedReleasesUpdateInstanceResponse, AppStoreVersionPhasedReleasesDeleteInstanceData, AppStoreVersionPhasedReleasesDeleteInstanceError, AppStoreVersionPhasedReleasesDeleteInstanceResponse, AppStoreVersionPromotionsCreateInstanceData, AppStoreVersionPromotionsCreateInstanceError, AppStoreVersionPromotionsCreateInstanceResponse, AppStoreVersionReleaseRequestsCreateInstanceData, AppStoreVersionReleaseRequestsCreateInstanceError, AppStoreVersionReleaseRequestsCreateInstanceResponse, AppStoreVersionSubmissionsCreateInstanceData, AppStoreVersionSubmissionsCreateInstanceError, AppStoreVersionSubmissionsCreateInstanceResponse, AppStoreVersionSubmissionsDeleteInstanceData, AppStoreVersionSubmissionsDeleteInstanceError, AppStoreVersionSubmissionsDeleteInstanceResponse, AppStoreVersionsCreateInstanceData, AppStoreVersionsCreateInstanceError, AppStoreVersionsCreateInstanceResponse, AppStoreVersionsGetInstanceData, AppStoreVersionsGetInstanceError, AppStoreVersionsGetInstanceResponse, AppStoreVersionsUpdateInstanceData, AppStoreVersionsUpdateInstanceError, AppStoreVersionsUpdateInstanceResponse, AppStoreVersionsDeleteInstanceData, AppStoreVersionsDeleteInstanceError, AppStoreVersionsDeleteInstanceResponse, AppsGetCollectionData, AppsGetCollectionError, AppsGetCollectionResponse, AppsGetInstanceData, AppsGetInstanceError, AppsGetInstanceResponse, AppsUpdateInstanceData, AppsUpdateInstanceError, AppsUpdateInstanceResponse, BetaAppClipInvocationLocalizationsCreateInstanceData, BetaAppClipInvocationLocalizationsCreateInstanceError, BetaAppClipInvocationLocalizationsCreateInstanceResponse, BetaAppClipInvocationLocalizationsUpdateInstanceData, BetaAppClipInvocationLocalizationsUpdateInstanceError, BetaAppClipInvocationLocalizationsUpdateInstanceResponse, BetaAppClipInvocationLocalizationsDeleteInstanceData, BetaAppClipInvocationLocalizationsDeleteInstanceError, BetaAppClipInvocationLocalizationsDeleteInstanceResponse, BetaAppClipInvocationsCreateInstanceData, BetaAppClipInvocationsCreateInstanceError, BetaAppClipInvocationsCreateInstanceResponse, BetaAppClipInvocationsGetInstanceData, BetaAppClipInvocationsGetInstanceError, BetaAppClipInvocationsGetInstanceResponse, BetaAppClipInvocationsUpdateInstanceData, BetaAppClipInvocationsUpdateInstanceError, BetaAppClipInvocationsUpdateInstanceResponse, BetaAppClipInvocationsDeleteInstanceData, BetaAppClipInvocationsDeleteInstanceError, BetaAppClipInvocationsDeleteInstanceResponse, BetaAppLocalizationsGetCollectionData, BetaAppLocalizationsGetCollectionError, BetaAppLocalizationsGetCollectionResponse, BetaAppLocalizationsCreateInstanceData, BetaAppLocalizationsCreateInstanceError, BetaAppLocalizationsCreateInstanceResponse, BetaAppLocalizationsGetInstanceData, BetaAppLocalizationsGetInstanceError, BetaAppLocalizationsGetInstanceResponse, BetaAppLocalizationsUpdateInstanceData, BetaAppLocalizationsUpdateInstanceError, BetaAppLocalizationsUpdateInstanceResponse, BetaAppLocalizationsDeleteInstanceData, BetaAppLocalizationsDeleteInstanceError, BetaAppLocalizationsDeleteInstanceResponse, BetaAppReviewDetailsGetCollectionData, BetaAppReviewDetailsGetCollectionError, BetaAppReviewDetailsGetCollectionResponse, BetaAppReviewDetailsGetInstanceData, BetaAppReviewDetailsGetInstanceError, BetaAppReviewDetailsGetInstanceResponse, BetaAppReviewDetailsUpdateInstanceData, BetaAppReviewDetailsUpdateInstanceError, BetaAppReviewDetailsUpdateInstanceResponse, BetaAppReviewSubmissionsGetCollectionData, BetaAppReviewSubmissionsGetCollectionError, BetaAppReviewSubmissionsGetCollectionResponse, BetaAppReviewSubmissionsCreateInstanceData, BetaAppReviewSubmissionsCreateInstanceError, BetaAppReviewSubmissionsCreateInstanceResponse, BetaAppReviewSubmissionsGetInstanceData, BetaAppReviewSubmissionsGetInstanceError, BetaAppReviewSubmissionsGetInstanceResponse, BetaBuildLocalizationsGetCollectionData, BetaBuildLocalizationsGetCollectionError, BetaBuildLocalizationsGetCollectionResponse, BetaBuildLocalizationsCreateInstanceData, BetaBuildLocalizationsCreateInstanceError, BetaBuildLocalizationsCreateInstanceResponse, BetaBuildLocalizationsGetInstanceData, BetaBuildLocalizationsGetInstanceError, BetaBuildLocalizationsGetInstanceResponse, BetaBuildLocalizationsUpdateInstanceData, BetaBuildLocalizationsUpdateInstanceError, BetaBuildLocalizationsUpdateInstanceResponse, BetaBuildLocalizationsDeleteInstanceData, BetaBuildLocalizationsDeleteInstanceError, BetaBuildLocalizationsDeleteInstanceResponse, BetaGroupsGetCollectionData, BetaGroupsGetCollectionError, BetaGroupsGetCollectionResponse, BetaGroupsCreateInstanceData, BetaGroupsCreateInstanceError, BetaGroupsCreateInstanceResponse, BetaGroupsGetInstanceData, BetaGroupsGetInstanceError, BetaGroupsGetInstanceResponse, BetaGroupsUpdateInstanceData, BetaGroupsUpdateInstanceError, BetaGroupsUpdateInstanceResponse, BetaGroupsDeleteInstanceData, BetaGroupsDeleteInstanceError, BetaGroupsDeleteInstanceResponse, BetaLicenseAgreementsGetCollectionData, BetaLicenseAgreementsGetCollectionError, BetaLicenseAgreementsGetCollectionResponse, BetaLicenseAgreementsGetInstanceData, BetaLicenseAgreementsGetInstanceError, BetaLicenseAgreementsGetInstanceResponse, BetaLicenseAgreementsUpdateInstanceData, BetaLicenseAgreementsUpdateInstanceError, BetaLicenseAgreementsUpdateInstanceResponse, BetaTesterInvitationsCreateInstanceData, BetaTesterInvitationsCreateInstanceError, BetaTesterInvitationsCreateInstanceResponse, BetaTestersGetCollectionData, BetaTestersGetCollectionError, BetaTestersGetCollectionResponse, BetaTestersCreateInstanceData, BetaTestersCreateInstanceError, BetaTestersCreateInstanceResponse, BetaTestersGetInstanceData, BetaTestersGetInstanceError, BetaTestersGetInstanceResponse, BetaTestersDeleteInstanceData, BetaTestersDeleteInstanceError, BetaTestersDeleteInstanceResponse, BuildBetaDetailsGetCollectionData, BuildBetaDetailsGetCollectionError, BuildBetaDetailsGetCollectionResponse, BuildBetaDetailsGetInstanceData, BuildBetaDetailsGetInstanceError, BuildBetaDetailsGetInstanceResponse, BuildBetaDetailsUpdateInstanceData, BuildBetaDetailsUpdateInstanceError, BuildBetaDetailsUpdateInstanceResponse, BuildBetaNotificationsCreateInstanceData, BuildBetaNotificationsCreateInstanceError, BuildBetaNotificationsCreateInstanceResponse, BuildsGetCollectionData, BuildsGetCollectionError, BuildsGetCollectionResponse, BuildsGetInstanceData, BuildsGetInstanceError, BuildsGetInstanceResponse, BuildsUpdateInstanceData, BuildsUpdateInstanceError, BuildsUpdateInstanceResponse, BundleIdCapabilitiesCreateInstanceData, BundleIdCapabilitiesCreateInstanceError, BundleIdCapabilitiesCreateInstanceResponse, BundleIdCapabilitiesUpdateInstanceData, BundleIdCapabilitiesUpdateInstanceError, BundleIdCapabilitiesUpdateInstanceResponse, BundleIdCapabilitiesDeleteInstanceData, BundleIdCapabilitiesDeleteInstanceError, BundleIdCapabilitiesDeleteInstanceResponse, BundleIdsGetCollectionData, BundleIdsGetCollectionError, BundleIdsGetCollectionResponse, BundleIdsCreateInstanceData, BundleIdsCreateInstanceError, BundleIdsCreateInstanceResponse, BundleIdsGetInstanceData, BundleIdsGetInstanceError, BundleIdsGetInstanceResponse, BundleIdsUpdateInstanceData, BundleIdsUpdateInstanceError, BundleIdsUpdateInstanceResponse, BundleIdsDeleteInstanceData, BundleIdsDeleteInstanceError, BundleIdsDeleteInstanceResponse, CertificatesGetCollectionData, CertificatesGetCollectionError, CertificatesGetCollectionResponse, CertificatesCreateInstanceData, CertificatesCreateInstanceError, CertificatesCreateInstanceResponse, CertificatesGetInstanceData, CertificatesGetInstanceError, CertificatesGetInstanceResponse, CertificatesDeleteInstanceData, CertificatesDeleteInstanceError, CertificatesDeleteInstanceResponse, CiArtifactsGetInstanceData, CiArtifactsGetInstanceError, CiArtifactsGetInstanceResponse, CiBuildActionsGetInstanceData, CiBuildActionsGetInstanceError, CiBuildActionsGetInstanceResponse, CiBuildRunsCreateInstanceData, CiBuildRunsCreateInstanceError, CiBuildRunsCreateInstanceResponse, CiBuildRunsGetInstanceData, CiBuildRunsGetInstanceError, CiBuildRunsGetInstanceResponse, CiIssuesGetInstanceData, CiIssuesGetInstanceError, CiIssuesGetInstanceResponse, CiMacOsVersionsGetCollectionData, CiMacOsVersionsGetCollectionError, CiMacOsVersionsGetCollectionResponse, CiMacOsVersionsGetInstanceData, CiMacOsVersionsGetInstanceError, CiMacOsVersionsGetInstanceResponse, CiProductsGetCollectionData, CiProductsGetCollectionError, CiProductsGetCollectionResponse, CiProductsGetInstanceData, CiProductsGetInstanceError, CiProductsGetInstanceResponse, CiProductsDeleteInstanceData, CiProductsDeleteInstanceError, CiProductsDeleteInstanceResponse, CiTestResultsGetInstanceData, CiTestResultsGetInstanceError, CiTestResultsGetInstanceResponse, CiWorkflowsCreateInstanceData, CiWorkflowsCreateInstanceError, CiWorkflowsCreateInstanceResponse, CiWorkflowsGetInstanceData, CiWorkflowsGetInstanceError, CiWorkflowsGetInstanceResponse, CiWorkflowsUpdateInstanceData, CiWorkflowsUpdateInstanceError, CiWorkflowsUpdateInstanceResponse, CiWorkflowsDeleteInstanceData, CiWorkflowsDeleteInstanceError, CiWorkflowsDeleteInstanceResponse, CiXcodeVersionsGetCollectionData, CiXcodeVersionsGetCollectionError, CiXcodeVersionsGetCollectionResponse, CiXcodeVersionsGetInstanceData, CiXcodeVersionsGetInstanceError, CiXcodeVersionsGetInstanceResponse, CustomerReviewResponsesCreateInstanceData, CustomerReviewResponsesCreateInstanceError, CustomerReviewResponsesCreateInstanceResponse, CustomerReviewResponsesGetInstanceData, CustomerReviewResponsesGetInstanceError, CustomerReviewResponsesGetInstanceResponse, CustomerReviewResponsesDeleteInstanceData, CustomerReviewResponsesDeleteInstanceError, CustomerReviewResponsesDeleteInstanceResponse, CustomerReviewsGetInstanceData, CustomerReviewsGetInstanceError, CustomerReviewsGetInstanceResponse, DevicesGetCollectionData, DevicesGetCollectionError, DevicesGetCollectionResponse, DevicesCreateInstanceData, DevicesCreateInstanceError, DevicesCreateInstanceResponse, DevicesGetInstanceData, DevicesGetInstanceError, DevicesGetInstanceResponse, DevicesUpdateInstanceData, DevicesUpdateInstanceError, DevicesUpdateInstanceResponse, EndAppAvailabilityPreOrdersCreateInstanceData, EndAppAvailabilityPreOrdersCreateInstanceError, EndAppAvailabilityPreOrdersCreateInstanceResponse, EndUserLicenseAgreementsCreateInstanceData, EndUserLicenseAgreementsCreateInstanceError, EndUserLicenseAgreementsCreateInstanceResponse, EndUserLicenseAgreementsGetInstanceData, EndUserLicenseAgreementsGetInstanceError, EndUserLicenseAgreementsGetInstanceResponse, EndUserLicenseAgreementsUpdateInstanceData, EndUserLicenseAgreementsUpdateInstanceError, EndUserLicenseAgreementsUpdateInstanceResponse, EndUserLicenseAgreementsDeleteInstanceData, EndUserLicenseAgreementsDeleteInstanceError, EndUserLicenseAgreementsDeleteInstanceResponse, FinanceReportsGetCollectionData, FinanceReportsGetCollectionError, FinanceReportsGetCollectionResponse, GameCenterAchievementImagesCreateInstanceData, GameCenterAchievementImagesCreateInstanceError, GameCenterAchievementImagesCreateInstanceResponse, GameCenterAchievementImagesGetInstanceData, GameCenterAchievementImagesGetInstanceError, GameCenterAchievementImagesGetInstanceResponse, GameCenterAchievementImagesUpdateInstanceData, GameCenterAchievementImagesUpdateInstanceError, GameCenterAchievementImagesUpdateInstanceResponse, GameCenterAchievementImagesDeleteInstanceData, GameCenterAchievementImagesDeleteInstanceError, GameCenterAchievementImagesDeleteInstanceResponse, GameCenterAchievementLocalizationsCreateInstanceData, GameCenterAchievementLocalizationsCreateInstanceError, GameCenterAchievementLocalizationsCreateInstanceResponse, GameCenterAchievementLocalizationsGetInstanceData, GameCenterAchievementLocalizationsGetInstanceError, GameCenterAchievementLocalizationsGetInstanceResponse, GameCenterAchievementLocalizationsUpdateInstanceData, GameCenterAchievementLocalizationsUpdateInstanceError, GameCenterAchievementLocalizationsUpdateInstanceResponse, GameCenterAchievementLocalizationsDeleteInstanceData, GameCenterAchievementLocalizationsDeleteInstanceError, GameCenterAchievementLocalizationsDeleteInstanceResponse, GameCenterAchievementReleasesCreateInstanceData, GameCenterAchievementReleasesCreateInstanceError, GameCenterAchievementReleasesCreateInstanceResponse, GameCenterAchievementReleasesGetInstanceData, GameCenterAchievementReleasesGetInstanceError, GameCenterAchievementReleasesGetInstanceResponse, GameCenterAchievementReleasesDeleteInstanceData, GameCenterAchievementReleasesDeleteInstanceError, GameCenterAchievementReleasesDeleteInstanceResponse, GameCenterAchievementsCreateInstanceData, GameCenterAchievementsCreateInstanceError, GameCenterAchievementsCreateInstanceResponse, GameCenterAchievementsGetInstanceData, GameCenterAchievementsGetInstanceError, GameCenterAchievementsGetInstanceResponse, GameCenterAchievementsUpdateInstanceData, GameCenterAchievementsUpdateInstanceError, GameCenterAchievementsUpdateInstanceResponse, GameCenterAchievementsDeleteInstanceData, GameCenterAchievementsDeleteInstanceError, GameCenterAchievementsDeleteInstanceResponse, GameCenterAppVersionsCreateInstanceData, GameCenterAppVersionsCreateInstanceError, GameCenterAppVersionsCreateInstanceResponse, GameCenterAppVersionsGetInstanceData, GameCenterAppVersionsGetInstanceError, GameCenterAppVersionsGetInstanceResponse, GameCenterAppVersionsUpdateInstanceData, GameCenterAppVersionsUpdateInstanceError, GameCenterAppVersionsUpdateInstanceResponse, GameCenterDetailsCreateInstanceData, GameCenterDetailsCreateInstanceError, GameCenterDetailsCreateInstanceResponse, GameCenterDetailsGetInstanceData, GameCenterDetailsGetInstanceError, GameCenterDetailsGetInstanceResponse, GameCenterDetailsUpdateInstanceData, GameCenterDetailsUpdateInstanceError, GameCenterDetailsUpdateInstanceResponse, GameCenterGroupsGetCollectionData, GameCenterGroupsGetCollectionError, GameCenterGroupsGetCollectionResponse, GameCenterGroupsCreateInstanceData, GameCenterGroupsCreateInstanceError, GameCenterGroupsCreateInstanceResponse, GameCenterGroupsGetInstanceData, GameCenterGroupsGetInstanceError, GameCenterGroupsGetInstanceResponse, GameCenterGroupsUpdateInstanceData, GameCenterGroupsUpdateInstanceError, GameCenterGroupsUpdateInstanceResponse, GameCenterGroupsDeleteInstanceData, GameCenterGroupsDeleteInstanceError, GameCenterGroupsDeleteInstanceResponse, GameCenterLeaderboardEntrySubmissionsCreateInstanceData, GameCenterLeaderboardEntrySubmissionsCreateInstanceError, GameCenterLeaderboardEntrySubmissionsCreateInstanceResponse, GameCenterLeaderboardImagesCreateInstanceData, GameCenterLeaderboardImagesCreateInstanceError, GameCenterLeaderboardImagesCreateInstanceResponse, GameCenterLeaderboardImagesGetInstanceData, GameCenterLeaderboardImagesGetInstanceError, GameCenterLeaderboardImagesGetInstanceResponse, GameCenterLeaderboardImagesUpdateInstanceData, GameCenterLeaderboardImagesUpdateInstanceError, GameCenterLeaderboardImagesUpdateInstanceResponse, GameCenterLeaderboardImagesDeleteInstanceData, GameCenterLeaderboardImagesDeleteInstanceError, GameCenterLeaderboardImagesDeleteInstanceResponse, GameCenterLeaderboardLocalizationsCreateInstanceData, GameCenterLeaderboardLocalizationsCreateInstanceError, GameCenterLeaderboardLocalizationsCreateInstanceResponse, GameCenterLeaderboardLocalizationsGetInstanceData, GameCenterLeaderboardLocalizationsGetInstanceError, GameCenterLeaderboardLocalizationsGetInstanceResponse, GameCenterLeaderboardLocalizationsUpdateInstanceData, GameCenterLeaderboardLocalizationsUpdateInstanceError, GameCenterLeaderboardLocalizationsUpdateInstanceResponse, GameCenterLeaderboardLocalizationsDeleteInstanceData, GameCenterLeaderboardLocalizationsDeleteInstanceError, GameCenterLeaderboardLocalizationsDeleteInstanceResponse, GameCenterLeaderboardReleasesCreateInstanceData, GameCenterLeaderboardReleasesCreateInstanceError, GameCenterLeaderboardReleasesCreateInstanceResponse, GameCenterLeaderboardReleasesGetInstanceData, GameCenterLeaderboardReleasesGetInstanceError, GameCenterLeaderboardReleasesGetInstanceResponse, GameCenterLeaderboardReleasesDeleteInstanceData, GameCenterLeaderboardReleasesDeleteInstanceError, GameCenterLeaderboardReleasesDeleteInstanceResponse, GameCenterLeaderboardSetImagesCreateInstanceData, GameCenterLeaderboardSetImagesCreateInstanceError, GameCenterLeaderboardSetImagesCreateInstanceResponse, GameCenterLeaderboardSetImagesGetInstanceData, GameCenterLeaderboardSetImagesGetInstanceError, GameCenterLeaderboardSetImagesGetInstanceResponse, GameCenterLeaderboardSetImagesUpdateInstanceData, GameCenterLeaderboardSetImagesUpdateInstanceError, GameCenterLeaderboardSetImagesUpdateInstanceResponse, GameCenterLeaderboardSetImagesDeleteInstanceData, GameCenterLeaderboardSetImagesDeleteInstanceError, GameCenterLeaderboardSetImagesDeleteInstanceResponse, GameCenterLeaderboardSetLocalizationsCreateInstanceData, GameCenterLeaderboardSetLocalizationsCreateInstanceError, GameCenterLeaderboardSetLocalizationsCreateInstanceResponse, GameCenterLeaderboardSetLocalizationsGetInstanceData, GameCenterLeaderboardSetLocalizationsGetInstanceError, GameCenterLeaderboardSetLocalizationsGetInstanceResponse, GameCenterLeaderboardSetLocalizationsUpdateInstanceData, GameCenterLeaderboardSetLocalizationsUpdateInstanceError, GameCenterLeaderboardSetLocalizationsUpdateInstanceResponse, GameCenterLeaderboardSetLocalizationsDeleteInstanceData, GameCenterLeaderboardSetLocalizationsDeleteInstanceError, GameCenterLeaderboardSetLocalizationsDeleteInstanceResponse, GameCenterLeaderboardSetMemberLocalizationsGetCollectionData, GameCenterLeaderboardSetMemberLocalizationsGetCollectionError, GameCenterLeaderboardSetMemberLocalizationsGetCollectionResponse, GameCenterLeaderboardSetMemberLocalizationsCreateInstanceData, GameCenterLeaderboardSetMemberLocalizationsCreateInstanceError, GameCenterLeaderboardSetMemberLocalizationsCreateInstanceResponse, GameCenterLeaderboardSetMemberLocalizationsUpdateInstanceData, GameCenterLeaderboardSetMemberLocalizationsUpdateInstanceError, GameCenterLeaderboardSetMemberLocalizationsUpdateInstanceResponse, GameCenterLeaderboardSetMemberLocalizationsDeleteInstanceData, GameCenterLeaderboardSetMemberLocalizationsDeleteInstanceError, GameCenterLeaderboardSetMemberLocalizationsDeleteInstanceResponse, GameCenterLeaderboardSetReleasesCreateInstanceData, GameCenterLeaderboardSetReleasesCreateInstanceError, GameCenterLeaderboardSetReleasesCreateInstanceResponse, GameCenterLeaderboardSetReleasesGetInstanceData, GameCenterLeaderboardSetReleasesGetInstanceError, GameCenterLeaderboardSetReleasesGetInstanceResponse, GameCenterLeaderboardSetReleasesDeleteInstanceData, GameCenterLeaderboardSetReleasesDeleteInstanceError, GameCenterLeaderboardSetReleasesDeleteInstanceResponse, GameCenterLeaderboardSetsCreateInstanceData, GameCenterLeaderboardSetsCreateInstanceError, GameCenterLeaderboardSetsCreateInstanceResponse, GameCenterLeaderboardSetsGetInstanceData, GameCenterLeaderboardSetsGetInstanceError, GameCenterLeaderboardSetsGetInstanceResponse, GameCenterLeaderboardSetsUpdateInstanceData, GameCenterLeaderboardSetsUpdateInstanceError, GameCenterLeaderboardSetsUpdateInstanceResponse, GameCenterLeaderboardSetsDeleteInstanceData, GameCenterLeaderboardSetsDeleteInstanceError, GameCenterLeaderboardSetsDeleteInstanceResponse, GameCenterLeaderboardsCreateInstanceData, GameCenterLeaderboardsCreateInstanceError, GameCenterLeaderboardsCreateInstanceResponse, GameCenterLeaderboardsGetInstanceData, GameCenterLeaderboardsGetInstanceError, GameCenterLeaderboardsGetInstanceResponse, GameCenterLeaderboardsUpdateInstanceData, GameCenterLeaderboardsUpdateInstanceError, GameCenterLeaderboardsUpdateInstanceResponse, GameCenterLeaderboardsDeleteInstanceData, GameCenterLeaderboardsDeleteInstanceError, GameCenterLeaderboardsDeleteInstanceResponse, GameCenterMatchmakingQueuesGetCollectionData, GameCenterMatchmakingQueuesGetCollectionError, GameCenterMatchmakingQueuesGetCollectionResponse, GameCenterMatchmakingQueuesCreateInstanceData, GameCenterMatchmakingQueuesCreateInstanceError, GameCenterMatchmakingQueuesCreateInstanceResponse, GameCenterMatchmakingQueuesGetInstanceData, GameCenterMatchmakingQueuesGetInstanceError, GameCenterMatchmakingQueuesGetInstanceResponse, GameCenterMatchmakingQueuesUpdateInstanceData, GameCenterMatchmakingQueuesUpdateInstanceError, GameCenterMatchmakingQueuesUpdateInstanceResponse, GameCenterMatchmakingQueuesDeleteInstanceData, GameCenterMatchmakingQueuesDeleteInstanceError, GameCenterMatchmakingQueuesDeleteInstanceResponse, GameCenterMatchmakingRuleSetTestsCreateInstanceData, GameCenterMatchmakingRuleSetTestsCreateInstanceError, GameCenterMatchmakingRuleSetTestsCreateInstanceResponse, GameCenterMatchmakingRuleSetsGetCollectionData, GameCenterMatchmakingRuleSetsGetCollectionError, GameCenterMatchmakingRuleSetsGetCollectionResponse, GameCenterMatchmakingRuleSetsCreateInstanceData, GameCenterMatchmakingRuleSetsCreateInstanceError, GameCenterMatchmakingRuleSetsCreateInstanceResponse, GameCenterMatchmakingRuleSetsGetInstanceData, GameCenterMatchmakingRuleSetsGetInstanceError, GameCenterMatchmakingRuleSetsGetInstanceResponse, GameCenterMatchmakingRuleSetsUpdateInstanceData, GameCenterMatchmakingRuleSetsUpdateInstanceError, GameCenterMatchmakingRuleSetsUpdateInstanceResponse, GameCenterMatchmakingRuleSetsDeleteInstanceData, GameCenterMatchmakingRuleSetsDeleteInstanceError, GameCenterMatchmakingRuleSetsDeleteInstanceResponse, GameCenterMatchmakingRulesCreateInstanceData, GameCenterMatchmakingRulesCreateInstanceError, GameCenterMatchmakingRulesCreateInstanceResponse, GameCenterMatchmakingRulesUpdateInstanceData, GameCenterMatchmakingRulesUpdateInstanceError, GameCenterMatchmakingRulesUpdateInstanceResponse, GameCenterMatchmakingRulesDeleteInstanceData, GameCenterMatchmakingRulesDeleteInstanceError, GameCenterMatchmakingRulesDeleteInstanceResponse, GameCenterMatchmakingTeamsCreateInstanceData, GameCenterMatchmakingTeamsCreateInstanceError, GameCenterMatchmakingTeamsCreateInstanceResponse, GameCenterMatchmakingTeamsUpdateInstanceData, GameCenterMatchmakingTeamsUpdateInstanceError, GameCenterMatchmakingTeamsUpdateInstanceResponse, GameCenterMatchmakingTeamsDeleteInstanceData, GameCenterMatchmakingTeamsDeleteInstanceError, GameCenterMatchmakingTeamsDeleteInstanceResponse, GameCenterPlayerAchievementSubmissionsCreateInstanceData, GameCenterPlayerAchievementSubmissionsCreateInstanceError, GameCenterPlayerAchievementSubmissionsCreateInstanceResponse, InAppPurchaseAppStoreReviewScreenshotsCreateInstanceData, InAppPurchaseAppStoreReviewScreenshotsCreateInstanceError, InAppPurchaseAppStoreReviewScreenshotsCreateInstanceResponse, InAppPurchaseAppStoreReviewScreenshotsGetInstanceData, InAppPurchaseAppStoreReviewScreenshotsGetInstanceError, InAppPurchaseAppStoreReviewScreenshotsGetInstanceResponse, InAppPurchaseAppStoreReviewScreenshotsUpdateInstanceData, InAppPurchaseAppStoreReviewScreenshotsUpdateInstanceError, InAppPurchaseAppStoreReviewScreenshotsUpdateInstanceResponse, InAppPurchaseAppStoreReviewScreenshotsDeleteInstanceData, InAppPurchaseAppStoreReviewScreenshotsDeleteInstanceError, InAppPurchaseAppStoreReviewScreenshotsDeleteInstanceResponse, InAppPurchaseAvailabilitiesCreateInstanceData, InAppPurchaseAvailabilitiesCreateInstanceError, InAppPurchaseAvailabilitiesCreateInstanceResponse, InAppPurchaseAvailabilitiesGetInstanceData, InAppPurchaseAvailabilitiesGetInstanceError, InAppPurchaseAvailabilitiesGetInstanceResponse, InAppPurchaseContentsGetInstanceData, InAppPurchaseContentsGetInstanceError, InAppPurchaseContentsGetInstanceResponse, InAppPurchaseImagesCreateInstanceData, InAppPurchaseImagesCreateInstanceError, InAppPurchaseImagesCreateInstanceResponse, InAppPurchaseImagesGetInstanceData, InAppPurchaseImagesGetInstanceError, InAppPurchaseImagesGetInstanceResponse, InAppPurchaseImagesUpdateInstanceData, InAppPurchaseImagesUpdateInstanceError, InAppPurchaseImagesUpdateInstanceResponse, InAppPurchaseImagesDeleteInstanceData, InAppPurchaseImagesDeleteInstanceError, InAppPurchaseImagesDeleteInstanceResponse, InAppPurchaseLocalizationsCreateInstanceData, InAppPurchaseLocalizationsCreateInstanceError, InAppPurchaseLocalizationsCreateInstanceResponse, InAppPurchaseLocalizationsGetInstanceData, InAppPurchaseLocalizationsGetInstanceError, InAppPurchaseLocalizationsGetInstanceResponse, InAppPurchaseLocalizationsUpdateInstanceData, InAppPurchaseLocalizationsUpdateInstanceError, InAppPurchaseLocalizationsUpdateInstanceResponse, InAppPurchaseLocalizationsDeleteInstanceData, InAppPurchaseLocalizationsDeleteInstanceError, InAppPurchaseLocalizationsDeleteInstanceResponse, InAppPurchasePriceSchedulesCreateInstanceData, InAppPurchasePriceSchedulesCreateInstanceError, InAppPurchasePriceSchedulesCreateInstanceResponse, InAppPurchasePriceSchedulesGetInstanceData, InAppPurchasePriceSchedulesGetInstanceError, InAppPurchasePriceSchedulesGetInstanceResponse, InAppPurchaseSubmissionsCreateInstanceData, InAppPurchaseSubmissionsCreateInstanceError, InAppPurchaseSubmissionsCreateInstanceResponse, InAppPurchasesGetInstanceData, InAppPurchasesGetInstanceError, InAppPurchasesGetInstanceResponse, InAppPurchasesV2CreateInstanceData, InAppPurchasesV2CreateInstanceError, InAppPurchasesV2CreateInstanceResponse, InAppPurchasesV2GetInstanceData, InAppPurchasesV2GetInstanceError, InAppPurchasesV2GetInstanceResponse, InAppPurchasesV2UpdateInstanceData, InAppPurchasesV2UpdateInstanceError, InAppPurchasesV2UpdateInstanceResponse, InAppPurchasesV2DeleteInstanceData, InAppPurchasesV2DeleteInstanceError, InAppPurchasesV2DeleteInstanceResponse, MarketplaceDomainsGetCollectionData, MarketplaceDomainsGetCollectionError, MarketplaceDomainsGetCollectionResponse, MarketplaceDomainsCreateInstanceData, MarketplaceDomainsCreateInstanceError, MarketplaceDomainsCreateInstanceResponse, MarketplaceDomainsGetInstanceData, MarketplaceDomainsGetInstanceError, MarketplaceDomainsGetInstanceResponse, MarketplaceDomainsDeleteInstanceData, MarketplaceDomainsDeleteInstanceError, MarketplaceDomainsDeleteInstanceResponse, MarketplaceSearchDetailsCreateInstanceData, MarketplaceSearchDetailsCreateInstanceError, MarketplaceSearchDetailsCreateInstanceResponse, MarketplaceSearchDetailsUpdateInstanceData, MarketplaceSearchDetailsUpdateInstanceError, MarketplaceSearchDetailsUpdateInstanceResponse, MarketplaceSearchDetailsDeleteInstanceData, MarketplaceSearchDetailsDeleteInstanceError, MarketplaceSearchDetailsDeleteInstanceResponse, MarketplaceWebhooksGetCollectionData, MarketplaceWebhooksGetCollectionError, MarketplaceWebhooksGetCollectionResponse, MarketplaceWebhooksCreateInstanceData, MarketplaceWebhooksCreateInstanceError, MarketplaceWebhooksCreateInstanceResponse, MarketplaceWebhooksUpdateInstanceData, MarketplaceWebhooksUpdateInstanceError, MarketplaceWebhooksUpdateInstanceResponse, MarketplaceWebhooksDeleteInstanceData, MarketplaceWebhooksDeleteInstanceError, MarketplaceWebhooksDeleteInstanceResponse, PreReleaseVersionsGetCollectionData, PreReleaseVersionsGetCollectionError, PreReleaseVersionsGetCollectionResponse, PreReleaseVersionsGetInstanceData, PreReleaseVersionsGetInstanceError, PreReleaseVersionsGetInstanceResponse, ProfilesGetCollectionData, ProfilesGetCollectionError, ProfilesGetCollectionResponse, ProfilesCreateInstanceData, ProfilesCreateInstanceError, ProfilesCreateInstanceResponse, ProfilesGetInstanceData, ProfilesGetInstanceError, ProfilesGetInstanceResponse, ProfilesDeleteInstanceData, ProfilesDeleteInstanceError, ProfilesDeleteInstanceResponse, PromotedPurchaseImagesCreateInstanceData, PromotedPurchaseImagesCreateInstanceError, PromotedPurchaseImagesCreateInstanceResponse, PromotedPurchaseImagesGetInstanceData, PromotedPurchaseImagesGetInstanceError, PromotedPurchaseImagesGetInstanceResponse, PromotedPurchaseImagesUpdateInstanceData, PromotedPurchaseImagesUpdateInstanceError, PromotedPurchaseImagesUpdateInstanceResponse, PromotedPurchaseImagesDeleteInstanceData, PromotedPurchaseImagesDeleteInstanceError, PromotedPurchaseImagesDeleteInstanceResponse, PromotedPurchasesCreateInstanceData, PromotedPurchasesCreateInstanceError, PromotedPurchasesCreateInstanceResponse, PromotedPurchasesGetInstanceData, PromotedPurchasesGetInstanceError, PromotedPurchasesGetInstanceResponse, PromotedPurchasesUpdateInstanceData, PromotedPurchasesUpdateInstanceError, PromotedPurchasesUpdateInstanceResponse, PromotedPurchasesDeleteInstanceData, PromotedPurchasesDeleteInstanceError, PromotedPurchasesDeleteInstanceResponse, ReviewSubmissionItemsCreateInstanceData, ReviewSubmissionItemsCreateInstanceError, ReviewSubmissionItemsCreateInstanceResponse, ReviewSubmissionItemsUpdateInstanceData, ReviewSubmissionItemsUpdateInstanceError, ReviewSubmissionItemsUpdateInstanceResponse, ReviewSubmissionItemsDeleteInstanceData, ReviewSubmissionItemsDeleteInstanceError, ReviewSubmissionItemsDeleteInstanceResponse, ReviewSubmissionsGetCollectionData, ReviewSubmissionsGetCollectionError, ReviewSubmissionsGetCollectionResponse, ReviewSubmissionsCreateInstanceData, ReviewSubmissionsCreateInstanceError, ReviewSubmissionsCreateInstanceResponse, ReviewSubmissionsGetInstanceData, ReviewSubmissionsGetInstanceError, ReviewSubmissionsGetInstanceResponse, ReviewSubmissionsUpdateInstanceData, ReviewSubmissionsUpdateInstanceError, ReviewSubmissionsUpdateInstanceResponse, RoutingAppCoveragesCreateInstanceData, RoutingAppCoveragesCreateInstanceError, RoutingAppCoveragesCreateInstanceResponse, RoutingAppCoveragesGetInstanceData, RoutingAppCoveragesGetInstanceError, RoutingAppCoveragesGetInstanceResponse, RoutingAppCoveragesUpdateInstanceData, RoutingAppCoveragesUpdateInstanceError, RoutingAppCoveragesUpdateInstanceResponse, RoutingAppCoveragesDeleteInstanceData, RoutingAppCoveragesDeleteInstanceError, RoutingAppCoveragesDeleteInstanceResponse, SalesReportsGetCollectionData, SalesReportsGetCollectionError, SalesReportsGetCollectionResponse, SandboxTestersV2GetCollectionData, SandboxTestersV2GetCollectionError, SandboxTestersV2GetCollectionResponse, SandboxTestersV2UpdateInstanceData, SandboxTestersV2UpdateInstanceError, SandboxTestersV2UpdateInstanceResponse, SandboxTestersClearPurchaseHistoryRequestV2CreateInstanceData, SandboxTestersClearPurchaseHistoryRequestV2CreateInstanceError, SandboxTestersClearPurchaseHistoryRequestV2CreateInstanceResponse, ScmGitReferencesGetInstanceData, ScmGitReferencesGetInstanceError, ScmGitReferencesGetInstanceResponse, ScmProvidersGetCollectionData, ScmProvidersGetCollectionError, ScmProvidersGetCollectionResponse, ScmProvidersGetInstanceData, ScmProvidersGetInstanceError, ScmProvidersGetInstanceResponse, ScmPullRequestsGetInstanceData, ScmPullRequestsGetInstanceError, ScmPullRequestsGetInstanceResponse, ScmRepositoriesGetCollectionData, ScmRepositoriesGetCollectionError, ScmRepositoriesGetCollectionResponse, ScmRepositoriesGetInstanceData, ScmRepositoriesGetInstanceError, ScmRepositoriesGetInstanceResponse, SubscriptionAppStoreReviewScreenshotsCreateInstanceData, SubscriptionAppStoreReviewScreenshotsCreateInstanceError, SubscriptionAppStoreReviewScreenshotsCreateInstanceResponse, SubscriptionAppStoreReviewScreenshotsGetInstanceData, SubscriptionAppStoreReviewScreenshotsGetInstanceError, SubscriptionAppStoreReviewScreenshotsGetInstanceResponse, SubscriptionAppStoreReviewScreenshotsUpdateInstanceData, SubscriptionAppStoreReviewScreenshotsUpdateInstanceError, SubscriptionAppStoreReviewScreenshotsUpdateInstanceResponse, SubscriptionAppStoreReviewScreenshotsDeleteInstanceData, SubscriptionAppStoreReviewScreenshotsDeleteInstanceError, SubscriptionAppStoreReviewScreenshotsDeleteInstanceResponse, SubscriptionAvailabilitiesCreateInstanceData, SubscriptionAvailabilitiesCreateInstanceError, SubscriptionAvailabilitiesCreateInstanceResponse, SubscriptionAvailabilitiesGetInstanceData, SubscriptionAvailabilitiesGetInstanceError, SubscriptionAvailabilitiesGetInstanceResponse, SubscriptionGracePeriodsGetInstanceData, SubscriptionGracePeriodsGetInstanceError, SubscriptionGracePeriodsGetInstanceResponse, SubscriptionGracePeriodsUpdateInstanceData, SubscriptionGracePeriodsUpdateInstanceError, SubscriptionGracePeriodsUpdateInstanceResponse, SubscriptionGroupLocalizationsCreateInstanceData, SubscriptionGroupLocalizationsCreateInstanceError, SubscriptionGroupLocalizationsCreateInstanceResponse, SubscriptionGroupLocalizationsGetInstanceData, SubscriptionGroupLocalizationsGetInstanceError, SubscriptionGroupLocalizationsGetInstanceResponse, SubscriptionGroupLocalizationsUpdateInstanceData, SubscriptionGroupLocalizationsUpdateInstanceError, SubscriptionGroupLocalizationsUpdateInstanceResponse, SubscriptionGroupLocalizationsDeleteInstanceData, SubscriptionGroupLocalizationsDeleteInstanceError, SubscriptionGroupLocalizationsDeleteInstanceResponse, SubscriptionGroupSubmissionsCreateInstanceData, SubscriptionGroupSubmissionsCreateInstanceError, SubscriptionGroupSubmissionsCreateInstanceResponse, SubscriptionGroupsCreateInstanceData, SubscriptionGroupsCreateInstanceError, SubscriptionGroupsCreateInstanceResponse, SubscriptionGroupsGetInstanceData, SubscriptionGroupsGetInstanceError, SubscriptionGroupsGetInstanceResponse, SubscriptionGroupsUpdateInstanceData, SubscriptionGroupsUpdateInstanceError, SubscriptionGroupsUpdateInstanceResponse, SubscriptionGroupsDeleteInstanceData, SubscriptionGroupsDeleteInstanceError, SubscriptionGroupsDeleteInstanceResponse, SubscriptionImagesCreateInstanceData, SubscriptionImagesCreateInstanceError, SubscriptionImagesCreateInstanceResponse, SubscriptionImagesGetInstanceData, SubscriptionImagesGetInstanceError, SubscriptionImagesGetInstanceResponse, SubscriptionImagesUpdateInstanceData, SubscriptionImagesUpdateInstanceError, SubscriptionImagesUpdateInstanceResponse, SubscriptionImagesDeleteInstanceData, SubscriptionImagesDeleteInstanceError, SubscriptionImagesDeleteInstanceResponse, SubscriptionIntroductoryOffersCreateInstanceData, SubscriptionIntroductoryOffersCreateInstanceError, SubscriptionIntroductoryOffersCreateInstanceResponse, SubscriptionIntroductoryOffersUpdateInstanceData, SubscriptionIntroductoryOffersUpdateInstanceError, SubscriptionIntroductoryOffersUpdateInstanceResponse, SubscriptionIntroductoryOffersDeleteInstanceData, SubscriptionIntroductoryOffersDeleteInstanceError, SubscriptionIntroductoryOffersDeleteInstanceResponse, SubscriptionLocalizationsCreateInstanceData, SubscriptionLocalizationsCreateInstanceError, SubscriptionLocalizationsCreateInstanceResponse, SubscriptionLocalizationsGetInstanceData, SubscriptionLocalizationsGetInstanceError, SubscriptionLocalizationsGetInstanceResponse, SubscriptionLocalizationsUpdateInstanceData, SubscriptionLocalizationsUpdateInstanceError, SubscriptionLocalizationsUpdateInstanceResponse, SubscriptionLocalizationsDeleteInstanceData, SubscriptionLocalizationsDeleteInstanceError, SubscriptionLocalizationsDeleteInstanceResponse, SubscriptionOfferCodeCustomCodesCreateInstanceData, SubscriptionOfferCodeCustomCodesCreateInstanceError, SubscriptionOfferCodeCustomCodesCreateInstanceResponse, SubscriptionOfferCodeCustomCodesGetInstanceData, SubscriptionOfferCodeCustomCodesGetInstanceError, SubscriptionOfferCodeCustomCodesGetInstanceResponse, SubscriptionOfferCodeCustomCodesUpdateInstanceData, SubscriptionOfferCodeCustomCodesUpdateInstanceError, SubscriptionOfferCodeCustomCodesUpdateInstanceResponse, SubscriptionOfferCodeOneTimeUseCodesCreateInstanceData, SubscriptionOfferCodeOneTimeUseCodesCreateInstanceError, SubscriptionOfferCodeOneTimeUseCodesCreateInstanceResponse, SubscriptionOfferCodeOneTimeUseCodesGetInstanceData, SubscriptionOfferCodeOneTimeUseCodesGetInstanceError, SubscriptionOfferCodeOneTimeUseCodesGetInstanceResponse, SubscriptionOfferCodeOneTimeUseCodesUpdateInstanceData, SubscriptionOfferCodeOneTimeUseCodesUpdateInstanceError, SubscriptionOfferCodeOneTimeUseCodesUpdateInstanceResponse, SubscriptionOfferCodesCreateInstanceData, SubscriptionOfferCodesCreateInstanceError, SubscriptionOfferCodesCreateInstanceResponse, SubscriptionOfferCodesGetInstanceData, SubscriptionOfferCodesGetInstanceError, SubscriptionOfferCodesGetInstanceResponse, SubscriptionOfferCodesUpdateInstanceData, SubscriptionOfferCodesUpdateInstanceError, SubscriptionOfferCodesUpdateInstanceResponse, SubscriptionPricePointsGetInstanceData, SubscriptionPricePointsGetInstanceError, SubscriptionPricePointsGetInstanceResponse, SubscriptionPricesCreateInstanceData, SubscriptionPricesCreateInstanceError, SubscriptionPricesCreateInstanceResponse, SubscriptionPricesDeleteInstanceData, SubscriptionPricesDeleteInstanceError, SubscriptionPricesDeleteInstanceResponse, SubscriptionPromotionalOffersCreateInstanceData, SubscriptionPromotionalOffersCreateInstanceError, SubscriptionPromotionalOffersCreateInstanceResponse, SubscriptionPromotionalOffersGetInstanceData, SubscriptionPromotionalOffersGetInstanceError, SubscriptionPromotionalOffersGetInstanceResponse, SubscriptionPromotionalOffersUpdateInstanceData, SubscriptionPromotionalOffersUpdateInstanceError, SubscriptionPromotionalOffersUpdateInstanceResponse, SubscriptionPromotionalOffersDeleteInstanceData, SubscriptionPromotionalOffersDeleteInstanceError, SubscriptionPromotionalOffersDeleteInstanceResponse, SubscriptionSubmissionsCreateInstanceData, SubscriptionSubmissionsCreateInstanceError, SubscriptionSubmissionsCreateInstanceResponse, SubscriptionsCreateInstanceData, SubscriptionsCreateInstanceError, SubscriptionsCreateInstanceResponse, SubscriptionsGetInstanceData, SubscriptionsGetInstanceError, SubscriptionsGetInstanceResponse, SubscriptionsUpdateInstanceData, SubscriptionsUpdateInstanceError, SubscriptionsUpdateInstanceResponse, SubscriptionsDeleteInstanceData, SubscriptionsDeleteInstanceError, SubscriptionsDeleteInstanceResponse, TerritoriesGetCollectionData, TerritoriesGetCollectionError, TerritoriesGetCollectionResponse, TerritoryAvailabilitiesUpdateInstanceData, TerritoryAvailabilitiesUpdateInstanceError, TerritoryAvailabilitiesUpdateInstanceResponse, UserInvitationsGetCollectionData, UserInvitationsGetCollectionError, UserInvitationsGetCollectionResponse, UserInvitationsCreateInstanceData, UserInvitationsCreateInstanceError, UserInvitationsCreateInstanceResponse, UserInvitationsGetInstanceData, UserInvitationsGetInstanceError, UserInvitationsGetInstanceResponse, UserInvitationsDeleteInstanceData, UserInvitationsDeleteInstanceError, UserInvitationsDeleteInstanceResponse, UsersGetCollectionData, UsersGetCollectionError, UsersGetCollectionResponse, UsersGetInstanceData, UsersGetInstanceError, UsersGetInstanceResponse, UsersUpdateInstanceData, UsersUpdateInstanceError, UsersUpdateInstanceResponse, UsersDeleteInstanceData, UsersDeleteInstanceError, UsersDeleteInstanceResponse, WinBackOffersCreateInstanceData, WinBackOffersCreateInstanceError, WinBackOffersCreateInstanceResponse, WinBackOffersGetInstanceData, WinBackOffersGetInstanceError, WinBackOffersGetInstanceResponse, WinBackOffersUpdateInstanceData, WinBackOffersUpdateInstanceError, WinBackOffersUpdateInstanceResponse, WinBackOffersDeleteInstanceData, WinBackOffersDeleteInstanceError, WinBackOffersDeleteInstanceResponse, AlternativeDistributionPackageVersionsDeltasGetToManyRelatedData, AlternativeDistributionPackageVersionsDeltasGetToManyRelatedError, AlternativeDistributionPackageVersionsDeltasGetToManyRelatedResponse, AlternativeDistributionPackageVersionsVariantsGetToManyRelatedData, AlternativeDistributionPackageVersionsVariantsGetToManyRelatedError, AlternativeDistributionPackageVersionsVariantsGetToManyRelatedResponse, AlternativeDistributionPackagesVersionsGetToManyRelatedData, AlternativeDistributionPackagesVersionsGetToManyRelatedError, AlternativeDistributionPackagesVersionsGetToManyRelatedResponse, AnalyticsReportInstancesSegmentsGetToManyRelatedData, AnalyticsReportInstancesSegmentsGetToManyRelatedError, AnalyticsReportInstancesSegmentsGetToManyRelatedResponse, AnalyticsReportRequestsReportsGetToManyRelatedData, AnalyticsReportRequestsReportsGetToManyRelatedError, AnalyticsReportRequestsReportsGetToManyRelatedResponse, AnalyticsReportsInstancesGetToManyRelatedData, AnalyticsReportsInstancesGetToManyRelatedError, AnalyticsReportsInstancesGetToManyRelatedResponse, AppAvailabilitiesV2TerritoryAvailabilitiesGetToManyRelatedData, AppAvailabilitiesV2TerritoryAvailabilitiesGetToManyRelatedError, AppAvailabilitiesV2TerritoryAvailabilitiesGetToManyRelatedResponse, AppAvailabilitiesAvailableTerritoriesGetToManyRelatedData, AppAvailabilitiesAvailableTerritoriesGetToManyRelatedError, AppAvailabilitiesAvailableTerritoriesGetToManyRelatedResponse, AppCategoriesParentGetToOneRelatedData, AppCategoriesParentGetToOneRelatedError, AppCategoriesParentGetToOneRelatedResponse, AppCategoriesSubcategoriesGetToManyRelatedData, AppCategoriesSubcategoriesGetToManyRelatedError, AppCategoriesSubcategoriesGetToManyRelatedResponse, AppClipDefaultExperienceLocalizationsAppClipHeaderImageGetToOneRelatedData, AppClipDefaultExperienceLocalizationsAppClipHeaderImageGetToOneRelatedError, AppClipDefaultExperienceLocalizationsAppClipHeaderImageGetToOneRelatedResponse, AppClipDefaultExperiencesAppClipAppStoreReviewDetailGetToOneRelatedData, AppClipDefaultExperiencesAppClipAppStoreReviewDetailGetToOneRelatedError, AppClipDefaultExperiencesAppClipAppStoreReviewDetailGetToOneRelatedResponse, AppClipDefaultExperiencesAppClipDefaultExperienceLocalizationsGetToManyRelatedData, AppClipDefaultExperiencesAppClipDefaultExperienceLocalizationsGetToManyRelatedError, AppClipDefaultExperiencesAppClipDefaultExperienceLocalizationsGetToManyRelatedResponse, AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelationshipData, AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelationshipError, AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelationshipResponse, AppClipDefaultExperiencesReleaseWithAppStoreVersionUpdateToOneRelationshipData, AppClipDefaultExperiencesReleaseWithAppStoreVersionUpdateToOneRelationshipError, AppClipDefaultExperiencesReleaseWithAppStoreVersionUpdateToOneRelationshipResponse, AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelatedData, AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelatedError, AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelatedResponse, AppClipsAppClipAdvancedExperiencesGetToManyRelatedData, AppClipsAppClipAdvancedExperiencesGetToManyRelatedError, AppClipsAppClipAdvancedExperiencesGetToManyRelatedResponse, AppClipsAppClipDefaultExperiencesGetToManyRelatedData, AppClipsAppClipDefaultExperiencesGetToManyRelatedError, AppClipsAppClipDefaultExperiencesGetToManyRelatedResponse, AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedData, AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedError, AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedResponse, AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedData, AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedError, AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedResponse, AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedData, AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedError, AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedResponse, AppCustomProductPagesAppCustomProductPageVersionsGetToManyRelatedData, AppCustomProductPagesAppCustomProductPageVersionsGetToManyRelatedError, AppCustomProductPagesAppCustomProductPageVersionsGetToManyRelatedResponse, AppEncryptionDeclarationsAppGetToOneRelatedData, AppEncryptionDeclarationsAppGetToOneRelatedError, AppEncryptionDeclarationsAppGetToOneRelatedResponse, AppEncryptionDeclarationsAppEncryptionDeclarationDocumentGetToOneRelatedData, AppEncryptionDeclarationsAppEncryptionDeclarationDocumentGetToOneRelatedError, AppEncryptionDeclarationsAppEncryptionDeclarationDocumentGetToOneRelatedResponse, AppEncryptionDeclarationsBuildsCreateToManyRelationshipData, AppEncryptionDeclarationsBuildsCreateToManyRelationshipError, AppEncryptionDeclarationsBuildsCreateToManyRelationshipResponse, AppEventLocalizationsAppEventScreenshotsGetToManyRelatedData, AppEventLocalizationsAppEventScreenshotsGetToManyRelatedError, AppEventLocalizationsAppEventScreenshotsGetToManyRelatedResponse, AppEventLocalizationsAppEventVideoClipsGetToManyRelatedData, AppEventLocalizationsAppEventVideoClipsGetToManyRelatedError, AppEventLocalizationsAppEventVideoClipsGetToManyRelatedResponse, AppEventsLocalizationsGetToManyRelatedData, AppEventsLocalizationsGetToManyRelatedError, AppEventsLocalizationsGetToManyRelatedResponse, AppInfosAgeRatingDeclarationGetToOneRelatedData, AppInfosAgeRatingDeclarationGetToOneRelatedError, AppInfosAgeRatingDeclarationGetToOneRelatedResponse, AppInfosAppInfoLocalizationsGetToManyRelatedData, AppInfosAppInfoLocalizationsGetToManyRelatedError, AppInfosAppInfoLocalizationsGetToManyRelatedResponse, AppInfosPrimaryCategoryGetToOneRelatedData, AppInfosPrimaryCategoryGetToOneRelatedError, AppInfosPrimaryCategoryGetToOneRelatedResponse, AppInfosPrimarySubcategoryOneGetToOneRelatedData, AppInfosPrimarySubcategoryOneGetToOneRelatedError, AppInfosPrimarySubcategoryOneGetToOneRelatedResponse, AppInfosPrimarySubcategoryTwoGetToOneRelatedData, AppInfosPrimarySubcategoryTwoGetToOneRelatedError, AppInfosPrimarySubcategoryTwoGetToOneRelatedResponse, AppInfosSecondaryCategoryGetToOneRelatedData, AppInfosSecondaryCategoryGetToOneRelatedError, AppInfosSecondaryCategoryGetToOneRelatedResponse, AppInfosSecondarySubcategoryOneGetToOneRelatedData, AppInfosSecondarySubcategoryOneGetToOneRelatedError, AppInfosSecondarySubcategoryOneGetToOneRelatedResponse, AppInfosSecondarySubcategoryTwoGetToOneRelatedData, AppInfosSecondarySubcategoryTwoGetToOneRelatedError, AppInfosSecondarySubcategoryTwoGetToOneRelatedResponse, AppPreviewSetsAppPreviewsGetToManyRelationshipData, AppPreviewSetsAppPreviewsGetToManyRelationshipError, AppPreviewSetsAppPreviewsGetToManyRelationshipResponse, AppPreviewSetsAppPreviewsReplaceToManyRelationshipData, AppPreviewSetsAppPreviewsReplaceToManyRelationshipError, AppPreviewSetsAppPreviewsReplaceToManyRelationshipResponse, AppPreviewSetsAppPreviewsGetToManyRelatedData, AppPreviewSetsAppPreviewsGetToManyRelatedError, AppPreviewSetsAppPreviewsGetToManyRelatedResponse, AppPricePointsV3EqualizationsGetToManyRelatedData, AppPricePointsV3EqualizationsGetToManyRelatedError, AppPricePointsV3EqualizationsGetToManyRelatedResponse, AppPriceSchedulesAutomaticPricesGetToManyRelatedData, AppPriceSchedulesAutomaticPricesGetToManyRelatedError, AppPriceSchedulesAutomaticPricesGetToManyRelatedResponse, AppPriceSchedulesBaseTerritoryGetToOneRelatedData, AppPriceSchedulesBaseTerritoryGetToOneRelatedError, AppPriceSchedulesBaseTerritoryGetToOneRelatedResponse, AppPriceSchedulesManualPricesGetToManyRelatedData, AppPriceSchedulesManualPricesGetToManyRelatedError, AppPriceSchedulesManualPricesGetToManyRelatedResponse, AppScreenshotSetsAppScreenshotsGetToManyRelationshipData, AppScreenshotSetsAppScreenshotsGetToManyRelationshipError, AppScreenshotSetsAppScreenshotsGetToManyRelationshipResponse, AppScreenshotSetsAppScreenshotsReplaceToManyRelationshipData, AppScreenshotSetsAppScreenshotsReplaceToManyRelationshipError, AppScreenshotSetsAppScreenshotsReplaceToManyRelationshipResponse, AppScreenshotSetsAppScreenshotsGetToManyRelatedData, AppScreenshotSetsAppScreenshotsGetToManyRelatedError, AppScreenshotSetsAppScreenshotsGetToManyRelatedResponse, AppStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelatedData, AppStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelatedError, AppStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelatedResponse, AppStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelatedData, AppStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelatedError, AppStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelatedResponse, AppStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelatedData, AppStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelatedError, AppStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelatedResponse, AppStoreVersionExperimentTreatmentsAppStoreVersionExperimentTreatmentLocalizationsGetToManyRelatedData, AppStoreVersionExperimentTreatmentsAppStoreVersionExperimentTreatmentLocalizationsGetToManyRelatedError, AppStoreVersionExperimentTreatmentsAppStoreVersionExperimentTreatmentLocalizationsGetToManyRelatedResponse, AppStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelatedData, AppStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelatedError, AppStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelatedResponse, AppStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelatedData, AppStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelatedError, AppStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelatedResponse, AppStoreVersionLocalizationsAppPreviewSetsGetToManyRelatedData, AppStoreVersionLocalizationsAppPreviewSetsGetToManyRelatedError, AppStoreVersionLocalizationsAppPreviewSetsGetToManyRelatedResponse, AppStoreVersionLocalizationsAppScreenshotSetsGetToManyRelatedData, AppStoreVersionLocalizationsAppScreenshotSetsGetToManyRelatedError, AppStoreVersionLocalizationsAppScreenshotSetsGetToManyRelatedResponse, AppStoreVersionsAgeRatingDeclarationGetToOneRelatedData, AppStoreVersionsAgeRatingDeclarationGetToOneRelatedError, AppStoreVersionsAgeRatingDeclarationGetToOneRelatedResponse, AppStoreVersionsAlternativeDistributionPackageGetToOneRelatedData, AppStoreVersionsAlternativeDistributionPackageGetToOneRelatedError, AppStoreVersionsAlternativeDistributionPackageGetToOneRelatedResponse, AppStoreVersionsAppClipDefaultExperienceGetToOneRelationshipData, AppStoreVersionsAppClipDefaultExperienceGetToOneRelationshipError, AppStoreVersionsAppClipDefaultExperienceGetToOneRelationshipResponse, AppStoreVersionsAppClipDefaultExperienceUpdateToOneRelationshipData, AppStoreVersionsAppClipDefaultExperienceUpdateToOneRelationshipError, AppStoreVersionsAppClipDefaultExperienceUpdateToOneRelationshipResponse, AppStoreVersionsAppClipDefaultExperienceGetToOneRelatedData, AppStoreVersionsAppClipDefaultExperienceGetToOneRelatedError, AppStoreVersionsAppClipDefaultExperienceGetToOneRelatedResponse, AppStoreVersionsAppStoreReviewDetailGetToOneRelatedData, AppStoreVersionsAppStoreReviewDetailGetToOneRelatedError, AppStoreVersionsAppStoreReviewDetailGetToOneRelatedResponse, AppStoreVersionsAppStoreVersionExperimentsGetToManyRelatedData, AppStoreVersionsAppStoreVersionExperimentsGetToManyRelatedError, AppStoreVersionsAppStoreVersionExperimentsGetToManyRelatedResponse, AppStoreVersionsAppStoreVersionExperimentsV2GetToManyRelatedData, AppStoreVersionsAppStoreVersionExperimentsV2GetToManyRelatedError, AppStoreVersionsAppStoreVersionExperimentsV2GetToManyRelatedResponse, AppStoreVersionsAppStoreVersionLocalizationsGetToManyRelatedData, AppStoreVersionsAppStoreVersionLocalizationsGetToManyRelatedError, AppStoreVersionsAppStoreVersionLocalizationsGetToManyRelatedResponse, AppStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelatedData, AppStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelatedError, AppStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelatedResponse, AppStoreVersionsAppStoreVersionSubmissionGetToOneRelatedData, AppStoreVersionsAppStoreVersionSubmissionGetToOneRelatedError, AppStoreVersionsAppStoreVersionSubmissionGetToOneRelatedResponse, AppStoreVersionsBuildGetToOneRelationshipData, AppStoreVersionsBuildGetToOneRelationshipError, AppStoreVersionsBuildGetToOneRelationshipResponse, AppStoreVersionsBuildUpdateToOneRelationshipData, AppStoreVersionsBuildUpdateToOneRelationshipError, AppStoreVersionsBuildUpdateToOneRelationshipResponse, AppStoreVersionsBuildGetToOneRelatedData, AppStoreVersionsBuildGetToOneRelatedError, AppStoreVersionsBuildGetToOneRelatedResponse, AppStoreVersionsCustomerReviewsGetToManyRelatedData, AppStoreVersionsCustomerReviewsGetToManyRelatedError, AppStoreVersionsCustomerReviewsGetToManyRelatedResponse, AppStoreVersionsGameCenterAppVersionGetToOneRelatedData, AppStoreVersionsGameCenterAppVersionGetToOneRelatedError, AppStoreVersionsGameCenterAppVersionGetToOneRelatedResponse, AppStoreVersionsRoutingAppCoverageGetToOneRelatedData, AppStoreVersionsRoutingAppCoverageGetToOneRelatedError, AppStoreVersionsRoutingAppCoverageGetToOneRelatedResponse, AppsAlternativeDistributionKeyGetToOneRelatedData, AppsAlternativeDistributionKeyGetToOneRelatedError, AppsAlternativeDistributionKeyGetToOneRelatedResponse, AppsAnalyticsReportRequestsGetToManyRelatedData, AppsAnalyticsReportRequestsGetToManyRelatedError, AppsAnalyticsReportRequestsGetToManyRelatedResponse, AppsAppAvailabilityGetToOneRelatedData, AppsAppAvailabilityGetToOneRelatedError, AppsAppAvailabilityGetToOneRelatedResponse, AppsAppAvailabilityV2GetToOneRelatedData, AppsAppAvailabilityV2GetToOneRelatedError, AppsAppAvailabilityV2GetToOneRelatedResponse, AppsAppClipsGetToManyRelatedData, AppsAppClipsGetToManyRelatedError, AppsAppClipsGetToManyRelatedResponse, AppsAppCustomProductPagesGetToManyRelatedData, AppsAppCustomProductPagesGetToManyRelatedError, AppsAppCustomProductPagesGetToManyRelatedResponse, AppsAppEncryptionDeclarationsGetToManyRelatedData, AppsAppEncryptionDeclarationsGetToManyRelatedError, AppsAppEncryptionDeclarationsGetToManyRelatedResponse, AppsAppEventsGetToManyRelatedData, AppsAppEventsGetToManyRelatedError, AppsAppEventsGetToManyRelatedResponse, AppsAppInfosGetToManyRelatedData, AppsAppInfosGetToManyRelatedError, AppsAppInfosGetToManyRelatedResponse, AppsAppPricePointsGetToManyRelatedData, AppsAppPricePointsGetToManyRelatedError, AppsAppPricePointsGetToManyRelatedResponse, AppsAppPriceScheduleGetToOneRelatedData, AppsAppPriceScheduleGetToOneRelatedError, AppsAppPriceScheduleGetToOneRelatedResponse, AppsAppStoreVersionExperimentsV2GetToManyRelatedData, AppsAppStoreVersionExperimentsV2GetToManyRelatedError, AppsAppStoreVersionExperimentsV2GetToManyRelatedResponse, AppsAppStoreVersionsGetToManyRelatedData, AppsAppStoreVersionsGetToManyRelatedError, AppsAppStoreVersionsGetToManyRelatedResponse, AppsBetaAppLocalizationsGetToManyRelatedData, AppsBetaAppLocalizationsGetToManyRelatedError, AppsBetaAppLocalizationsGetToManyRelatedResponse, AppsBetaAppReviewDetailGetToOneRelatedData, AppsBetaAppReviewDetailGetToOneRelatedError, AppsBetaAppReviewDetailGetToOneRelatedResponse, AppsBetaGroupsGetToManyRelatedData, AppsBetaGroupsGetToManyRelatedError, AppsBetaGroupsGetToManyRelatedResponse, AppsBetaLicenseAgreementGetToOneRelatedData, AppsBetaLicenseAgreementGetToOneRelatedError, AppsBetaLicenseAgreementGetToOneRelatedResponse, AppsBetaTestersDeleteToManyRelationshipData, AppsBetaTestersDeleteToManyRelationshipError, AppsBetaTestersDeleteToManyRelationshipResponse, AppsBuildsGetToManyRelatedData, AppsBuildsGetToManyRelatedError, AppsBuildsGetToManyRelatedResponse, AppsCiProductGetToOneRelatedData, AppsCiProductGetToOneRelatedError, AppsCiProductGetToOneRelatedResponse, AppsCustomerReviewsGetToManyRelatedData, AppsCustomerReviewsGetToManyRelatedError, AppsCustomerReviewsGetToManyRelatedResponse, AppsEndUserLicenseAgreementGetToOneRelatedData, AppsEndUserLicenseAgreementGetToOneRelatedError, AppsEndUserLicenseAgreementGetToOneRelatedResponse, AppsGameCenterDetailGetToOneRelatedData, AppsGameCenterDetailGetToOneRelatedError, AppsGameCenterDetailGetToOneRelatedResponse, AppsGameCenterEnabledVersionsGetToManyRelatedData, AppsGameCenterEnabledVersionsGetToManyRelatedError, AppsGameCenterEnabledVersionsGetToManyRelatedResponse, AppsInAppPurchasesGetToManyRelatedData, AppsInAppPurchasesGetToManyRelatedError, AppsInAppPurchasesGetToManyRelatedResponse, AppsInAppPurchasesV2GetToManyRelatedData, AppsInAppPurchasesV2GetToManyRelatedError, AppsInAppPurchasesV2GetToManyRelatedResponse, AppsMarketplaceSearchDetailGetToOneRelatedData, AppsMarketplaceSearchDetailGetToOneRelatedError, AppsMarketplaceSearchDetailGetToOneRelatedResponse, AppsPerfPowerMetricsGetToManyRelatedData, AppsPerfPowerMetricsGetToManyRelatedError, AppsPerfPowerMetricsGetToManyRelatedResponse, AppsPreOrderGetToOneRelatedData, AppsPreOrderGetToOneRelatedError, AppsPreOrderGetToOneRelatedResponse, AppsPreReleaseVersionsGetToManyRelatedData, AppsPreReleaseVersionsGetToManyRelatedError, AppsPreReleaseVersionsGetToManyRelatedResponse, AppsPromotedPurchasesGetToManyRelationshipData, AppsPromotedPurchasesGetToManyRelationshipError, AppsPromotedPurchasesGetToManyRelationshipResponse, AppsPromotedPurchasesReplaceToManyRelationshipData, AppsPromotedPurchasesReplaceToManyRelationshipError, AppsPromotedPurchasesReplaceToManyRelationshipResponse, AppsPromotedPurchasesGetToManyRelatedData, AppsPromotedPurchasesGetToManyRelatedError, AppsPromotedPurchasesGetToManyRelatedResponse, AppsReviewSubmissionsGetToManyRelatedData, AppsReviewSubmissionsGetToManyRelatedError, AppsReviewSubmissionsGetToManyRelatedResponse, AppsSubscriptionGracePeriodGetToOneRelatedData, AppsSubscriptionGracePeriodGetToOneRelatedError, AppsSubscriptionGracePeriodGetToOneRelatedResponse, AppsSubscriptionGroupsGetToManyRelatedData, AppsSubscriptionGroupsGetToManyRelatedError, AppsSubscriptionGroupsGetToManyRelatedResponse, BetaAppLocalizationsAppGetToOneRelatedData, BetaAppLocalizationsAppGetToOneRelatedError, BetaAppLocalizationsAppGetToOneRelatedResponse, BetaAppReviewDetailsAppGetToOneRelatedData, BetaAppReviewDetailsAppGetToOneRelatedError, BetaAppReviewDetailsAppGetToOneRelatedResponse, BetaAppReviewSubmissionsBuildGetToOneRelatedData, BetaAppReviewSubmissionsBuildGetToOneRelatedError, BetaAppReviewSubmissionsBuildGetToOneRelatedResponse, BetaBuildLocalizationsBuildGetToOneRelatedData, BetaBuildLocalizationsBuildGetToOneRelatedError, BetaBuildLocalizationsBuildGetToOneRelatedResponse, BetaGroupsAppGetToOneRelatedData, BetaGroupsAppGetToOneRelatedError, BetaGroupsAppGetToOneRelatedResponse, BetaGroupsBetaTestersGetToManyRelationshipData, BetaGroupsBetaTestersGetToManyRelationshipError, BetaGroupsBetaTestersGetToManyRelationshipResponse, BetaGroupsBetaTestersCreateToManyRelationshipData, BetaGroupsBetaTestersCreateToManyRelationshipError, BetaGroupsBetaTestersCreateToManyRelationshipResponse, BetaGroupsBetaTestersDeleteToManyRelationshipData, BetaGroupsBetaTestersDeleteToManyRelationshipError, BetaGroupsBetaTestersDeleteToManyRelationshipResponse, BetaGroupsBetaTestersGetToManyRelatedData, BetaGroupsBetaTestersGetToManyRelatedError, BetaGroupsBetaTestersGetToManyRelatedResponse, BetaGroupsBuildsGetToManyRelationshipData, BetaGroupsBuildsGetToManyRelationshipError, BetaGroupsBuildsGetToManyRelationshipResponse, BetaGroupsBuildsCreateToManyRelationshipData, BetaGroupsBuildsCreateToManyRelationshipError, BetaGroupsBuildsCreateToManyRelationshipResponse, BetaGroupsBuildsDeleteToManyRelationshipData, BetaGroupsBuildsDeleteToManyRelationshipError, BetaGroupsBuildsDeleteToManyRelationshipResponse, BetaGroupsBuildsGetToManyRelatedData, BetaGroupsBuildsGetToManyRelatedError, BetaGroupsBuildsGetToManyRelatedResponse, BetaLicenseAgreementsAppGetToOneRelatedData, BetaLicenseAgreementsAppGetToOneRelatedError, BetaLicenseAgreementsAppGetToOneRelatedResponse, BetaTestersAppsGetToManyRelationshipData, BetaTestersAppsGetToManyRelationshipError, BetaTestersAppsGetToManyRelationshipResponse, BetaTestersAppsDeleteToManyRelationshipData, BetaTestersAppsDeleteToManyRelationshipError, BetaTestersAppsDeleteToManyRelationshipResponse, BetaTestersAppsGetToManyRelatedData, BetaTestersAppsGetToManyRelatedError, BetaTestersAppsGetToManyRelatedResponse, BetaTestersBetaGroupsGetToManyRelationshipData, BetaTestersBetaGroupsGetToManyRelationshipError, BetaTestersBetaGroupsGetToManyRelationshipResponse, BetaTestersBetaGroupsCreateToManyRelationshipData, BetaTestersBetaGroupsCreateToManyRelationshipError, BetaTestersBetaGroupsCreateToManyRelationshipResponse, BetaTestersBetaGroupsDeleteToManyRelationshipData, BetaTestersBetaGroupsDeleteToManyRelationshipError, BetaTestersBetaGroupsDeleteToManyRelationshipResponse, BetaTestersBetaGroupsGetToManyRelatedData, BetaTestersBetaGroupsGetToManyRelatedError, BetaTestersBetaGroupsGetToManyRelatedResponse, BetaTestersBuildsGetToManyRelationshipData, BetaTestersBuildsGetToManyRelationshipError, BetaTestersBuildsGetToManyRelationshipResponse, BetaTestersBuildsCreateToManyRelationshipData, BetaTestersBuildsCreateToManyRelationshipError, BetaTestersBuildsCreateToManyRelationshipResponse, BetaTestersBuildsDeleteToManyRelationshipData, BetaTestersBuildsDeleteToManyRelationshipError, BetaTestersBuildsDeleteToManyRelationshipResponse, BetaTestersBuildsGetToManyRelatedData, BetaTestersBuildsGetToManyRelatedError, BetaTestersBuildsGetToManyRelatedResponse, BuildBetaDetailsBuildGetToOneRelatedData, BuildBetaDetailsBuildGetToOneRelatedError, BuildBetaDetailsBuildGetToOneRelatedResponse, BuildBundlesAppClipDomainCacheStatusGetToOneRelatedData, BuildBundlesAppClipDomainCacheStatusGetToOneRelatedError, BuildBundlesAppClipDomainCacheStatusGetToOneRelatedResponse, BuildBundlesAppClipDomainDebugStatusGetToOneRelatedData, BuildBundlesAppClipDomainDebugStatusGetToOneRelatedError, BuildBundlesAppClipDomainDebugStatusGetToOneRelatedResponse, BuildBundlesBetaAppClipInvocationsGetToManyRelatedData, BuildBundlesBetaAppClipInvocationsGetToManyRelatedError, BuildBundlesBetaAppClipInvocationsGetToManyRelatedResponse, BuildBundlesBuildBundleFileSizesGetToManyRelatedData, BuildBundlesBuildBundleFileSizesGetToManyRelatedError, BuildBundlesBuildBundleFileSizesGetToManyRelatedResponse, BuildsAppGetToOneRelatedData, BuildsAppGetToOneRelatedError, BuildsAppGetToOneRelatedResponse, BuildsAppEncryptionDeclarationGetToOneRelationshipData, BuildsAppEncryptionDeclarationGetToOneRelationshipError, BuildsAppEncryptionDeclarationGetToOneRelationshipResponse, BuildsAppEncryptionDeclarationUpdateToOneRelationshipData, BuildsAppEncryptionDeclarationUpdateToOneRelationshipError, BuildsAppEncryptionDeclarationUpdateToOneRelationshipResponse, BuildsAppEncryptionDeclarationGetToOneRelatedData, BuildsAppEncryptionDeclarationGetToOneRelatedError, BuildsAppEncryptionDeclarationGetToOneRelatedResponse, BuildsAppStoreVersionGetToOneRelatedData, BuildsAppStoreVersionGetToOneRelatedError, BuildsAppStoreVersionGetToOneRelatedResponse, BuildsBetaAppReviewSubmissionGetToOneRelatedData, BuildsBetaAppReviewSubmissionGetToOneRelatedError, BuildsBetaAppReviewSubmissionGetToOneRelatedResponse, BuildsBetaBuildLocalizationsGetToManyRelatedData, BuildsBetaBuildLocalizationsGetToManyRelatedError, BuildsBetaBuildLocalizationsGetToManyRelatedResponse, BuildsBetaGroupsCreateToManyRelationshipData, BuildsBetaGroupsCreateToManyRelationshipError, BuildsBetaGroupsCreateToManyRelationshipResponse, BuildsBetaGroupsDeleteToManyRelationshipData, BuildsBetaGroupsDeleteToManyRelationshipError, BuildsBetaGroupsDeleteToManyRelationshipResponse, BuildsBuildBetaDetailGetToOneRelatedData, BuildsBuildBetaDetailGetToOneRelatedError, BuildsBuildBetaDetailGetToOneRelatedResponse, BuildsDiagnosticSignaturesGetToManyRelatedData, BuildsDiagnosticSignaturesGetToManyRelatedError, BuildsDiagnosticSignaturesGetToManyRelatedResponse, BuildsIconsGetToManyRelatedData, BuildsIconsGetToManyRelatedError, BuildsIconsGetToManyRelatedResponse, BuildsIndividualTestersGetToManyRelationshipData, BuildsIndividualTestersGetToManyRelationshipError, BuildsIndividualTestersGetToManyRelationshipResponse, BuildsIndividualTestersCreateToManyRelationshipData, BuildsIndividualTestersCreateToManyRelationshipError, BuildsIndividualTestersCreateToManyRelationshipResponse, BuildsIndividualTestersDeleteToManyRelationshipData, BuildsIndividualTestersDeleteToManyRelationshipError, BuildsIndividualTestersDeleteToManyRelationshipResponse, BuildsIndividualTestersGetToManyRelatedData, BuildsIndividualTestersGetToManyRelatedError, BuildsIndividualTestersGetToManyRelatedResponse, BuildsPerfPowerMetricsGetToManyRelatedData, BuildsPerfPowerMetricsGetToManyRelatedError, BuildsPerfPowerMetricsGetToManyRelatedResponse, BuildsPreReleaseVersionGetToOneRelatedData, BuildsPreReleaseVersionGetToOneRelatedError, BuildsPreReleaseVersionGetToOneRelatedResponse, BundleIdsAppGetToOneRelatedData, BundleIdsAppGetToOneRelatedError, BundleIdsAppGetToOneRelatedResponse, BundleIdsBundleIdCapabilitiesGetToManyRelatedData, BundleIdsBundleIdCapabilitiesGetToManyRelatedError, BundleIdsBundleIdCapabilitiesGetToManyRelatedResponse, BundleIdsProfilesGetToManyRelatedData, BundleIdsProfilesGetToManyRelatedError, BundleIdsProfilesGetToManyRelatedResponse, CiBuildActionsArtifactsGetToManyRelatedData, CiBuildActionsArtifactsGetToManyRelatedError, CiBuildActionsArtifactsGetToManyRelatedResponse, CiBuildActionsBuildRunGetToOneRelatedData, CiBuildActionsBuildRunGetToOneRelatedError, CiBuildActionsBuildRunGetToOneRelatedResponse, CiBuildActionsIssuesGetToManyRelatedData, CiBuildActionsIssuesGetToManyRelatedError, CiBuildActionsIssuesGetToManyRelatedResponse, CiBuildActionsTestResultsGetToManyRelatedData, CiBuildActionsTestResultsGetToManyRelatedError, CiBuildActionsTestResultsGetToManyRelatedResponse, CiBuildRunsActionsGetToManyRelatedData, CiBuildRunsActionsGetToManyRelatedError, CiBuildRunsActionsGetToManyRelatedResponse, CiBuildRunsBuildsGetToManyRelatedData, CiBuildRunsBuildsGetToManyRelatedError, CiBuildRunsBuildsGetToManyRelatedResponse, CiMacOsVersionsXcodeVersionsGetToManyRelatedData, CiMacOsVersionsXcodeVersionsGetToManyRelatedError, CiMacOsVersionsXcodeVersionsGetToManyRelatedResponse, CiProductsAdditionalRepositoriesGetToManyRelatedData, CiProductsAdditionalRepositoriesGetToManyRelatedError, CiProductsAdditionalRepositoriesGetToManyRelatedResponse, CiProductsAppGetToOneRelatedData, CiProductsAppGetToOneRelatedError, CiProductsAppGetToOneRelatedResponse, CiProductsBuildRunsGetToManyRelatedData, CiProductsBuildRunsGetToManyRelatedError, CiProductsBuildRunsGetToManyRelatedResponse, CiProductsPrimaryRepositoriesGetToManyRelatedData, CiProductsPrimaryRepositoriesGetToManyRelatedError, CiProductsPrimaryRepositoriesGetToManyRelatedResponse, CiProductsWorkflowsGetToManyRelatedData, CiProductsWorkflowsGetToManyRelatedError, CiProductsWorkflowsGetToManyRelatedResponse, CiWorkflowsBuildRunsGetToManyRelatedData, CiWorkflowsBuildRunsGetToManyRelatedError, CiWorkflowsBuildRunsGetToManyRelatedResponse, CiWorkflowsRepositoryGetToOneRelatedData, CiWorkflowsRepositoryGetToOneRelatedError, CiWorkflowsRepositoryGetToOneRelatedResponse, CiXcodeVersionsMacOsVersionsGetToManyRelatedData, CiXcodeVersionsMacOsVersionsGetToManyRelatedError, CiXcodeVersionsMacOsVersionsGetToManyRelatedResponse, CustomerReviewsResponseGetToOneRelatedData, CustomerReviewsResponseGetToOneRelatedError, CustomerReviewsResponseGetToOneRelatedResponse, DiagnosticSignaturesLogsGetToManyRelatedData, DiagnosticSignaturesLogsGetToManyRelatedError, DiagnosticSignaturesLogsGetToManyRelatedResponse, EndUserLicenseAgreementsTerritoriesGetToManyRelatedData, EndUserLicenseAgreementsTerritoriesGetToManyRelatedError, EndUserLicenseAgreementsTerritoriesGetToManyRelatedResponse, GameCenterAchievementLocalizationsGameCenterAchievementGetToOneRelatedData, GameCenterAchievementLocalizationsGameCenterAchievementGetToOneRelatedError, GameCenterAchievementLocalizationsGameCenterAchievementGetToOneRelatedResponse, GameCenterAchievementLocalizationsGameCenterAchievementImageGetToOneRelatedData, GameCenterAchievementLocalizationsGameCenterAchievementImageGetToOneRelatedError, GameCenterAchievementLocalizationsGameCenterAchievementImageGetToOneRelatedResponse, GameCenterAchievementsGroupAchievementGetToOneRelationshipData, GameCenterAchievementsGroupAchievementGetToOneRelationshipError, GameCenterAchievementsGroupAchievementGetToOneRelationshipResponse, GameCenterAchievementsGroupAchievementUpdateToOneRelationshipData, GameCenterAchievementsGroupAchievementUpdateToOneRelationshipError, GameCenterAchievementsGroupAchievementUpdateToOneRelationshipResponse, GameCenterAchievementsGroupAchievementGetToOneRelatedData, GameCenterAchievementsGroupAchievementGetToOneRelatedError, GameCenterAchievementsGroupAchievementGetToOneRelatedResponse, GameCenterAchievementsLocalizationsGetToManyRelatedData, GameCenterAchievementsLocalizationsGetToManyRelatedError, GameCenterAchievementsLocalizationsGetToManyRelatedResponse, GameCenterAchievementsReleasesGetToManyRelatedData, GameCenterAchievementsReleasesGetToManyRelatedError, GameCenterAchievementsReleasesGetToManyRelatedResponse, GameCenterAppVersionsAppStoreVersionGetToOneRelatedData, GameCenterAppVersionsAppStoreVersionGetToOneRelatedError, GameCenterAppVersionsAppStoreVersionGetToOneRelatedResponse, GameCenterAppVersionsCompatibilityVersionsGetToManyRelationshipData, GameCenterAppVersionsCompatibilityVersionsGetToManyRelationshipError, GameCenterAppVersionsCompatibilityVersionsGetToManyRelationshipResponse, GameCenterAppVersionsCompatibilityVersionsCreateToManyRelationshipData, GameCenterAppVersionsCompatibilityVersionsCreateToManyRelationshipError, GameCenterAppVersionsCompatibilityVersionsCreateToManyRelationshipResponse, GameCenterAppVersionsCompatibilityVersionsDeleteToManyRelationshipData, GameCenterAppVersionsCompatibilityVersionsDeleteToManyRelationshipError, GameCenterAppVersionsCompatibilityVersionsDeleteToManyRelationshipResponse, GameCenterAppVersionsCompatibilityVersionsGetToManyRelatedData, GameCenterAppVersionsCompatibilityVersionsGetToManyRelatedError, GameCenterAppVersionsCompatibilityVersionsGetToManyRelatedResponse, GameCenterDetailsAchievementReleasesGetToManyRelatedData, GameCenterDetailsAchievementReleasesGetToManyRelatedError, GameCenterDetailsAchievementReleasesGetToManyRelatedResponse, GameCenterDetailsGameCenterAchievementsGetToManyRelationshipData, GameCenterDetailsGameCenterAchievementsGetToManyRelationshipError, GameCenterDetailsGameCenterAchievementsGetToManyRelationshipResponse, GameCenterDetailsGameCenterAchievementsReplaceToManyRelationshipData, GameCenterDetailsGameCenterAchievementsReplaceToManyRelationshipError, GameCenterDetailsGameCenterAchievementsReplaceToManyRelationshipResponse, GameCenterDetailsGameCenterAchievementsGetToManyRelatedData, GameCenterDetailsGameCenterAchievementsGetToManyRelatedError, GameCenterDetailsGameCenterAchievementsGetToManyRelatedResponse, GameCenterDetailsGameCenterAppVersionsGetToManyRelatedData, GameCenterDetailsGameCenterAppVersionsGetToManyRelatedError, GameCenterDetailsGameCenterAppVersionsGetToManyRelatedResponse, GameCenterDetailsGameCenterGroupGetToOneRelatedData, GameCenterDetailsGameCenterGroupGetToOneRelatedError, GameCenterDetailsGameCenterGroupGetToOneRelatedResponse, GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelationshipData, GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelationshipError, GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelationshipResponse, GameCenterDetailsGameCenterLeaderboardSetsReplaceToManyRelationshipData, GameCenterDetailsGameCenterLeaderboardSetsReplaceToManyRelationshipError, GameCenterDetailsGameCenterLeaderboardSetsReplaceToManyRelationshipResponse, GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedData, GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedError, GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedResponse, GameCenterDetailsGameCenterLeaderboardsGetToManyRelationshipData, GameCenterDetailsGameCenterLeaderboardsGetToManyRelationshipError, GameCenterDetailsGameCenterLeaderboardsGetToManyRelationshipResponse, GameCenterDetailsGameCenterLeaderboardsReplaceToManyRelationshipData, GameCenterDetailsGameCenterLeaderboardsReplaceToManyRelationshipError, GameCenterDetailsGameCenterLeaderboardsReplaceToManyRelationshipResponse, GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedData, GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedError, GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedResponse, GameCenterDetailsLeaderboardReleasesGetToManyRelatedData, GameCenterDetailsLeaderboardReleasesGetToManyRelatedError, GameCenterDetailsLeaderboardReleasesGetToManyRelatedResponse, GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedData, GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedError, GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedResponse, GameCenterEnabledVersionsCompatibleVersionsGetToManyRelationshipData, GameCenterEnabledVersionsCompatibleVersionsGetToManyRelationshipError, GameCenterEnabledVersionsCompatibleVersionsGetToManyRelationshipResponse, GameCenterEnabledVersionsCompatibleVersionsCreateToManyRelationshipData, GameCenterEnabledVersionsCompatibleVersionsCreateToManyRelationshipError, GameCenterEnabledVersionsCompatibleVersionsCreateToManyRelationshipResponse, GameCenterEnabledVersionsCompatibleVersionsReplaceToManyRelationshipData, GameCenterEnabledVersionsCompatibleVersionsReplaceToManyRelationshipError, GameCenterEnabledVersionsCompatibleVersionsReplaceToManyRelationshipResponse, GameCenterEnabledVersionsCompatibleVersionsDeleteToManyRelationshipData, GameCenterEnabledVersionsCompatibleVersionsDeleteToManyRelationshipError, GameCenterEnabledVersionsCompatibleVersionsDeleteToManyRelationshipResponse, GameCenterEnabledVersionsCompatibleVersionsGetToManyRelatedData, GameCenterEnabledVersionsCompatibleVersionsGetToManyRelatedError, GameCenterEnabledVersionsCompatibleVersionsGetToManyRelatedResponse, GameCenterGroupsGameCenterAchievementsGetToManyRelationshipData, GameCenterGroupsGameCenterAchievementsGetToManyRelationshipError, GameCenterGroupsGameCenterAchievementsGetToManyRelationshipResponse, GameCenterGroupsGameCenterAchievementsReplaceToManyRelationshipData, GameCenterGroupsGameCenterAchievementsReplaceToManyRelationshipError, GameCenterGroupsGameCenterAchievementsReplaceToManyRelationshipResponse, GameCenterGroupsGameCenterAchievementsGetToManyRelatedData, GameCenterGroupsGameCenterAchievementsGetToManyRelatedError, GameCenterGroupsGameCenterAchievementsGetToManyRelatedResponse, GameCenterGroupsGameCenterDetailsGetToManyRelatedData, GameCenterGroupsGameCenterDetailsGetToManyRelatedError, GameCenterGroupsGameCenterDetailsGetToManyRelatedResponse, GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelationshipData, GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelationshipError, GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelationshipResponse, GameCenterGroupsGameCenterLeaderboardSetsReplaceToManyRelationshipData, GameCenterGroupsGameCenterLeaderboardSetsReplaceToManyRelationshipError, GameCenterGroupsGameCenterLeaderboardSetsReplaceToManyRelationshipResponse, GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelatedData, GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelatedError, GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelatedResponse, GameCenterGroupsGameCenterLeaderboardsGetToManyRelationshipData, GameCenterGroupsGameCenterLeaderboardsGetToManyRelationshipError, GameCenterGroupsGameCenterLeaderboardsGetToManyRelationshipResponse, GameCenterGroupsGameCenterLeaderboardsReplaceToManyRelationshipData, GameCenterGroupsGameCenterLeaderboardsReplaceToManyRelationshipError, GameCenterGroupsGameCenterLeaderboardsReplaceToManyRelationshipResponse, GameCenterGroupsGameCenterLeaderboardsGetToManyRelatedData, GameCenterGroupsGameCenterLeaderboardsGetToManyRelatedError, GameCenterGroupsGameCenterLeaderboardsGetToManyRelatedResponse, GameCenterLeaderboardLocalizationsGameCenterLeaderboardImageGetToOneRelatedData, GameCenterLeaderboardLocalizationsGameCenterLeaderboardImageGetToOneRelatedError, GameCenterLeaderboardLocalizationsGameCenterLeaderboardImageGetToOneRelatedResponse, GameCenterLeaderboardSetLocalizationsGameCenterLeaderboardSetImageGetToOneRelatedData, GameCenterLeaderboardSetLocalizationsGameCenterLeaderboardSetImageGetToOneRelatedError, GameCenterLeaderboardSetLocalizationsGameCenterLeaderboardSetImageGetToOneRelatedResponse, GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedData, GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedError, GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedResponse, GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedData, GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedError, GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedResponse, GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelationshipData, GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelationshipError, GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelationshipResponse, GameCenterLeaderboardSetsGameCenterLeaderboardsCreateToManyRelationshipData, GameCenterLeaderboardSetsGameCenterLeaderboardsCreateToManyRelationshipError, GameCenterLeaderboardSetsGameCenterLeaderboardsCreateToManyRelationshipResponse, GameCenterLeaderboardSetsGameCenterLeaderboardsReplaceToManyRelationshipData, GameCenterLeaderboardSetsGameCenterLeaderboardsReplaceToManyRelationshipError, GameCenterLeaderboardSetsGameCenterLeaderboardsReplaceToManyRelationshipResponse, GameCenterLeaderboardSetsGameCenterLeaderboardsDeleteToManyRelationshipData, GameCenterLeaderboardSetsGameCenterLeaderboardsDeleteToManyRelationshipError, GameCenterLeaderboardSetsGameCenterLeaderboardsDeleteToManyRelationshipResponse, GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelatedData, GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelatedError, GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelatedResponse, GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelationshipData, GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelationshipError, GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelationshipResponse, GameCenterLeaderboardSetsGroupLeaderboardSetUpdateToOneRelationshipData, GameCenterLeaderboardSetsGroupLeaderboardSetUpdateToOneRelationshipError, GameCenterLeaderboardSetsGroupLeaderboardSetUpdateToOneRelationshipResponse, GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelatedData, GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelatedError, GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelatedResponse, GameCenterLeaderboardSetsLocalizationsGetToManyRelatedData, GameCenterLeaderboardSetsLocalizationsGetToManyRelatedError, GameCenterLeaderboardSetsLocalizationsGetToManyRelatedResponse, GameCenterLeaderboardSetsReleasesGetToManyRelatedData, GameCenterLeaderboardSetsReleasesGetToManyRelatedError, GameCenterLeaderboardSetsReleasesGetToManyRelatedResponse, GameCenterLeaderboardsGroupLeaderboardGetToOneRelationshipData, GameCenterLeaderboardsGroupLeaderboardGetToOneRelationshipError, GameCenterLeaderboardsGroupLeaderboardGetToOneRelationshipResponse, GameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationshipData, GameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationshipError, GameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationshipResponse, GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedData, GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedError, GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedResponse, GameCenterLeaderboardsLocalizationsGetToManyRelatedData, GameCenterLeaderboardsLocalizationsGetToManyRelatedError, GameCenterLeaderboardsLocalizationsGetToManyRelatedResponse, GameCenterLeaderboardsReleasesGetToManyRelatedData, GameCenterLeaderboardsReleasesGetToManyRelatedError, GameCenterLeaderboardsReleasesGetToManyRelatedResponse, GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedData, GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedError, GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedResponse, GameCenterMatchmakingRuleSetsRulesGetToManyRelatedData, GameCenterMatchmakingRuleSetsRulesGetToManyRelatedError, GameCenterMatchmakingRuleSetsRulesGetToManyRelatedResponse, GameCenterMatchmakingRuleSetsTeamsGetToManyRelatedData, GameCenterMatchmakingRuleSetsTeamsGetToManyRelatedError, GameCenterMatchmakingRuleSetsTeamsGetToManyRelatedResponse, InAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelatedData, InAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelatedError, InAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelatedResponse, InAppPurchasePriceSchedulesAutomaticPricesGetToManyRelatedData, InAppPurchasePriceSchedulesAutomaticPricesGetToManyRelatedError, InAppPurchasePriceSchedulesAutomaticPricesGetToManyRelatedResponse, InAppPurchasePriceSchedulesBaseTerritoryGetToOneRelatedData, InAppPurchasePriceSchedulesBaseTerritoryGetToOneRelatedError, InAppPurchasePriceSchedulesBaseTerritoryGetToOneRelatedResponse, InAppPurchasePriceSchedulesManualPricesGetToManyRelatedData, InAppPurchasePriceSchedulesManualPricesGetToManyRelatedError, InAppPurchasePriceSchedulesManualPricesGetToManyRelatedResponse, InAppPurchasesV2AppStoreReviewScreenshotGetToOneRelatedData, InAppPurchasesV2AppStoreReviewScreenshotGetToOneRelatedError, InAppPurchasesV2AppStoreReviewScreenshotGetToOneRelatedResponse, InAppPurchasesV2ContentGetToOneRelatedData, InAppPurchasesV2ContentGetToOneRelatedError, InAppPurchasesV2ContentGetToOneRelatedResponse, InAppPurchasesV2IapPriceScheduleGetToOneRelatedData, InAppPurchasesV2IapPriceScheduleGetToOneRelatedError, InAppPurchasesV2IapPriceScheduleGetToOneRelatedResponse, InAppPurchasesV2ImagesGetToManyRelatedData, InAppPurchasesV2ImagesGetToManyRelatedError, InAppPurchasesV2ImagesGetToManyRelatedResponse, InAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelatedData, InAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelatedError, InAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelatedResponse, InAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelatedData, InAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelatedError, InAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelatedResponse, InAppPurchasesV2PricePointsGetToManyRelatedData, InAppPurchasesV2PricePointsGetToManyRelatedError, InAppPurchasesV2PricePointsGetToManyRelatedResponse, InAppPurchasesV2PromotedPurchaseGetToOneRelatedData, InAppPurchasesV2PromotedPurchaseGetToOneRelatedError, InAppPurchasesV2PromotedPurchaseGetToOneRelatedResponse, PreReleaseVersionsAppGetToOneRelatedData, PreReleaseVersionsAppGetToOneRelatedError, PreReleaseVersionsAppGetToOneRelatedResponse, PreReleaseVersionsBuildsGetToManyRelatedData, PreReleaseVersionsBuildsGetToManyRelatedError, PreReleaseVersionsBuildsGetToManyRelatedResponse, ProfilesBundleIdGetToOneRelatedData, ProfilesBundleIdGetToOneRelatedError, ProfilesBundleIdGetToOneRelatedResponse, ProfilesCertificatesGetToManyRelatedData, ProfilesCertificatesGetToManyRelatedError, ProfilesCertificatesGetToManyRelatedResponse, ProfilesDevicesGetToManyRelatedData, ProfilesDevicesGetToManyRelatedError, ProfilesDevicesGetToManyRelatedResponse, PromotedPurchasesPromotionImagesGetToManyRelatedData, PromotedPurchasesPromotionImagesGetToManyRelatedError, PromotedPurchasesPromotionImagesGetToManyRelatedResponse, ReviewSubmissionsItemsGetToManyRelatedData, ReviewSubmissionsItemsGetToManyRelatedError, ReviewSubmissionsItemsGetToManyRelatedResponse, ScmProvidersRepositoriesGetToManyRelatedData, ScmProvidersRepositoriesGetToManyRelatedError, ScmProvidersRepositoriesGetToManyRelatedResponse, ScmRepositoriesGitReferencesGetToManyRelatedData, ScmRepositoriesGitReferencesGetToManyRelatedError, ScmRepositoriesGitReferencesGetToManyRelatedResponse, ScmRepositoriesPullRequestsGetToManyRelatedData, ScmRepositoriesPullRequestsGetToManyRelatedError, ScmRepositoriesPullRequestsGetToManyRelatedResponse, SubscriptionAvailabilitiesAvailableTerritoriesGetToManyRelatedData, SubscriptionAvailabilitiesAvailableTerritoriesGetToManyRelatedError, SubscriptionAvailabilitiesAvailableTerritoriesGetToManyRelatedResponse, SubscriptionGroupsSubscriptionGroupLocalizationsGetToManyRelatedData, SubscriptionGroupsSubscriptionGroupLocalizationsGetToManyRelatedError, SubscriptionGroupsSubscriptionGroupLocalizationsGetToManyRelatedResponse, SubscriptionGroupsSubscriptionsGetToManyRelatedData, SubscriptionGroupsSubscriptionsGetToManyRelatedError, SubscriptionGroupsSubscriptionsGetToManyRelatedResponse, SubscriptionOfferCodeOneTimeUseCodesValuesGetToOneRelatedData, SubscriptionOfferCodeOneTimeUseCodesValuesGetToOneRelatedError, SubscriptionOfferCodeOneTimeUseCodesValuesGetToOneRelatedResponse, SubscriptionOfferCodesCustomCodesGetToManyRelatedData, SubscriptionOfferCodesCustomCodesGetToManyRelatedError, SubscriptionOfferCodesCustomCodesGetToManyRelatedResponse, SubscriptionOfferCodesOneTimeUseCodesGetToManyRelatedData, SubscriptionOfferCodesOneTimeUseCodesGetToManyRelatedError, SubscriptionOfferCodesOneTimeUseCodesGetToManyRelatedResponse, SubscriptionOfferCodesPricesGetToManyRelatedData, SubscriptionOfferCodesPricesGetToManyRelatedError, SubscriptionOfferCodesPricesGetToManyRelatedResponse, SubscriptionPricePointsEqualizationsGetToManyRelatedData, SubscriptionPricePointsEqualizationsGetToManyRelatedError, SubscriptionPricePointsEqualizationsGetToManyRelatedResponse, SubscriptionPromotionalOffersPricesGetToManyRelatedData, SubscriptionPromotionalOffersPricesGetToManyRelatedError, SubscriptionPromotionalOffersPricesGetToManyRelatedResponse, SubscriptionsAppStoreReviewScreenshotGetToOneRelatedData, SubscriptionsAppStoreReviewScreenshotGetToOneRelatedError, SubscriptionsAppStoreReviewScreenshotGetToOneRelatedResponse, SubscriptionsImagesGetToManyRelatedData, SubscriptionsImagesGetToManyRelatedError, SubscriptionsImagesGetToManyRelatedResponse, SubscriptionsIntroductoryOffersGetToManyRelationshipData, SubscriptionsIntroductoryOffersGetToManyRelationshipError, SubscriptionsIntroductoryOffersGetToManyRelationshipResponse, SubscriptionsIntroductoryOffersDeleteToManyRelationshipData, SubscriptionsIntroductoryOffersDeleteToManyRelationshipError, SubscriptionsIntroductoryOffersDeleteToManyRelationshipResponse, SubscriptionsIntroductoryOffersGetToManyRelatedData, SubscriptionsIntroductoryOffersGetToManyRelatedError, SubscriptionsIntroductoryOffersGetToManyRelatedResponse, SubscriptionsOfferCodesGetToManyRelatedData, SubscriptionsOfferCodesGetToManyRelatedError, SubscriptionsOfferCodesGetToManyRelatedResponse, SubscriptionsPricePointsGetToManyRelatedData, SubscriptionsPricePointsGetToManyRelatedError, SubscriptionsPricePointsGetToManyRelatedResponse, SubscriptionsPricesGetToManyRelationshipData, SubscriptionsPricesGetToManyRelationshipError, SubscriptionsPricesGetToManyRelationshipResponse, SubscriptionsPricesDeleteToManyRelationshipData, SubscriptionsPricesDeleteToManyRelationshipError, SubscriptionsPricesDeleteToManyRelationshipResponse, SubscriptionsPricesGetToManyRelatedData, SubscriptionsPricesGetToManyRelatedError, SubscriptionsPricesGetToManyRelatedResponse, SubscriptionsPromotedPurchaseGetToOneRelatedData, SubscriptionsPromotedPurchaseGetToOneRelatedError, SubscriptionsPromotedPurchaseGetToOneRelatedResponse, SubscriptionsPromotionalOffersGetToManyRelatedData, SubscriptionsPromotionalOffersGetToManyRelatedError, SubscriptionsPromotionalOffersGetToManyRelatedResponse, SubscriptionsSubscriptionAvailabilityGetToOneRelatedData, SubscriptionsSubscriptionAvailabilityGetToOneRelatedError, SubscriptionsSubscriptionAvailabilityGetToOneRelatedResponse, SubscriptionsSubscriptionLocalizationsGetToManyRelatedData, SubscriptionsSubscriptionLocalizationsGetToManyRelatedError, SubscriptionsSubscriptionLocalizationsGetToManyRelatedResponse, SubscriptionsWinBackOffersGetToManyRelatedData, SubscriptionsWinBackOffersGetToManyRelatedError, SubscriptionsWinBackOffersGetToManyRelatedResponse, UserInvitationsVisibleAppsGetToManyRelatedData, UserInvitationsVisibleAppsGetToManyRelatedError, UserInvitationsVisibleAppsGetToManyRelatedResponse, UsersVisibleAppsGetToManyRelationshipData, UsersVisibleAppsGetToManyRelationshipError, UsersVisibleAppsGetToManyRelationshipResponse, UsersVisibleAppsCreateToManyRelationshipData, UsersVisibleAppsCreateToManyRelationshipError, UsersVisibleAppsCreateToManyRelationshipResponse, UsersVisibleAppsReplaceToManyRelationshipData, UsersVisibleAppsReplaceToManyRelationshipError, UsersVisibleAppsReplaceToManyRelationshipResponse, UsersVisibleAppsDeleteToManyRelationshipData, UsersVisibleAppsDeleteToManyRelationshipError, UsersVisibleAppsDeleteToManyRelationshipResponse, UsersVisibleAppsGetToManyRelatedData, UsersVisibleAppsGetToManyRelatedError, UsersVisibleAppsGetToManyRelatedResponse, WinBackOffersPricesGetToManyRelatedData, WinBackOffersPricesGetToManyRelatedError, WinBackOffersPricesGetToManyRelatedResponse, AppsBetaTesterUsagesGetMetricsData, AppsBetaTesterUsagesGetMetricsError, AppsBetaTesterUsagesGetMetricsResponse, BetaGroupsBetaTesterUsagesGetMetricsData, BetaGroupsBetaTesterUsagesGetMetricsError, BetaGroupsBetaTesterUsagesGetMetricsResponse, BetaTestersBetaTesterUsagesGetMetricsData, BetaTestersBetaTesterUsagesGetMetricsError, BetaTestersBetaTesterUsagesGetMetricsResponse, BuildsBetaBuildUsagesGetMetricsData, BuildsBetaBuildUsagesGetMetricsError, BuildsBetaBuildUsagesGetMetricsResponse, GameCenterDetailsClassicMatchmakingRequestsGetMetricsData, GameCenterDetailsClassicMatchmakingRequestsGetMetricsError, GameCenterDetailsClassicMatchmakingRequestsGetMetricsResponse, GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsData, GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsError, GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsResponse, GameCenterMatchmakingQueuesExperimentMatchmakingQueueSizesGetMetricsData, GameCenterMatchmakingQueuesExperimentMatchmakingQueueSizesGetMetricsError, GameCenterMatchmakingQueuesExperimentMatchmakingQueueSizesGetMetricsResponse, GameCenterMatchmakingQueuesExperimentMatchmakingRequestsGetMetricsData, GameCenterMatchmakingQueuesExperimentMatchmakingRequestsGetMetricsError, GameCenterMatchmakingQueuesExperimentMatchmakingRequestsGetMetricsResponse, GameCenterMatchmakingQueuesMatchmakingQueueSizesGetMetricsData, GameCenterMatchmakingQueuesMatchmakingQueueSizesGetMetricsError, GameCenterMatchmakingQueuesMatchmakingQueueSizesGetMetricsResponse, GameCenterMatchmakingQueuesMatchmakingRequestsGetMetricsData, GameCenterMatchmakingQueuesMatchmakingRequestsGetMetricsError, GameCenterMatchmakingQueuesMatchmakingRequestsGetMetricsResponse, GameCenterMatchmakingQueuesMatchmakingSessionsGetMetricsData, GameCenterMatchmakingQueuesMatchmakingSessionsGetMetricsError, GameCenterMatchmakingQueuesMatchmakingSessionsGetMetricsResponse, GameCenterMatchmakingRulesMatchmakingBooleanRuleResultsGetMetricsData, GameCenterMatchmakingRulesMatchmakingBooleanRuleResultsGetMetricsError, GameCenterMatchmakingRulesMatchmakingBooleanRuleResultsGetMetricsResponse, GameCenterMatchmakingRulesMatchmakingNumberRuleResultsGetMetricsData, GameCenterMatchmakingRulesMatchmakingNumberRuleResultsGetMetricsError, GameCenterMatchmakingRulesMatchmakingNumberRuleResultsGetMetricsResponse, GameCenterMatchmakingRulesMatchmakingRuleErrorsGetMetricsData, GameCenterMatchmakingRulesMatchmakingRuleErrorsGetMetricsError, GameCenterMatchmakingRulesMatchmakingRuleErrorsGetMetricsResponse } from './types.gen';

export const client = createClient(createConfig());

export const actorsGetCollection = <ThrowOnError extends boolean = false>(options: Options<ActorsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<ActorsGetCollectionResponse, ActorsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/actors'
}); };

export const actorsGetInstance = <ThrowOnError extends boolean = false>(options: Options<ActorsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<ActorsGetInstanceResponse, ActorsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/actors/{id}'
}); };

export const ageRatingDeclarationsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AgeRatingDeclarationsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AgeRatingDeclarationsUpdateInstanceResponse, AgeRatingDeclarationsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/ageRatingDeclarations/{id}'
}); };

export const alternativeDistributionDomainsGetCollection = <ThrowOnError extends boolean = false>(options?: Options<AlternativeDistributionDomainsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<AlternativeDistributionDomainsGetCollectionResponse, AlternativeDistributionDomainsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/alternativeDistributionDomains'
}); };

export const alternativeDistributionDomainsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AlternativeDistributionDomainsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AlternativeDistributionDomainsCreateInstanceResponse, AlternativeDistributionDomainsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/alternativeDistributionDomains'
}); };

export const alternativeDistributionDomainsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AlternativeDistributionDomainsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AlternativeDistributionDomainsGetInstanceResponse, AlternativeDistributionDomainsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/alternativeDistributionDomains/{id}'
}); };

export const alternativeDistributionDomainsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AlternativeDistributionDomainsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AlternativeDistributionDomainsDeleteInstanceResponse, AlternativeDistributionDomainsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/alternativeDistributionDomains/{id}'
}); };

export const alternativeDistributionKeysGetCollection = <ThrowOnError extends boolean = false>(options?: Options<AlternativeDistributionKeysGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<AlternativeDistributionKeysGetCollectionResponse, AlternativeDistributionKeysGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/alternativeDistributionKeys'
}); };

export const alternativeDistributionKeysCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AlternativeDistributionKeysCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AlternativeDistributionKeysCreateInstanceResponse, AlternativeDistributionKeysCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/alternativeDistributionKeys'
}); };

export const alternativeDistributionKeysGetInstance = <ThrowOnError extends boolean = false>(options: Options<AlternativeDistributionKeysGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AlternativeDistributionKeysGetInstanceResponse, AlternativeDistributionKeysGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/alternativeDistributionKeys/{id}'
}); };

export const alternativeDistributionKeysDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AlternativeDistributionKeysDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AlternativeDistributionKeysDeleteInstanceResponse, AlternativeDistributionKeysDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/alternativeDistributionKeys/{id}'
}); };

export const alternativeDistributionPackageDeltasGetInstance = <ThrowOnError extends boolean = false>(options: Options<AlternativeDistributionPackageDeltasGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AlternativeDistributionPackageDeltasGetInstanceResponse, AlternativeDistributionPackageDeltasGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/alternativeDistributionPackageDeltas/{id}'
}); };

export const alternativeDistributionPackageVariantsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AlternativeDistributionPackageVariantsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AlternativeDistributionPackageVariantsGetInstanceResponse, AlternativeDistributionPackageVariantsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/alternativeDistributionPackageVariants/{id}'
}); };

export const alternativeDistributionPackageVersionsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AlternativeDistributionPackageVersionsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AlternativeDistributionPackageVersionsGetInstanceResponse, AlternativeDistributionPackageVersionsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/alternativeDistributionPackageVersions/{id}'
}); };

export const alternativeDistributionPackagesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AlternativeDistributionPackagesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AlternativeDistributionPackagesCreateInstanceResponse, AlternativeDistributionPackagesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/alternativeDistributionPackages'
}); };

export const alternativeDistributionPackagesGetInstance = <ThrowOnError extends boolean = false>(options: Options<AlternativeDistributionPackagesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AlternativeDistributionPackagesGetInstanceResponse, AlternativeDistributionPackagesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/alternativeDistributionPackages/{id}'
}); };

export const analyticsReportInstancesGetInstance = <ThrowOnError extends boolean = false>(options: Options<AnalyticsReportInstancesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AnalyticsReportInstancesGetInstanceResponse, AnalyticsReportInstancesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/analyticsReportInstances/{id}'
}); };

export const analyticsReportRequestsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AnalyticsReportRequestsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AnalyticsReportRequestsCreateInstanceResponse, AnalyticsReportRequestsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/analyticsReportRequests'
}); };

export const analyticsReportRequestsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AnalyticsReportRequestsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AnalyticsReportRequestsGetInstanceResponse, AnalyticsReportRequestsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/analyticsReportRequests/{id}'
}); };

export const analyticsReportRequestsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AnalyticsReportRequestsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AnalyticsReportRequestsDeleteInstanceResponse, AnalyticsReportRequestsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/analyticsReportRequests/{id}'
}); };

export const analyticsReportSegmentsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AnalyticsReportSegmentsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AnalyticsReportSegmentsGetInstanceResponse, AnalyticsReportSegmentsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/analyticsReportSegments/{id}'
}); };

export const analyticsReportsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AnalyticsReportsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AnalyticsReportsGetInstanceResponse, AnalyticsReportsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/analyticsReports/{id}'
}); };

export const appAvailabilitiesV2CreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppAvailabilitiesV2CreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppAvailabilitiesV2CreateInstanceResponse, AppAvailabilitiesV2CreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v2/appAvailabilities'
}); };

export const appAvailabilitiesV2GetInstance = <ThrowOnError extends boolean = false>(options: Options<AppAvailabilitiesV2GetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppAvailabilitiesV2GetInstanceResponse, AppAvailabilitiesV2GetInstanceError, ThrowOnError>({
    ...options,
    url: '/v2/appAvailabilities/{id}'
}); };

/**
 * @deprecated
 */
export const appAvailabilitiesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppAvailabilitiesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppAvailabilitiesCreateInstanceResponse, AppAvailabilitiesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appAvailabilities'
}); };

/**
 * @deprecated
 */
export const appAvailabilitiesGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppAvailabilitiesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppAvailabilitiesGetInstanceResponse, AppAvailabilitiesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appAvailabilities/{id}'
}); };

export const appCategoriesGetCollection = <ThrowOnError extends boolean = false>(options?: Options<AppCategoriesGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<AppCategoriesGetCollectionResponse, AppCategoriesGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/appCategories'
}); };

export const appCategoriesGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppCategoriesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppCategoriesGetInstanceResponse, AppCategoriesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appCategories/{id}'
}); };

export const appClipAdvancedExperienceImagesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipAdvancedExperienceImagesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppClipAdvancedExperienceImagesCreateInstanceResponse, AppClipAdvancedExperienceImagesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClipAdvancedExperienceImages'
}); };

export const appClipAdvancedExperienceImagesGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipAdvancedExperienceImagesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppClipAdvancedExperienceImagesGetInstanceResponse, AppClipAdvancedExperienceImagesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClipAdvancedExperienceImages/{id}'
}); };

export const appClipAdvancedExperienceImagesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipAdvancedExperienceImagesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppClipAdvancedExperienceImagesUpdateInstanceResponse, AppClipAdvancedExperienceImagesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClipAdvancedExperienceImages/{id}'
}); };

export const appClipAdvancedExperiencesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipAdvancedExperiencesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppClipAdvancedExperiencesCreateInstanceResponse, AppClipAdvancedExperiencesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClipAdvancedExperiences'
}); };

export const appClipAdvancedExperiencesGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipAdvancedExperiencesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppClipAdvancedExperiencesGetInstanceResponse, AppClipAdvancedExperiencesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClipAdvancedExperiences/{id}'
}); };

export const appClipAdvancedExperiencesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipAdvancedExperiencesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppClipAdvancedExperiencesUpdateInstanceResponse, AppClipAdvancedExperiencesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClipAdvancedExperiences/{id}'
}); };

export const appClipAppStoreReviewDetailsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipAppStoreReviewDetailsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppClipAppStoreReviewDetailsCreateInstanceResponse, AppClipAppStoreReviewDetailsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClipAppStoreReviewDetails'
}); };

export const appClipAppStoreReviewDetailsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipAppStoreReviewDetailsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppClipAppStoreReviewDetailsGetInstanceResponse, AppClipAppStoreReviewDetailsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClipAppStoreReviewDetails/{id}'
}); };

export const appClipAppStoreReviewDetailsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipAppStoreReviewDetailsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppClipAppStoreReviewDetailsUpdateInstanceResponse, AppClipAppStoreReviewDetailsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClipAppStoreReviewDetails/{id}'
}); };

export const appClipDefaultExperienceLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipDefaultExperienceLocalizationsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppClipDefaultExperienceLocalizationsCreateInstanceResponse, AppClipDefaultExperienceLocalizationsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClipDefaultExperienceLocalizations'
}); };

export const appClipDefaultExperienceLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipDefaultExperienceLocalizationsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppClipDefaultExperienceLocalizationsGetInstanceResponse, AppClipDefaultExperienceLocalizationsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClipDefaultExperienceLocalizations/{id}'
}); };

export const appClipDefaultExperienceLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipDefaultExperienceLocalizationsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppClipDefaultExperienceLocalizationsUpdateInstanceResponse, AppClipDefaultExperienceLocalizationsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClipDefaultExperienceLocalizations/{id}'
}); };

export const appClipDefaultExperienceLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipDefaultExperienceLocalizationsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppClipDefaultExperienceLocalizationsDeleteInstanceResponse, AppClipDefaultExperienceLocalizationsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClipDefaultExperienceLocalizations/{id}'
}); };

export const appClipDefaultExperiencesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipDefaultExperiencesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppClipDefaultExperiencesCreateInstanceResponse, AppClipDefaultExperiencesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClipDefaultExperiences'
}); };

export const appClipDefaultExperiencesGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipDefaultExperiencesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppClipDefaultExperiencesGetInstanceResponse, AppClipDefaultExperiencesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClipDefaultExperiences/{id}'
}); };

export const appClipDefaultExperiencesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipDefaultExperiencesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppClipDefaultExperiencesUpdateInstanceResponse, AppClipDefaultExperiencesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClipDefaultExperiences/{id}'
}); };

export const appClipDefaultExperiencesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipDefaultExperiencesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppClipDefaultExperiencesDeleteInstanceResponse, AppClipDefaultExperiencesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClipDefaultExperiences/{id}'
}); };

export const appClipHeaderImagesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipHeaderImagesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppClipHeaderImagesCreateInstanceResponse, AppClipHeaderImagesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClipHeaderImages'
}); };

export const appClipHeaderImagesGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipHeaderImagesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppClipHeaderImagesGetInstanceResponse, AppClipHeaderImagesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClipHeaderImages/{id}'
}); };

export const appClipHeaderImagesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipHeaderImagesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppClipHeaderImagesUpdateInstanceResponse, AppClipHeaderImagesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClipHeaderImages/{id}'
}); };

export const appClipHeaderImagesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipHeaderImagesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppClipHeaderImagesDeleteInstanceResponse, AppClipHeaderImagesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClipHeaderImages/{id}'
}); };

export const appClipsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppClipsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppClipsGetInstanceResponse, AppClipsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appClips/{id}'
}); };

export const appCustomProductPageLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppCustomProductPageLocalizationsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppCustomProductPageLocalizationsCreateInstanceResponse, AppCustomProductPageLocalizationsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appCustomProductPageLocalizations'
}); };

export const appCustomProductPageLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppCustomProductPageLocalizationsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppCustomProductPageLocalizationsGetInstanceResponse, AppCustomProductPageLocalizationsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appCustomProductPageLocalizations/{id}'
}); };

export const appCustomProductPageLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppCustomProductPageLocalizationsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppCustomProductPageLocalizationsUpdateInstanceResponse, AppCustomProductPageLocalizationsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appCustomProductPageLocalizations/{id}'
}); };

export const appCustomProductPageLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppCustomProductPageLocalizationsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppCustomProductPageLocalizationsDeleteInstanceResponse, AppCustomProductPageLocalizationsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appCustomProductPageLocalizations/{id}'
}); };

export const appCustomProductPageVersionsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppCustomProductPageVersionsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppCustomProductPageVersionsCreateInstanceResponse, AppCustomProductPageVersionsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appCustomProductPageVersions'
}); };

export const appCustomProductPageVersionsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppCustomProductPageVersionsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppCustomProductPageVersionsGetInstanceResponse, AppCustomProductPageVersionsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appCustomProductPageVersions/{id}'
}); };

export const appCustomProductPageVersionsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppCustomProductPageVersionsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppCustomProductPageVersionsUpdateInstanceResponse, AppCustomProductPageVersionsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appCustomProductPageVersions/{id}'
}); };

export const appCustomProductPagesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppCustomProductPagesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppCustomProductPagesCreateInstanceResponse, AppCustomProductPagesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appCustomProductPages'
}); };

export const appCustomProductPagesGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppCustomProductPagesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppCustomProductPagesGetInstanceResponse, AppCustomProductPagesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appCustomProductPages/{id}'
}); };

export const appCustomProductPagesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppCustomProductPagesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppCustomProductPagesUpdateInstanceResponse, AppCustomProductPagesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appCustomProductPages/{id}'
}); };

export const appCustomProductPagesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppCustomProductPagesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppCustomProductPagesDeleteInstanceResponse, AppCustomProductPagesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appCustomProductPages/{id}'
}); };

export const appEncryptionDeclarationDocumentsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppEncryptionDeclarationDocumentsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppEncryptionDeclarationDocumentsCreateInstanceResponse, AppEncryptionDeclarationDocumentsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appEncryptionDeclarationDocuments'
}); };

export const appEncryptionDeclarationDocumentsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppEncryptionDeclarationDocumentsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppEncryptionDeclarationDocumentsGetInstanceResponse, AppEncryptionDeclarationDocumentsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appEncryptionDeclarationDocuments/{id}'
}); };

export const appEncryptionDeclarationDocumentsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppEncryptionDeclarationDocumentsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppEncryptionDeclarationDocumentsUpdateInstanceResponse, AppEncryptionDeclarationDocumentsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appEncryptionDeclarationDocuments/{id}'
}); };

export const appEncryptionDeclarationsGetCollection = <ThrowOnError extends boolean = false>(options?: Options<AppEncryptionDeclarationsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<AppEncryptionDeclarationsGetCollectionResponse, AppEncryptionDeclarationsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/appEncryptionDeclarations'
}); };

export const appEncryptionDeclarationsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppEncryptionDeclarationsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppEncryptionDeclarationsCreateInstanceResponse, AppEncryptionDeclarationsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appEncryptionDeclarations'
}); };

export const appEncryptionDeclarationsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppEncryptionDeclarationsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppEncryptionDeclarationsGetInstanceResponse, AppEncryptionDeclarationsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appEncryptionDeclarations/{id}'
}); };

export const appEventLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppEventLocalizationsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppEventLocalizationsCreateInstanceResponse, AppEventLocalizationsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appEventLocalizations'
}); };

export const appEventLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppEventLocalizationsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppEventLocalizationsGetInstanceResponse, AppEventLocalizationsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appEventLocalizations/{id}'
}); };

export const appEventLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppEventLocalizationsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppEventLocalizationsUpdateInstanceResponse, AppEventLocalizationsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appEventLocalizations/{id}'
}); };

export const appEventLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppEventLocalizationsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppEventLocalizationsDeleteInstanceResponse, AppEventLocalizationsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appEventLocalizations/{id}'
}); };

export const appEventScreenshotsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppEventScreenshotsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppEventScreenshotsCreateInstanceResponse, AppEventScreenshotsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appEventScreenshots'
}); };

export const appEventScreenshotsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppEventScreenshotsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppEventScreenshotsGetInstanceResponse, AppEventScreenshotsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appEventScreenshots/{id}'
}); };

export const appEventScreenshotsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppEventScreenshotsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppEventScreenshotsUpdateInstanceResponse, AppEventScreenshotsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appEventScreenshots/{id}'
}); };

export const appEventScreenshotsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppEventScreenshotsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppEventScreenshotsDeleteInstanceResponse, AppEventScreenshotsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appEventScreenshots/{id}'
}); };

export const appEventVideoClipsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppEventVideoClipsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppEventVideoClipsCreateInstanceResponse, AppEventVideoClipsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appEventVideoClips'
}); };

export const appEventVideoClipsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppEventVideoClipsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppEventVideoClipsGetInstanceResponse, AppEventVideoClipsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appEventVideoClips/{id}'
}); };

export const appEventVideoClipsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppEventVideoClipsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppEventVideoClipsUpdateInstanceResponse, AppEventVideoClipsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appEventVideoClips/{id}'
}); };

export const appEventVideoClipsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppEventVideoClipsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppEventVideoClipsDeleteInstanceResponse, AppEventVideoClipsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appEventVideoClips/{id}'
}); };

export const appEventsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppEventsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppEventsCreateInstanceResponse, AppEventsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appEvents'
}); };

export const appEventsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppEventsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppEventsGetInstanceResponse, AppEventsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appEvents/{id}'
}); };

export const appEventsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppEventsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppEventsUpdateInstanceResponse, AppEventsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appEvents/{id}'
}); };

export const appEventsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppEventsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppEventsDeleteInstanceResponse, AppEventsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appEvents/{id}'
}); };

export const appInfoLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppInfoLocalizationsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppInfoLocalizationsCreateInstanceResponse, AppInfoLocalizationsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appInfoLocalizations'
}); };

export const appInfoLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppInfoLocalizationsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppInfoLocalizationsGetInstanceResponse, AppInfoLocalizationsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appInfoLocalizations/{id}'
}); };

export const appInfoLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppInfoLocalizationsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppInfoLocalizationsUpdateInstanceResponse, AppInfoLocalizationsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appInfoLocalizations/{id}'
}); };

export const appInfoLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppInfoLocalizationsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppInfoLocalizationsDeleteInstanceResponse, AppInfoLocalizationsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appInfoLocalizations/{id}'
}); };

export const appInfosGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppInfosGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppInfosGetInstanceResponse, AppInfosGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appInfos/{id}'
}); };

export const appInfosUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppInfosUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppInfosUpdateInstanceResponse, AppInfosUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appInfos/{id}'
}); };

/**
 * @deprecated
 */
export const appPreOrdersCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppPreOrdersCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppPreOrdersCreateInstanceResponse, AppPreOrdersCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appPreOrders'
}); };

/**
 * @deprecated
 */
export const appPreOrdersGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppPreOrdersGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppPreOrdersGetInstanceResponse, AppPreOrdersGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appPreOrders/{id}'
}); };

/**
 * @deprecated
 */
export const appPreOrdersUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppPreOrdersUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppPreOrdersUpdateInstanceResponse, AppPreOrdersUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appPreOrders/{id}'
}); };

/**
 * @deprecated
 */
export const appPreOrdersDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppPreOrdersDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppPreOrdersDeleteInstanceResponse, AppPreOrdersDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appPreOrders/{id}'
}); };

export const appPreviewSetsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppPreviewSetsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppPreviewSetsCreateInstanceResponse, AppPreviewSetsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appPreviewSets'
}); };

export const appPreviewSetsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppPreviewSetsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppPreviewSetsGetInstanceResponse, AppPreviewSetsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appPreviewSets/{id}'
}); };

export const appPreviewSetsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppPreviewSetsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppPreviewSetsDeleteInstanceResponse, AppPreviewSetsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appPreviewSets/{id}'
}); };

export const appPreviewsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppPreviewsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppPreviewsCreateInstanceResponse, AppPreviewsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appPreviews'
}); };

export const appPreviewsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppPreviewsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppPreviewsGetInstanceResponse, AppPreviewsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appPreviews/{id}'
}); };

export const appPreviewsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppPreviewsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppPreviewsUpdateInstanceResponse, AppPreviewsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appPreviews/{id}'
}); };

export const appPreviewsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppPreviewsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppPreviewsDeleteInstanceResponse, AppPreviewsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appPreviews/{id}'
}); };

export const appPricePointsV3GetInstance = <ThrowOnError extends boolean = false>(options: Options<AppPricePointsV3GetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppPricePointsV3GetInstanceResponse, AppPricePointsV3GetInstanceError, ThrowOnError>({
    ...options,
    url: '/v3/appPricePoints/{id}'
}); };

export const appPriceSchedulesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppPriceSchedulesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppPriceSchedulesCreateInstanceResponse, AppPriceSchedulesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appPriceSchedules'
}); };

export const appPriceSchedulesGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppPriceSchedulesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppPriceSchedulesGetInstanceResponse, AppPriceSchedulesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appPriceSchedules/{id}'
}); };

export const appScreenshotSetsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppScreenshotSetsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppScreenshotSetsCreateInstanceResponse, AppScreenshotSetsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appScreenshotSets'
}); };

export const appScreenshotSetsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppScreenshotSetsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppScreenshotSetsGetInstanceResponse, AppScreenshotSetsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appScreenshotSets/{id}'
}); };

export const appScreenshotSetsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppScreenshotSetsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppScreenshotSetsDeleteInstanceResponse, AppScreenshotSetsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appScreenshotSets/{id}'
}); };

export const appScreenshotsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppScreenshotsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppScreenshotsCreateInstanceResponse, AppScreenshotsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appScreenshots'
}); };

export const appScreenshotsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppScreenshotsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppScreenshotsGetInstanceResponse, AppScreenshotsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appScreenshots/{id}'
}); };

export const appScreenshotsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppScreenshotsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppScreenshotsUpdateInstanceResponse, AppScreenshotsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appScreenshots/{id}'
}); };

export const appScreenshotsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppScreenshotsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppScreenshotsDeleteInstanceResponse, AppScreenshotsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appScreenshots/{id}'
}); };

export const appStoreReviewAttachmentsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreReviewAttachmentsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppStoreReviewAttachmentsCreateInstanceResponse, AppStoreReviewAttachmentsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreReviewAttachments'
}); };

export const appStoreReviewAttachmentsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreReviewAttachmentsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreReviewAttachmentsGetInstanceResponse, AppStoreReviewAttachmentsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreReviewAttachments/{id}'
}); };

export const appStoreReviewAttachmentsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreReviewAttachmentsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppStoreReviewAttachmentsUpdateInstanceResponse, AppStoreReviewAttachmentsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreReviewAttachments/{id}'
}); };

export const appStoreReviewAttachmentsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreReviewAttachmentsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppStoreReviewAttachmentsDeleteInstanceResponse, AppStoreReviewAttachmentsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreReviewAttachments/{id}'
}); };

export const appStoreReviewDetailsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreReviewDetailsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppStoreReviewDetailsCreateInstanceResponse, AppStoreReviewDetailsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreReviewDetails'
}); };

export const appStoreReviewDetailsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreReviewDetailsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreReviewDetailsGetInstanceResponse, AppStoreReviewDetailsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreReviewDetails/{id}'
}); };

export const appStoreReviewDetailsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreReviewDetailsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppStoreReviewDetailsUpdateInstanceResponse, AppStoreReviewDetailsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreReviewDetails/{id}'
}); };

export const appStoreVersionExperimentTreatmentLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionExperimentTreatmentLocalizationsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppStoreVersionExperimentTreatmentLocalizationsCreateInstanceResponse, AppStoreVersionExperimentTreatmentLocalizationsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionExperimentTreatmentLocalizations'
}); };

export const appStoreVersionExperimentTreatmentLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionExperimentTreatmentLocalizationsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionExperimentTreatmentLocalizationsGetInstanceResponse, AppStoreVersionExperimentTreatmentLocalizationsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionExperimentTreatmentLocalizations/{id}'
}); };

export const appStoreVersionExperimentTreatmentLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionExperimentTreatmentLocalizationsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppStoreVersionExperimentTreatmentLocalizationsDeleteInstanceResponse, AppStoreVersionExperimentTreatmentLocalizationsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionExperimentTreatmentLocalizations/{id}'
}); };

export const appStoreVersionExperimentTreatmentsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionExperimentTreatmentsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppStoreVersionExperimentTreatmentsCreateInstanceResponse, AppStoreVersionExperimentTreatmentsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionExperimentTreatments'
}); };

export const appStoreVersionExperimentTreatmentsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionExperimentTreatmentsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionExperimentTreatmentsGetInstanceResponse, AppStoreVersionExperimentTreatmentsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionExperimentTreatments/{id}'
}); };

export const appStoreVersionExperimentTreatmentsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionExperimentTreatmentsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppStoreVersionExperimentTreatmentsUpdateInstanceResponse, AppStoreVersionExperimentTreatmentsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionExperimentTreatments/{id}'
}); };

export const appStoreVersionExperimentTreatmentsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionExperimentTreatmentsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppStoreVersionExperimentTreatmentsDeleteInstanceResponse, AppStoreVersionExperimentTreatmentsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionExperimentTreatments/{id}'
}); };

export const appStoreVersionExperimentsV2CreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionExperimentsV2CreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppStoreVersionExperimentsV2CreateInstanceResponse, AppStoreVersionExperimentsV2CreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v2/appStoreVersionExperiments'
}); };

export const appStoreVersionExperimentsV2GetInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionExperimentsV2GetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionExperimentsV2GetInstanceResponse, AppStoreVersionExperimentsV2GetInstanceError, ThrowOnError>({
    ...options,
    url: '/v2/appStoreVersionExperiments/{id}'
}); };

export const appStoreVersionExperimentsV2UpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionExperimentsV2UpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppStoreVersionExperimentsV2UpdateInstanceResponse, AppStoreVersionExperimentsV2UpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v2/appStoreVersionExperiments/{id}'
}); };

export const appStoreVersionExperimentsV2DeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionExperimentsV2DeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppStoreVersionExperimentsV2DeleteInstanceResponse, AppStoreVersionExperimentsV2DeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v2/appStoreVersionExperiments/{id}'
}); };

/**
 * @deprecated
 */
export const appStoreVersionExperimentsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionExperimentsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppStoreVersionExperimentsCreateInstanceResponse, AppStoreVersionExperimentsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionExperiments'
}); };

/**
 * @deprecated
 */
export const appStoreVersionExperimentsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionExperimentsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionExperimentsGetInstanceResponse, AppStoreVersionExperimentsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionExperiments/{id}'
}); };

/**
 * @deprecated
 */
export const appStoreVersionExperimentsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionExperimentsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppStoreVersionExperimentsUpdateInstanceResponse, AppStoreVersionExperimentsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionExperiments/{id}'
}); };

/**
 * @deprecated
 */
export const appStoreVersionExperimentsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionExperimentsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppStoreVersionExperimentsDeleteInstanceResponse, AppStoreVersionExperimentsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionExperiments/{id}'
}); };

export const appStoreVersionLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionLocalizationsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppStoreVersionLocalizationsCreateInstanceResponse, AppStoreVersionLocalizationsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionLocalizations'
}); };

export const appStoreVersionLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionLocalizationsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionLocalizationsGetInstanceResponse, AppStoreVersionLocalizationsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionLocalizations/{id}'
}); };

export const appStoreVersionLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionLocalizationsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppStoreVersionLocalizationsUpdateInstanceResponse, AppStoreVersionLocalizationsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionLocalizations/{id}'
}); };

export const appStoreVersionLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionLocalizationsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppStoreVersionLocalizationsDeleteInstanceResponse, AppStoreVersionLocalizationsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionLocalizations/{id}'
}); };

export const appStoreVersionPhasedReleasesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionPhasedReleasesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppStoreVersionPhasedReleasesCreateInstanceResponse, AppStoreVersionPhasedReleasesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionPhasedReleases'
}); };

export const appStoreVersionPhasedReleasesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionPhasedReleasesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppStoreVersionPhasedReleasesUpdateInstanceResponse, AppStoreVersionPhasedReleasesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionPhasedReleases/{id}'
}); };

export const appStoreVersionPhasedReleasesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionPhasedReleasesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppStoreVersionPhasedReleasesDeleteInstanceResponse, AppStoreVersionPhasedReleasesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionPhasedReleases/{id}'
}); };

export const appStoreVersionPromotionsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionPromotionsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppStoreVersionPromotionsCreateInstanceResponse, AppStoreVersionPromotionsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionPromotions'
}); };

export const appStoreVersionReleaseRequestsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionReleaseRequestsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppStoreVersionReleaseRequestsCreateInstanceResponse, AppStoreVersionReleaseRequestsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionReleaseRequests'
}); };

/**
 * @deprecated
 */
export const appStoreVersionSubmissionsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionSubmissionsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppStoreVersionSubmissionsCreateInstanceResponse, AppStoreVersionSubmissionsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionSubmissions'
}); };

/**
 * @deprecated
 */
export const appStoreVersionSubmissionsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionSubmissionsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppStoreVersionSubmissionsDeleteInstanceResponse, AppStoreVersionSubmissionsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionSubmissions/{id}'
}); };

export const appStoreVersionsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<AppStoreVersionsCreateInstanceResponse, AppStoreVersionsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersions'
}); };

export const appStoreVersionsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionsGetInstanceResponse, AppStoreVersionsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersions/{id}'
}); };

export const appStoreVersionsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppStoreVersionsUpdateInstanceResponse, AppStoreVersionsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersions/{id}'
}); };

export const appStoreVersionsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<AppStoreVersionsDeleteInstanceResponse, AppStoreVersionsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersions/{id}'
}); };

export const appsGetCollection = <ThrowOnError extends boolean = false>(options?: Options<AppsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<AppsGetCollectionResponse, AppsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/apps'
}); };

export const appsGetInstance = <ThrowOnError extends boolean = false>(options: Options<AppsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<AppsGetInstanceResponse, AppsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}'
}); };

export const appsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<AppsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<AppsUpdateInstanceResponse, AppsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}'
}); };

export const betaAppClipInvocationLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<BetaAppClipInvocationLocalizationsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<BetaAppClipInvocationLocalizationsCreateInstanceResponse, BetaAppClipInvocationLocalizationsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaAppClipInvocationLocalizations'
}); };

export const betaAppClipInvocationLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<BetaAppClipInvocationLocalizationsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<BetaAppClipInvocationLocalizationsUpdateInstanceResponse, BetaAppClipInvocationLocalizationsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaAppClipInvocationLocalizations/{id}'
}); };

export const betaAppClipInvocationLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<BetaAppClipInvocationLocalizationsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<BetaAppClipInvocationLocalizationsDeleteInstanceResponse, BetaAppClipInvocationLocalizationsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaAppClipInvocationLocalizations/{id}'
}); };

export const betaAppClipInvocationsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<BetaAppClipInvocationsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<BetaAppClipInvocationsCreateInstanceResponse, BetaAppClipInvocationsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaAppClipInvocations'
}); };

export const betaAppClipInvocationsGetInstance = <ThrowOnError extends boolean = false>(options: Options<BetaAppClipInvocationsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<BetaAppClipInvocationsGetInstanceResponse, BetaAppClipInvocationsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaAppClipInvocations/{id}'
}); };

export const betaAppClipInvocationsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<BetaAppClipInvocationsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<BetaAppClipInvocationsUpdateInstanceResponse, BetaAppClipInvocationsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaAppClipInvocations/{id}'
}); };

export const betaAppClipInvocationsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<BetaAppClipInvocationsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<BetaAppClipInvocationsDeleteInstanceResponse, BetaAppClipInvocationsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaAppClipInvocations/{id}'
}); };

export const betaAppLocalizationsGetCollection = <ThrowOnError extends boolean = false>(options?: Options<BetaAppLocalizationsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<BetaAppLocalizationsGetCollectionResponse, BetaAppLocalizationsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/betaAppLocalizations'
}); };

export const betaAppLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<BetaAppLocalizationsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<BetaAppLocalizationsCreateInstanceResponse, BetaAppLocalizationsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaAppLocalizations'
}); };

export const betaAppLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: Options<BetaAppLocalizationsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<BetaAppLocalizationsGetInstanceResponse, BetaAppLocalizationsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaAppLocalizations/{id}'
}); };

export const betaAppLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<BetaAppLocalizationsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<BetaAppLocalizationsUpdateInstanceResponse, BetaAppLocalizationsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaAppLocalizations/{id}'
}); };

export const betaAppLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<BetaAppLocalizationsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<BetaAppLocalizationsDeleteInstanceResponse, BetaAppLocalizationsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaAppLocalizations/{id}'
}); };

export const betaAppReviewDetailsGetCollection = <ThrowOnError extends boolean = false>(options: Options<BetaAppReviewDetailsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<BetaAppReviewDetailsGetCollectionResponse, BetaAppReviewDetailsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/betaAppReviewDetails'
}); };

export const betaAppReviewDetailsGetInstance = <ThrowOnError extends boolean = false>(options: Options<BetaAppReviewDetailsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<BetaAppReviewDetailsGetInstanceResponse, BetaAppReviewDetailsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaAppReviewDetails/{id}'
}); };

export const betaAppReviewDetailsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<BetaAppReviewDetailsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<BetaAppReviewDetailsUpdateInstanceResponse, BetaAppReviewDetailsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaAppReviewDetails/{id}'
}); };

export const betaAppReviewSubmissionsGetCollection = <ThrowOnError extends boolean = false>(options: Options<BetaAppReviewSubmissionsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<BetaAppReviewSubmissionsGetCollectionResponse, BetaAppReviewSubmissionsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/betaAppReviewSubmissions'
}); };

export const betaAppReviewSubmissionsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<BetaAppReviewSubmissionsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<BetaAppReviewSubmissionsCreateInstanceResponse, BetaAppReviewSubmissionsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaAppReviewSubmissions'
}); };

export const betaAppReviewSubmissionsGetInstance = <ThrowOnError extends boolean = false>(options: Options<BetaAppReviewSubmissionsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<BetaAppReviewSubmissionsGetInstanceResponse, BetaAppReviewSubmissionsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaAppReviewSubmissions/{id}'
}); };

export const betaBuildLocalizationsGetCollection = <ThrowOnError extends boolean = false>(options?: Options<BetaBuildLocalizationsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<BetaBuildLocalizationsGetCollectionResponse, BetaBuildLocalizationsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/betaBuildLocalizations'
}); };

export const betaBuildLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<BetaBuildLocalizationsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<BetaBuildLocalizationsCreateInstanceResponse, BetaBuildLocalizationsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaBuildLocalizations'
}); };

export const betaBuildLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: Options<BetaBuildLocalizationsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<BetaBuildLocalizationsGetInstanceResponse, BetaBuildLocalizationsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaBuildLocalizations/{id}'
}); };

export const betaBuildLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<BetaBuildLocalizationsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<BetaBuildLocalizationsUpdateInstanceResponse, BetaBuildLocalizationsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaBuildLocalizations/{id}'
}); };

export const betaBuildLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<BetaBuildLocalizationsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<BetaBuildLocalizationsDeleteInstanceResponse, BetaBuildLocalizationsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaBuildLocalizations/{id}'
}); };

export const betaGroupsGetCollection = <ThrowOnError extends boolean = false>(options?: Options<BetaGroupsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<BetaGroupsGetCollectionResponse, BetaGroupsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/betaGroups'
}); };

export const betaGroupsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<BetaGroupsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<BetaGroupsCreateInstanceResponse, BetaGroupsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaGroups'
}); };

export const betaGroupsGetInstance = <ThrowOnError extends boolean = false>(options: Options<BetaGroupsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<BetaGroupsGetInstanceResponse, BetaGroupsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaGroups/{id}'
}); };

export const betaGroupsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<BetaGroupsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<BetaGroupsUpdateInstanceResponse, BetaGroupsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaGroups/{id}'
}); };

export const betaGroupsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<BetaGroupsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<BetaGroupsDeleteInstanceResponse, BetaGroupsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaGroups/{id}'
}); };

export const betaLicenseAgreementsGetCollection = <ThrowOnError extends boolean = false>(options?: Options<BetaLicenseAgreementsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<BetaLicenseAgreementsGetCollectionResponse, BetaLicenseAgreementsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/betaLicenseAgreements'
}); };

export const betaLicenseAgreementsGetInstance = <ThrowOnError extends boolean = false>(options: Options<BetaLicenseAgreementsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<BetaLicenseAgreementsGetInstanceResponse, BetaLicenseAgreementsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaLicenseAgreements/{id}'
}); };

export const betaLicenseAgreementsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<BetaLicenseAgreementsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<BetaLicenseAgreementsUpdateInstanceResponse, BetaLicenseAgreementsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaLicenseAgreements/{id}'
}); };

export const betaTesterInvitationsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<BetaTesterInvitationsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<BetaTesterInvitationsCreateInstanceResponse, BetaTesterInvitationsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaTesterInvitations'
}); };

export const betaTestersGetCollection = <ThrowOnError extends boolean = false>(options?: Options<BetaTestersGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<BetaTestersGetCollectionResponse, BetaTestersGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/betaTesters'
}); };

export const betaTestersCreateInstance = <ThrowOnError extends boolean = false>(options: Options<BetaTestersCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<BetaTestersCreateInstanceResponse, BetaTestersCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaTesters'
}); };

export const betaTestersGetInstance = <ThrowOnError extends boolean = false>(options: Options<BetaTestersGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<BetaTestersGetInstanceResponse, BetaTestersGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaTesters/{id}'
}); };

export const betaTestersDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<BetaTestersDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<BetaTestersDeleteInstanceResponse, BetaTestersDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/betaTesters/{id}'
}); };

export const buildBetaDetailsGetCollection = <ThrowOnError extends boolean = false>(options?: Options<BuildBetaDetailsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<BuildBetaDetailsGetCollectionResponse, BuildBetaDetailsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/buildBetaDetails'
}); };

export const buildBetaDetailsGetInstance = <ThrowOnError extends boolean = false>(options: Options<BuildBetaDetailsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<BuildBetaDetailsGetInstanceResponse, BuildBetaDetailsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/buildBetaDetails/{id}'
}); };

export const buildBetaDetailsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<BuildBetaDetailsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<BuildBetaDetailsUpdateInstanceResponse, BuildBetaDetailsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/buildBetaDetails/{id}'
}); };

export const buildBetaNotificationsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<BuildBetaNotificationsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<BuildBetaNotificationsCreateInstanceResponse, BuildBetaNotificationsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/buildBetaNotifications'
}); };

export const buildsGetCollection = <ThrowOnError extends boolean = false>(options?: Options<BuildsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<BuildsGetCollectionResponse, BuildsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/builds'
}); };

export const buildsGetInstance = <ThrowOnError extends boolean = false>(options: Options<BuildsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<BuildsGetInstanceResponse, BuildsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/builds/{id}'
}); };

export const buildsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<BuildsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<BuildsUpdateInstanceResponse, BuildsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/builds/{id}'
}); };

export const bundleIdCapabilitiesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<BundleIdCapabilitiesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<BundleIdCapabilitiesCreateInstanceResponse, BundleIdCapabilitiesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/bundleIdCapabilities'
}); };

export const bundleIdCapabilitiesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<BundleIdCapabilitiesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<BundleIdCapabilitiesUpdateInstanceResponse, BundleIdCapabilitiesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/bundleIdCapabilities/{id}'
}); };

export const bundleIdCapabilitiesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<BundleIdCapabilitiesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<BundleIdCapabilitiesDeleteInstanceResponse, BundleIdCapabilitiesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/bundleIdCapabilities/{id}'
}); };

export const bundleIdsGetCollection = <ThrowOnError extends boolean = false>(options?: Options<BundleIdsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<BundleIdsGetCollectionResponse, BundleIdsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/bundleIds'
}); };

export const bundleIdsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<BundleIdsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<BundleIdsCreateInstanceResponse, BundleIdsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/bundleIds'
}); };

export const bundleIdsGetInstance = <ThrowOnError extends boolean = false>(options: Options<BundleIdsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<BundleIdsGetInstanceResponse, BundleIdsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/bundleIds/{id}'
}); };

export const bundleIdsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<BundleIdsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<BundleIdsUpdateInstanceResponse, BundleIdsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/bundleIds/{id}'
}); };

export const bundleIdsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<BundleIdsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<BundleIdsDeleteInstanceResponse, BundleIdsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/bundleIds/{id}'
}); };

export const certificatesGetCollection = <ThrowOnError extends boolean = false>(options?: Options<CertificatesGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<CertificatesGetCollectionResponse, CertificatesGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/certificates'
}); };

export const certificatesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<CertificatesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<CertificatesCreateInstanceResponse, CertificatesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/certificates'
}); };

export const certificatesGetInstance = <ThrowOnError extends boolean = false>(options: Options<CertificatesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<CertificatesGetInstanceResponse, CertificatesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/certificates/{id}'
}); };

export const certificatesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<CertificatesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<CertificatesDeleteInstanceResponse, CertificatesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/certificates/{id}'
}); };

export const ciArtifactsGetInstance = <ThrowOnError extends boolean = false>(options: Options<CiArtifactsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<CiArtifactsGetInstanceResponse, CiArtifactsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/ciArtifacts/{id}'
}); };

export const ciBuildActionsGetInstance = <ThrowOnError extends boolean = false>(options: Options<CiBuildActionsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<CiBuildActionsGetInstanceResponse, CiBuildActionsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/ciBuildActions/{id}'
}); };

export const ciBuildRunsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<CiBuildRunsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<CiBuildRunsCreateInstanceResponse, CiBuildRunsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/ciBuildRuns'
}); };

export const ciBuildRunsGetInstance = <ThrowOnError extends boolean = false>(options: Options<CiBuildRunsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<CiBuildRunsGetInstanceResponse, CiBuildRunsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/ciBuildRuns/{id}'
}); };

export const ciIssuesGetInstance = <ThrowOnError extends boolean = false>(options: Options<CiIssuesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<CiIssuesGetInstanceResponse, CiIssuesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/ciIssues/{id}'
}); };

export const ciMacOsVersionsGetCollection = <ThrowOnError extends boolean = false>(options?: Options<CiMacOsVersionsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<CiMacOsVersionsGetCollectionResponse, CiMacOsVersionsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/ciMacOsVersions'
}); };

export const ciMacOsVersionsGetInstance = <ThrowOnError extends boolean = false>(options: Options<CiMacOsVersionsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<CiMacOsVersionsGetInstanceResponse, CiMacOsVersionsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/ciMacOsVersions/{id}'
}); };

export const ciProductsGetCollection = <ThrowOnError extends boolean = false>(options?: Options<CiProductsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<CiProductsGetCollectionResponse, CiProductsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/ciProducts'
}); };

export const ciProductsGetInstance = <ThrowOnError extends boolean = false>(options: Options<CiProductsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<CiProductsGetInstanceResponse, CiProductsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/ciProducts/{id}'
}); };

export const ciProductsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<CiProductsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<CiProductsDeleteInstanceResponse, CiProductsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/ciProducts/{id}'
}); };

export const ciTestResultsGetInstance = <ThrowOnError extends boolean = false>(options: Options<CiTestResultsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<CiTestResultsGetInstanceResponse, CiTestResultsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/ciTestResults/{id}'
}); };

export const ciWorkflowsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<CiWorkflowsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<CiWorkflowsCreateInstanceResponse, CiWorkflowsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/ciWorkflows'
}); };

export const ciWorkflowsGetInstance = <ThrowOnError extends boolean = false>(options: Options<CiWorkflowsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<CiWorkflowsGetInstanceResponse, CiWorkflowsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/ciWorkflows/{id}'
}); };

export const ciWorkflowsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<CiWorkflowsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<CiWorkflowsUpdateInstanceResponse, CiWorkflowsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/ciWorkflows/{id}'
}); };

export const ciWorkflowsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<CiWorkflowsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<CiWorkflowsDeleteInstanceResponse, CiWorkflowsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/ciWorkflows/{id}'
}); };

export const ciXcodeVersionsGetCollection = <ThrowOnError extends boolean = false>(options?: Options<CiXcodeVersionsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<CiXcodeVersionsGetCollectionResponse, CiXcodeVersionsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/ciXcodeVersions'
}); };

export const ciXcodeVersionsGetInstance = <ThrowOnError extends boolean = false>(options: Options<CiXcodeVersionsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<CiXcodeVersionsGetInstanceResponse, CiXcodeVersionsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/ciXcodeVersions/{id}'
}); };

export const customerReviewResponsesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<CustomerReviewResponsesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<CustomerReviewResponsesCreateInstanceResponse, CustomerReviewResponsesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/customerReviewResponses'
}); };

export const customerReviewResponsesGetInstance = <ThrowOnError extends boolean = false>(options: Options<CustomerReviewResponsesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<CustomerReviewResponsesGetInstanceResponse, CustomerReviewResponsesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/customerReviewResponses/{id}'
}); };

export const customerReviewResponsesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<CustomerReviewResponsesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<CustomerReviewResponsesDeleteInstanceResponse, CustomerReviewResponsesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/customerReviewResponses/{id}'
}); };

export const customerReviewsGetInstance = <ThrowOnError extends boolean = false>(options: Options<CustomerReviewsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<CustomerReviewsGetInstanceResponse, CustomerReviewsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/customerReviews/{id}'
}); };

export const devicesGetCollection = <ThrowOnError extends boolean = false>(options?: Options<DevicesGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<DevicesGetCollectionResponse, DevicesGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/devices'
}); };

export const devicesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<DevicesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<DevicesCreateInstanceResponse, DevicesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/devices'
}); };

export const devicesGetInstance = <ThrowOnError extends boolean = false>(options: Options<DevicesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<DevicesGetInstanceResponse, DevicesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/devices/{id}'
}); };

export const devicesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<DevicesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<DevicesUpdateInstanceResponse, DevicesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/devices/{id}'
}); };

export const endAppAvailabilityPreOrdersCreateInstance = <ThrowOnError extends boolean = false>(options: Options<EndAppAvailabilityPreOrdersCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<EndAppAvailabilityPreOrdersCreateInstanceResponse, EndAppAvailabilityPreOrdersCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/endAppAvailabilityPreOrders'
}); };

export const endUserLicenseAgreementsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<EndUserLicenseAgreementsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<EndUserLicenseAgreementsCreateInstanceResponse, EndUserLicenseAgreementsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/endUserLicenseAgreements'
}); };

export const endUserLicenseAgreementsGetInstance = <ThrowOnError extends boolean = false>(options: Options<EndUserLicenseAgreementsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<EndUserLicenseAgreementsGetInstanceResponse, EndUserLicenseAgreementsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/endUserLicenseAgreements/{id}'
}); };

export const endUserLicenseAgreementsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<EndUserLicenseAgreementsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<EndUserLicenseAgreementsUpdateInstanceResponse, EndUserLicenseAgreementsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/endUserLicenseAgreements/{id}'
}); };

export const endUserLicenseAgreementsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<EndUserLicenseAgreementsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<EndUserLicenseAgreementsDeleteInstanceResponse, EndUserLicenseAgreementsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/endUserLicenseAgreements/{id}'
}); };

export const financeReportsGetCollection = <ThrowOnError extends boolean = false>(options: Options<FinanceReportsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<FinanceReportsGetCollectionResponse, FinanceReportsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/financeReports'
}); };

export const gameCenterAchievementImagesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementImagesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterAchievementImagesCreateInstanceResponse, GameCenterAchievementImagesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievementImages'
}); };

export const gameCenterAchievementImagesGetInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementImagesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterAchievementImagesGetInstanceResponse, GameCenterAchievementImagesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievementImages/{id}'
}); };

export const gameCenterAchievementImagesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementImagesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterAchievementImagesUpdateInstanceResponse, GameCenterAchievementImagesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievementImages/{id}'
}); };

export const gameCenterAchievementImagesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementImagesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<GameCenterAchievementImagesDeleteInstanceResponse, GameCenterAchievementImagesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievementImages/{id}'
}); };

export const gameCenterAchievementLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementLocalizationsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterAchievementLocalizationsCreateInstanceResponse, GameCenterAchievementLocalizationsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievementLocalizations'
}); };

export const gameCenterAchievementLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementLocalizationsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterAchievementLocalizationsGetInstanceResponse, GameCenterAchievementLocalizationsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievementLocalizations/{id}'
}); };

export const gameCenterAchievementLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementLocalizationsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterAchievementLocalizationsUpdateInstanceResponse, GameCenterAchievementLocalizationsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievementLocalizations/{id}'
}); };

export const gameCenterAchievementLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementLocalizationsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<GameCenterAchievementLocalizationsDeleteInstanceResponse, GameCenterAchievementLocalizationsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievementLocalizations/{id}'
}); };

export const gameCenterAchievementReleasesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementReleasesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterAchievementReleasesCreateInstanceResponse, GameCenterAchievementReleasesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievementReleases'
}); };

export const gameCenterAchievementReleasesGetInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementReleasesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterAchievementReleasesGetInstanceResponse, GameCenterAchievementReleasesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievementReleases/{id}'
}); };

export const gameCenterAchievementReleasesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementReleasesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<GameCenterAchievementReleasesDeleteInstanceResponse, GameCenterAchievementReleasesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievementReleases/{id}'
}); };

export const gameCenterAchievementsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterAchievementsCreateInstanceResponse, GameCenterAchievementsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievements'
}); };

export const gameCenterAchievementsGetInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterAchievementsGetInstanceResponse, GameCenterAchievementsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievements/{id}'
}); };

export const gameCenterAchievementsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterAchievementsUpdateInstanceResponse, GameCenterAchievementsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievements/{id}'
}); };

export const gameCenterAchievementsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<GameCenterAchievementsDeleteInstanceResponse, GameCenterAchievementsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievements/{id}'
}); };

export const gameCenterAppVersionsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterAppVersionsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterAppVersionsCreateInstanceResponse, GameCenterAppVersionsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAppVersions'
}); };

export const gameCenterAppVersionsGetInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterAppVersionsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterAppVersionsGetInstanceResponse, GameCenterAppVersionsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAppVersions/{id}'
}); };

export const gameCenterAppVersionsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterAppVersionsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterAppVersionsUpdateInstanceResponse, GameCenterAppVersionsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAppVersions/{id}'
}); };

export const gameCenterDetailsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterDetailsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterDetailsCreateInstanceResponse, GameCenterDetailsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterDetails'
}); };

export const gameCenterDetailsGetInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterDetailsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterDetailsGetInstanceResponse, GameCenterDetailsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterDetails/{id}'
}); };

export const gameCenterDetailsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterDetailsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterDetailsUpdateInstanceResponse, GameCenterDetailsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterDetails/{id}'
}); };

export const gameCenterGroupsGetCollection = <ThrowOnError extends boolean = false>(options?: Options<GameCenterGroupsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterGroupsGetCollectionResponse, GameCenterGroupsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterGroups'
}); };

export const gameCenterGroupsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterGroupsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterGroupsCreateInstanceResponse, GameCenterGroupsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterGroups'
}); };

export const gameCenterGroupsGetInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterGroupsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterGroupsGetInstanceResponse, GameCenterGroupsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterGroups/{id}'
}); };

export const gameCenterGroupsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterGroupsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterGroupsUpdateInstanceResponse, GameCenterGroupsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterGroups/{id}'
}); };

export const gameCenterGroupsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterGroupsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<GameCenterGroupsDeleteInstanceResponse, GameCenterGroupsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterGroups/{id}'
}); };

export const gameCenterLeaderboardEntrySubmissionsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardEntrySubmissionsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterLeaderboardEntrySubmissionsCreateInstanceResponse, GameCenterLeaderboardEntrySubmissionsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardEntrySubmissions'
}); };

export const gameCenterLeaderboardImagesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardImagesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterLeaderboardImagesCreateInstanceResponse, GameCenterLeaderboardImagesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardImages'
}); };

export const gameCenterLeaderboardImagesGetInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardImagesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardImagesGetInstanceResponse, GameCenterLeaderboardImagesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardImages/{id}'
}); };

export const gameCenterLeaderboardImagesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardImagesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterLeaderboardImagesUpdateInstanceResponse, GameCenterLeaderboardImagesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardImages/{id}'
}); };

export const gameCenterLeaderboardImagesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardImagesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<GameCenterLeaderboardImagesDeleteInstanceResponse, GameCenterLeaderboardImagesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardImages/{id}'
}); };

export const gameCenterLeaderboardLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardLocalizationsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterLeaderboardLocalizationsCreateInstanceResponse, GameCenterLeaderboardLocalizationsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardLocalizations'
}); };

export const gameCenterLeaderboardLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardLocalizationsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardLocalizationsGetInstanceResponse, GameCenterLeaderboardLocalizationsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardLocalizations/{id}'
}); };

export const gameCenterLeaderboardLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardLocalizationsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterLeaderboardLocalizationsUpdateInstanceResponse, GameCenterLeaderboardLocalizationsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardLocalizations/{id}'
}); };

export const gameCenterLeaderboardLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardLocalizationsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<GameCenterLeaderboardLocalizationsDeleteInstanceResponse, GameCenterLeaderboardLocalizationsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardLocalizations/{id}'
}); };

export const gameCenterLeaderboardReleasesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardReleasesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterLeaderboardReleasesCreateInstanceResponse, GameCenterLeaderboardReleasesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardReleases'
}); };

export const gameCenterLeaderboardReleasesGetInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardReleasesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardReleasesGetInstanceResponse, GameCenterLeaderboardReleasesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardReleases/{id}'
}); };

export const gameCenterLeaderboardReleasesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardReleasesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<GameCenterLeaderboardReleasesDeleteInstanceResponse, GameCenterLeaderboardReleasesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardReleases/{id}'
}); };

export const gameCenterLeaderboardSetImagesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetImagesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterLeaderboardSetImagesCreateInstanceResponse, GameCenterLeaderboardSetImagesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSetImages'
}); };

export const gameCenterLeaderboardSetImagesGetInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetImagesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardSetImagesGetInstanceResponse, GameCenterLeaderboardSetImagesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSetImages/{id}'
}); };

export const gameCenterLeaderboardSetImagesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetImagesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterLeaderboardSetImagesUpdateInstanceResponse, GameCenterLeaderboardSetImagesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSetImages/{id}'
}); };

export const gameCenterLeaderboardSetImagesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetImagesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<GameCenterLeaderboardSetImagesDeleteInstanceResponse, GameCenterLeaderboardSetImagesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSetImages/{id}'
}); };

export const gameCenterLeaderboardSetLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetLocalizationsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterLeaderboardSetLocalizationsCreateInstanceResponse, GameCenterLeaderboardSetLocalizationsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSetLocalizations'
}); };

export const gameCenterLeaderboardSetLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetLocalizationsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardSetLocalizationsGetInstanceResponse, GameCenterLeaderboardSetLocalizationsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSetLocalizations/{id}'
}); };

export const gameCenterLeaderboardSetLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetLocalizationsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterLeaderboardSetLocalizationsUpdateInstanceResponse, GameCenterLeaderboardSetLocalizationsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSetLocalizations/{id}'
}); };

export const gameCenterLeaderboardSetLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetLocalizationsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<GameCenterLeaderboardSetLocalizationsDeleteInstanceResponse, GameCenterLeaderboardSetLocalizationsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSetLocalizations/{id}'
}); };

export const gameCenterLeaderboardSetMemberLocalizationsGetCollection = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetMemberLocalizationsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardSetMemberLocalizationsGetCollectionResponse, GameCenterLeaderboardSetMemberLocalizationsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSetMemberLocalizations'
}); };

export const gameCenterLeaderboardSetMemberLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetMemberLocalizationsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterLeaderboardSetMemberLocalizationsCreateInstanceResponse, GameCenterLeaderboardSetMemberLocalizationsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSetMemberLocalizations'
}); };

export const gameCenterLeaderboardSetMemberLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetMemberLocalizationsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterLeaderboardSetMemberLocalizationsUpdateInstanceResponse, GameCenterLeaderboardSetMemberLocalizationsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSetMemberLocalizations/{id}'
}); };

export const gameCenterLeaderboardSetMemberLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetMemberLocalizationsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<GameCenterLeaderboardSetMemberLocalizationsDeleteInstanceResponse, GameCenterLeaderboardSetMemberLocalizationsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSetMemberLocalizations/{id}'
}); };

export const gameCenterLeaderboardSetReleasesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetReleasesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterLeaderboardSetReleasesCreateInstanceResponse, GameCenterLeaderboardSetReleasesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSetReleases'
}); };

export const gameCenterLeaderboardSetReleasesGetInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetReleasesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardSetReleasesGetInstanceResponse, GameCenterLeaderboardSetReleasesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSetReleases/{id}'
}); };

export const gameCenterLeaderboardSetReleasesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetReleasesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<GameCenterLeaderboardSetReleasesDeleteInstanceResponse, GameCenterLeaderboardSetReleasesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSetReleases/{id}'
}); };

export const gameCenterLeaderboardSetsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterLeaderboardSetsCreateInstanceResponse, GameCenterLeaderboardSetsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSets'
}); };

export const gameCenterLeaderboardSetsGetInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardSetsGetInstanceResponse, GameCenterLeaderboardSetsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSets/{id}'
}); };

export const gameCenterLeaderboardSetsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterLeaderboardSetsUpdateInstanceResponse, GameCenterLeaderboardSetsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSets/{id}'
}); };

export const gameCenterLeaderboardSetsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<GameCenterLeaderboardSetsDeleteInstanceResponse, GameCenterLeaderboardSetsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSets/{id}'
}); };

export const gameCenterLeaderboardsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterLeaderboardsCreateInstanceResponse, GameCenterLeaderboardsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboards'
}); };

export const gameCenterLeaderboardsGetInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardsGetInstanceResponse, GameCenterLeaderboardsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboards/{id}'
}); };

export const gameCenterLeaderboardsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterLeaderboardsUpdateInstanceResponse, GameCenterLeaderboardsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboards/{id}'
}); };

export const gameCenterLeaderboardsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<GameCenterLeaderboardsDeleteInstanceResponse, GameCenterLeaderboardsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboards/{id}'
}); };

export const gameCenterMatchmakingQueuesGetCollection = <ThrowOnError extends boolean = false>(options?: Options<GameCenterMatchmakingQueuesGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterMatchmakingQueuesGetCollectionResponse, GameCenterMatchmakingQueuesGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingQueues'
}); };

export const gameCenterMatchmakingQueuesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingQueuesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterMatchmakingQueuesCreateInstanceResponse, GameCenterMatchmakingQueuesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingQueues'
}); };

export const gameCenterMatchmakingQueuesGetInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingQueuesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterMatchmakingQueuesGetInstanceResponse, GameCenterMatchmakingQueuesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingQueues/{id}'
}); };

export const gameCenterMatchmakingQueuesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingQueuesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterMatchmakingQueuesUpdateInstanceResponse, GameCenterMatchmakingQueuesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingQueues/{id}'
}); };

export const gameCenterMatchmakingQueuesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingQueuesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<GameCenterMatchmakingQueuesDeleteInstanceResponse, GameCenterMatchmakingQueuesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingQueues/{id}'
}); };

export const gameCenterMatchmakingRuleSetTestsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingRuleSetTestsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterMatchmakingRuleSetTestsCreateInstanceResponse, GameCenterMatchmakingRuleSetTestsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingRuleSetTests'
}); };

export const gameCenterMatchmakingRuleSetsGetCollection = <ThrowOnError extends boolean = false>(options?: Options<GameCenterMatchmakingRuleSetsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterMatchmakingRuleSetsGetCollectionResponse, GameCenterMatchmakingRuleSetsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingRuleSets'
}); };

export const gameCenterMatchmakingRuleSetsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingRuleSetsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterMatchmakingRuleSetsCreateInstanceResponse, GameCenterMatchmakingRuleSetsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingRuleSets'
}); };

export const gameCenterMatchmakingRuleSetsGetInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingRuleSetsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterMatchmakingRuleSetsGetInstanceResponse, GameCenterMatchmakingRuleSetsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingRuleSets/{id}'
}); };

export const gameCenterMatchmakingRuleSetsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingRuleSetsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterMatchmakingRuleSetsUpdateInstanceResponse, GameCenterMatchmakingRuleSetsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingRuleSets/{id}'
}); };

export const gameCenterMatchmakingRuleSetsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingRuleSetsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<GameCenterMatchmakingRuleSetsDeleteInstanceResponse, GameCenterMatchmakingRuleSetsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingRuleSets/{id}'
}); };

export const gameCenterMatchmakingRulesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingRulesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterMatchmakingRulesCreateInstanceResponse, GameCenterMatchmakingRulesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingRules'
}); };

export const gameCenterMatchmakingRulesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingRulesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterMatchmakingRulesUpdateInstanceResponse, GameCenterMatchmakingRulesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingRules/{id}'
}); };

export const gameCenterMatchmakingRulesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingRulesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<GameCenterMatchmakingRulesDeleteInstanceResponse, GameCenterMatchmakingRulesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingRules/{id}'
}); };

export const gameCenterMatchmakingTeamsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingTeamsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterMatchmakingTeamsCreateInstanceResponse, GameCenterMatchmakingTeamsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingTeams'
}); };

export const gameCenterMatchmakingTeamsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingTeamsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterMatchmakingTeamsUpdateInstanceResponse, GameCenterMatchmakingTeamsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingTeams/{id}'
}); };

export const gameCenterMatchmakingTeamsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingTeamsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<GameCenterMatchmakingTeamsDeleteInstanceResponse, GameCenterMatchmakingTeamsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingTeams/{id}'
}); };

export const gameCenterPlayerAchievementSubmissionsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<GameCenterPlayerAchievementSubmissionsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterPlayerAchievementSubmissionsCreateInstanceResponse, GameCenterPlayerAchievementSubmissionsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterPlayerAchievementSubmissions'
}); };

export const inAppPurchaseAppStoreReviewScreenshotsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchaseAppStoreReviewScreenshotsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<InAppPurchaseAppStoreReviewScreenshotsCreateInstanceResponse, InAppPurchaseAppStoreReviewScreenshotsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchaseAppStoreReviewScreenshots'
}); };

export const inAppPurchaseAppStoreReviewScreenshotsGetInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchaseAppStoreReviewScreenshotsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<InAppPurchaseAppStoreReviewScreenshotsGetInstanceResponse, InAppPurchaseAppStoreReviewScreenshotsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchaseAppStoreReviewScreenshots/{id}'
}); };

export const inAppPurchaseAppStoreReviewScreenshotsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchaseAppStoreReviewScreenshotsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<InAppPurchaseAppStoreReviewScreenshotsUpdateInstanceResponse, InAppPurchaseAppStoreReviewScreenshotsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchaseAppStoreReviewScreenshots/{id}'
}); };

export const inAppPurchaseAppStoreReviewScreenshotsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchaseAppStoreReviewScreenshotsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<InAppPurchaseAppStoreReviewScreenshotsDeleteInstanceResponse, InAppPurchaseAppStoreReviewScreenshotsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchaseAppStoreReviewScreenshots/{id}'
}); };

export const inAppPurchaseAvailabilitiesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchaseAvailabilitiesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<InAppPurchaseAvailabilitiesCreateInstanceResponse, InAppPurchaseAvailabilitiesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchaseAvailabilities'
}); };

export const inAppPurchaseAvailabilitiesGetInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchaseAvailabilitiesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<InAppPurchaseAvailabilitiesGetInstanceResponse, InAppPurchaseAvailabilitiesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchaseAvailabilities/{id}'
}); };

export const inAppPurchaseContentsGetInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchaseContentsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<InAppPurchaseContentsGetInstanceResponse, InAppPurchaseContentsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchaseContents/{id}'
}); };

export const inAppPurchaseImagesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchaseImagesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<InAppPurchaseImagesCreateInstanceResponse, InAppPurchaseImagesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchaseImages'
}); };

export const inAppPurchaseImagesGetInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchaseImagesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<InAppPurchaseImagesGetInstanceResponse, InAppPurchaseImagesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchaseImages/{id}'
}); };

export const inAppPurchaseImagesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchaseImagesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<InAppPurchaseImagesUpdateInstanceResponse, InAppPurchaseImagesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchaseImages/{id}'
}); };

export const inAppPurchaseImagesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchaseImagesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<InAppPurchaseImagesDeleteInstanceResponse, InAppPurchaseImagesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchaseImages/{id}'
}); };

export const inAppPurchaseLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchaseLocalizationsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<InAppPurchaseLocalizationsCreateInstanceResponse, InAppPurchaseLocalizationsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchaseLocalizations'
}); };

export const inAppPurchaseLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchaseLocalizationsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<InAppPurchaseLocalizationsGetInstanceResponse, InAppPurchaseLocalizationsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchaseLocalizations/{id}'
}); };

export const inAppPurchaseLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchaseLocalizationsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<InAppPurchaseLocalizationsUpdateInstanceResponse, InAppPurchaseLocalizationsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchaseLocalizations/{id}'
}); };

export const inAppPurchaseLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchaseLocalizationsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<InAppPurchaseLocalizationsDeleteInstanceResponse, InAppPurchaseLocalizationsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchaseLocalizations/{id}'
}); };

export const inAppPurchasePriceSchedulesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchasePriceSchedulesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<InAppPurchasePriceSchedulesCreateInstanceResponse, InAppPurchasePriceSchedulesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchasePriceSchedules'
}); };

export const inAppPurchasePriceSchedulesGetInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchasePriceSchedulesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<InAppPurchasePriceSchedulesGetInstanceResponse, InAppPurchasePriceSchedulesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchasePriceSchedules/{id}'
}); };

export const inAppPurchaseSubmissionsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchaseSubmissionsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<InAppPurchaseSubmissionsCreateInstanceResponse, InAppPurchaseSubmissionsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchaseSubmissions'
}); };

/**
 * @deprecated
 */
export const inAppPurchasesGetInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchasesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<InAppPurchasesGetInstanceResponse, InAppPurchasesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchases/{id}'
}); };

export const inAppPurchasesV2CreateInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchasesV2CreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<InAppPurchasesV2CreateInstanceResponse, InAppPurchasesV2CreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v2/inAppPurchases'
}); };

export const inAppPurchasesV2GetInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchasesV2GetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<InAppPurchasesV2GetInstanceResponse, InAppPurchasesV2GetInstanceError, ThrowOnError>({
    ...options,
    url: '/v2/inAppPurchases/{id}'
}); };

export const inAppPurchasesV2UpdateInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchasesV2UpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<InAppPurchasesV2UpdateInstanceResponse, InAppPurchasesV2UpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v2/inAppPurchases/{id}'
}); };

export const inAppPurchasesV2DeleteInstance = <ThrowOnError extends boolean = false>(options: Options<InAppPurchasesV2DeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<InAppPurchasesV2DeleteInstanceResponse, InAppPurchasesV2DeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v2/inAppPurchases/{id}'
}); };

/**
 * @deprecated
 */
export const marketplaceDomainsGetCollection = <ThrowOnError extends boolean = false>(options?: Options<MarketplaceDomainsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<MarketplaceDomainsGetCollectionResponse, MarketplaceDomainsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/marketplaceDomains'
}); };

/**
 * @deprecated
 */
export const marketplaceDomainsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<MarketplaceDomainsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<MarketplaceDomainsCreateInstanceResponse, MarketplaceDomainsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/marketplaceDomains'
}); };

/**
 * @deprecated
 */
export const marketplaceDomainsGetInstance = <ThrowOnError extends boolean = false>(options: Options<MarketplaceDomainsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<MarketplaceDomainsGetInstanceResponse, MarketplaceDomainsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/marketplaceDomains/{id}'
}); };

/**
 * @deprecated
 */
export const marketplaceDomainsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<MarketplaceDomainsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<MarketplaceDomainsDeleteInstanceResponse, MarketplaceDomainsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/marketplaceDomains/{id}'
}); };

export const marketplaceSearchDetailsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<MarketplaceSearchDetailsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<MarketplaceSearchDetailsCreateInstanceResponse, MarketplaceSearchDetailsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/marketplaceSearchDetails'
}); };

export const marketplaceSearchDetailsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<MarketplaceSearchDetailsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<MarketplaceSearchDetailsUpdateInstanceResponse, MarketplaceSearchDetailsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/marketplaceSearchDetails/{id}'
}); };

export const marketplaceSearchDetailsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<MarketplaceSearchDetailsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<MarketplaceSearchDetailsDeleteInstanceResponse, MarketplaceSearchDetailsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/marketplaceSearchDetails/{id}'
}); };

export const marketplaceWebhooksGetCollection = <ThrowOnError extends boolean = false>(options?: Options<MarketplaceWebhooksGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<MarketplaceWebhooksGetCollectionResponse, MarketplaceWebhooksGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/marketplaceWebhooks'
}); };

export const marketplaceWebhooksCreateInstance = <ThrowOnError extends boolean = false>(options: Options<MarketplaceWebhooksCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<MarketplaceWebhooksCreateInstanceResponse, MarketplaceWebhooksCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/marketplaceWebhooks'
}); };

export const marketplaceWebhooksUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<MarketplaceWebhooksUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<MarketplaceWebhooksUpdateInstanceResponse, MarketplaceWebhooksUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/marketplaceWebhooks/{id}'
}); };

export const marketplaceWebhooksDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<MarketplaceWebhooksDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<MarketplaceWebhooksDeleteInstanceResponse, MarketplaceWebhooksDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/marketplaceWebhooks/{id}'
}); };

export const preReleaseVersionsGetCollection = <ThrowOnError extends boolean = false>(options?: Options<PreReleaseVersionsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<PreReleaseVersionsGetCollectionResponse, PreReleaseVersionsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/preReleaseVersions'
}); };

export const preReleaseVersionsGetInstance = <ThrowOnError extends boolean = false>(options: Options<PreReleaseVersionsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<PreReleaseVersionsGetInstanceResponse, PreReleaseVersionsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/preReleaseVersions/{id}'
}); };

export const profilesGetCollection = <ThrowOnError extends boolean = false>(options?: Options<ProfilesGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<ProfilesGetCollectionResponse, ProfilesGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/profiles'
}); };

export const profilesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<ProfilesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<ProfilesCreateInstanceResponse, ProfilesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/profiles'
}); };

export const profilesGetInstance = <ThrowOnError extends boolean = false>(options: Options<ProfilesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<ProfilesGetInstanceResponse, ProfilesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/profiles/{id}'
}); };

export const profilesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<ProfilesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<ProfilesDeleteInstanceResponse, ProfilesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/profiles/{id}'
}); };

/**
 * @deprecated
 */
export const promotedPurchaseImagesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<PromotedPurchaseImagesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<PromotedPurchaseImagesCreateInstanceResponse, PromotedPurchaseImagesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/promotedPurchaseImages'
}); };

/**
 * @deprecated
 */
export const promotedPurchaseImagesGetInstance = <ThrowOnError extends boolean = false>(options: Options<PromotedPurchaseImagesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<PromotedPurchaseImagesGetInstanceResponse, PromotedPurchaseImagesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/promotedPurchaseImages/{id}'
}); };

/**
 * @deprecated
 */
export const promotedPurchaseImagesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<PromotedPurchaseImagesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<PromotedPurchaseImagesUpdateInstanceResponse, PromotedPurchaseImagesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/promotedPurchaseImages/{id}'
}); };

/**
 * @deprecated
 */
export const promotedPurchaseImagesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<PromotedPurchaseImagesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<PromotedPurchaseImagesDeleteInstanceResponse, PromotedPurchaseImagesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/promotedPurchaseImages/{id}'
}); };

export const promotedPurchasesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<PromotedPurchasesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<PromotedPurchasesCreateInstanceResponse, PromotedPurchasesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/promotedPurchases'
}); };

export const promotedPurchasesGetInstance = <ThrowOnError extends boolean = false>(options: Options<PromotedPurchasesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<PromotedPurchasesGetInstanceResponse, PromotedPurchasesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/promotedPurchases/{id}'
}); };

export const promotedPurchasesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<PromotedPurchasesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<PromotedPurchasesUpdateInstanceResponse, PromotedPurchasesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/promotedPurchases/{id}'
}); };

export const promotedPurchasesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<PromotedPurchasesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<PromotedPurchasesDeleteInstanceResponse, PromotedPurchasesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/promotedPurchases/{id}'
}); };

export const reviewSubmissionItemsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<ReviewSubmissionItemsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<ReviewSubmissionItemsCreateInstanceResponse, ReviewSubmissionItemsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/reviewSubmissionItems'
}); };

export const reviewSubmissionItemsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<ReviewSubmissionItemsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<ReviewSubmissionItemsUpdateInstanceResponse, ReviewSubmissionItemsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/reviewSubmissionItems/{id}'
}); };

export const reviewSubmissionItemsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<ReviewSubmissionItemsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<ReviewSubmissionItemsDeleteInstanceResponse, ReviewSubmissionItemsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/reviewSubmissionItems/{id}'
}); };

export const reviewSubmissionsGetCollection = <ThrowOnError extends boolean = false>(options: Options<ReviewSubmissionsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<ReviewSubmissionsGetCollectionResponse, ReviewSubmissionsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/reviewSubmissions'
}); };

export const reviewSubmissionsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<ReviewSubmissionsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<ReviewSubmissionsCreateInstanceResponse, ReviewSubmissionsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/reviewSubmissions'
}); };

export const reviewSubmissionsGetInstance = <ThrowOnError extends boolean = false>(options: Options<ReviewSubmissionsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<ReviewSubmissionsGetInstanceResponse, ReviewSubmissionsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/reviewSubmissions/{id}'
}); };

export const reviewSubmissionsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<ReviewSubmissionsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<ReviewSubmissionsUpdateInstanceResponse, ReviewSubmissionsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/reviewSubmissions/{id}'
}); };

export const routingAppCoveragesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<RoutingAppCoveragesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<RoutingAppCoveragesCreateInstanceResponse, RoutingAppCoveragesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/routingAppCoverages'
}); };

export const routingAppCoveragesGetInstance = <ThrowOnError extends boolean = false>(options: Options<RoutingAppCoveragesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<RoutingAppCoveragesGetInstanceResponse, RoutingAppCoveragesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/routingAppCoverages/{id}'
}); };

export const routingAppCoveragesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<RoutingAppCoveragesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<RoutingAppCoveragesUpdateInstanceResponse, RoutingAppCoveragesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/routingAppCoverages/{id}'
}); };

export const routingAppCoveragesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<RoutingAppCoveragesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<RoutingAppCoveragesDeleteInstanceResponse, RoutingAppCoveragesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/routingAppCoverages/{id}'
}); };

export const salesReportsGetCollection = <ThrowOnError extends boolean = false>(options: Options<SalesReportsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<SalesReportsGetCollectionResponse, SalesReportsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/salesReports'
}); };

export const sandboxTestersV2GetCollection = <ThrowOnError extends boolean = false>(options?: Options<SandboxTestersV2GetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<SandboxTestersV2GetCollectionResponse, SandboxTestersV2GetCollectionError, ThrowOnError>({
    ...options,
    url: '/v2/sandboxTesters'
}); };

export const sandboxTestersV2UpdateInstance = <ThrowOnError extends boolean = false>(options: Options<SandboxTestersV2UpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<SandboxTestersV2UpdateInstanceResponse, SandboxTestersV2UpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v2/sandboxTesters/{id}'
}); };

export const sandboxTestersClearPurchaseHistoryRequestV2CreateInstance = <ThrowOnError extends boolean = false>(options: Options<SandboxTestersClearPurchaseHistoryRequestV2CreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<SandboxTestersClearPurchaseHistoryRequestV2CreateInstanceResponse, SandboxTestersClearPurchaseHistoryRequestV2CreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v2/sandboxTestersClearPurchaseHistoryRequest'
}); };

export const scmGitReferencesGetInstance = <ThrowOnError extends boolean = false>(options: Options<ScmGitReferencesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<ScmGitReferencesGetInstanceResponse, ScmGitReferencesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/scmGitReferences/{id}'
}); };

export const scmProvidersGetCollection = <ThrowOnError extends boolean = false>(options?: Options<ScmProvidersGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<ScmProvidersGetCollectionResponse, ScmProvidersGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/scmProviders'
}); };

export const scmProvidersGetInstance = <ThrowOnError extends boolean = false>(options: Options<ScmProvidersGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<ScmProvidersGetInstanceResponse, ScmProvidersGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/scmProviders/{id}'
}); };

export const scmPullRequestsGetInstance = <ThrowOnError extends boolean = false>(options: Options<ScmPullRequestsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<ScmPullRequestsGetInstanceResponse, ScmPullRequestsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/scmPullRequests/{id}'
}); };

export const scmRepositoriesGetCollection = <ThrowOnError extends boolean = false>(options?: Options<ScmRepositoriesGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<ScmRepositoriesGetCollectionResponse, ScmRepositoriesGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/scmRepositories'
}); };

export const scmRepositoriesGetInstance = <ThrowOnError extends boolean = false>(options: Options<ScmRepositoriesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<ScmRepositoriesGetInstanceResponse, ScmRepositoriesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/scmRepositories/{id}'
}); };

export const subscriptionAppStoreReviewScreenshotsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionAppStoreReviewScreenshotsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<SubscriptionAppStoreReviewScreenshotsCreateInstanceResponse, SubscriptionAppStoreReviewScreenshotsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionAppStoreReviewScreenshots'
}); };

export const subscriptionAppStoreReviewScreenshotsGetInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionAppStoreReviewScreenshotsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionAppStoreReviewScreenshotsGetInstanceResponse, SubscriptionAppStoreReviewScreenshotsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionAppStoreReviewScreenshots/{id}'
}); };

export const subscriptionAppStoreReviewScreenshotsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionAppStoreReviewScreenshotsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<SubscriptionAppStoreReviewScreenshotsUpdateInstanceResponse, SubscriptionAppStoreReviewScreenshotsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionAppStoreReviewScreenshots/{id}'
}); };

export const subscriptionAppStoreReviewScreenshotsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionAppStoreReviewScreenshotsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<SubscriptionAppStoreReviewScreenshotsDeleteInstanceResponse, SubscriptionAppStoreReviewScreenshotsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionAppStoreReviewScreenshots/{id}'
}); };

export const subscriptionAvailabilitiesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionAvailabilitiesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<SubscriptionAvailabilitiesCreateInstanceResponse, SubscriptionAvailabilitiesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionAvailabilities'
}); };

export const subscriptionAvailabilitiesGetInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionAvailabilitiesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionAvailabilitiesGetInstanceResponse, SubscriptionAvailabilitiesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionAvailabilities/{id}'
}); };

export const subscriptionGracePeriodsGetInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionGracePeriodsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionGracePeriodsGetInstanceResponse, SubscriptionGracePeriodsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionGracePeriods/{id}'
}); };

export const subscriptionGracePeriodsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionGracePeriodsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<SubscriptionGracePeriodsUpdateInstanceResponse, SubscriptionGracePeriodsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionGracePeriods/{id}'
}); };

export const subscriptionGroupLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionGroupLocalizationsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<SubscriptionGroupLocalizationsCreateInstanceResponse, SubscriptionGroupLocalizationsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionGroupLocalizations'
}); };

export const subscriptionGroupLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionGroupLocalizationsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionGroupLocalizationsGetInstanceResponse, SubscriptionGroupLocalizationsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionGroupLocalizations/{id}'
}); };

export const subscriptionGroupLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionGroupLocalizationsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<SubscriptionGroupLocalizationsUpdateInstanceResponse, SubscriptionGroupLocalizationsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionGroupLocalizations/{id}'
}); };

export const subscriptionGroupLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionGroupLocalizationsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<SubscriptionGroupLocalizationsDeleteInstanceResponse, SubscriptionGroupLocalizationsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionGroupLocalizations/{id}'
}); };

export const subscriptionGroupSubmissionsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionGroupSubmissionsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<SubscriptionGroupSubmissionsCreateInstanceResponse, SubscriptionGroupSubmissionsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionGroupSubmissions'
}); };

export const subscriptionGroupsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionGroupsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<SubscriptionGroupsCreateInstanceResponse, SubscriptionGroupsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionGroups'
}); };

export const subscriptionGroupsGetInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionGroupsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionGroupsGetInstanceResponse, SubscriptionGroupsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionGroups/{id}'
}); };

export const subscriptionGroupsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionGroupsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<SubscriptionGroupsUpdateInstanceResponse, SubscriptionGroupsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionGroups/{id}'
}); };

export const subscriptionGroupsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionGroupsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<SubscriptionGroupsDeleteInstanceResponse, SubscriptionGroupsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionGroups/{id}'
}); };

export const subscriptionImagesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionImagesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<SubscriptionImagesCreateInstanceResponse, SubscriptionImagesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionImages'
}); };

export const subscriptionImagesGetInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionImagesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionImagesGetInstanceResponse, SubscriptionImagesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionImages/{id}'
}); };

export const subscriptionImagesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionImagesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<SubscriptionImagesUpdateInstanceResponse, SubscriptionImagesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionImages/{id}'
}); };

export const subscriptionImagesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionImagesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<SubscriptionImagesDeleteInstanceResponse, SubscriptionImagesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionImages/{id}'
}); };

export const subscriptionIntroductoryOffersCreateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionIntroductoryOffersCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<SubscriptionIntroductoryOffersCreateInstanceResponse, SubscriptionIntroductoryOffersCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionIntroductoryOffers'
}); };

export const subscriptionIntroductoryOffersUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionIntroductoryOffersUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<SubscriptionIntroductoryOffersUpdateInstanceResponse, SubscriptionIntroductoryOffersUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionIntroductoryOffers/{id}'
}); };

export const subscriptionIntroductoryOffersDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionIntroductoryOffersDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<SubscriptionIntroductoryOffersDeleteInstanceResponse, SubscriptionIntroductoryOffersDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionIntroductoryOffers/{id}'
}); };

export const subscriptionLocalizationsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionLocalizationsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<SubscriptionLocalizationsCreateInstanceResponse, SubscriptionLocalizationsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionLocalizations'
}); };

export const subscriptionLocalizationsGetInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionLocalizationsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionLocalizationsGetInstanceResponse, SubscriptionLocalizationsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionLocalizations/{id}'
}); };

export const subscriptionLocalizationsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionLocalizationsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<SubscriptionLocalizationsUpdateInstanceResponse, SubscriptionLocalizationsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionLocalizations/{id}'
}); };

export const subscriptionLocalizationsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionLocalizationsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<SubscriptionLocalizationsDeleteInstanceResponse, SubscriptionLocalizationsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionLocalizations/{id}'
}); };

export const subscriptionOfferCodeCustomCodesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionOfferCodeCustomCodesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<SubscriptionOfferCodeCustomCodesCreateInstanceResponse, SubscriptionOfferCodeCustomCodesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionOfferCodeCustomCodes'
}); };

export const subscriptionOfferCodeCustomCodesGetInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionOfferCodeCustomCodesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionOfferCodeCustomCodesGetInstanceResponse, SubscriptionOfferCodeCustomCodesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionOfferCodeCustomCodes/{id}'
}); };

export const subscriptionOfferCodeCustomCodesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionOfferCodeCustomCodesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<SubscriptionOfferCodeCustomCodesUpdateInstanceResponse, SubscriptionOfferCodeCustomCodesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionOfferCodeCustomCodes/{id}'
}); };

export const subscriptionOfferCodeOneTimeUseCodesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionOfferCodeOneTimeUseCodesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<SubscriptionOfferCodeOneTimeUseCodesCreateInstanceResponse, SubscriptionOfferCodeOneTimeUseCodesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionOfferCodeOneTimeUseCodes'
}); };

export const subscriptionOfferCodeOneTimeUseCodesGetInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionOfferCodeOneTimeUseCodesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionOfferCodeOneTimeUseCodesGetInstanceResponse, SubscriptionOfferCodeOneTimeUseCodesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionOfferCodeOneTimeUseCodes/{id}'
}); };

export const subscriptionOfferCodeOneTimeUseCodesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionOfferCodeOneTimeUseCodesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<SubscriptionOfferCodeOneTimeUseCodesUpdateInstanceResponse, SubscriptionOfferCodeOneTimeUseCodesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionOfferCodeOneTimeUseCodes/{id}'
}); };

export const subscriptionOfferCodesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionOfferCodesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<SubscriptionOfferCodesCreateInstanceResponse, SubscriptionOfferCodesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionOfferCodes'
}); };

export const subscriptionOfferCodesGetInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionOfferCodesGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionOfferCodesGetInstanceResponse, SubscriptionOfferCodesGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionOfferCodes/{id}'
}); };

export const subscriptionOfferCodesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionOfferCodesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<SubscriptionOfferCodesUpdateInstanceResponse, SubscriptionOfferCodesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionOfferCodes/{id}'
}); };

export const subscriptionPricePointsGetInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionPricePointsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionPricePointsGetInstanceResponse, SubscriptionPricePointsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionPricePoints/{id}'
}); };

export const subscriptionPricesCreateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionPricesCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<SubscriptionPricesCreateInstanceResponse, SubscriptionPricesCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionPrices'
}); };

export const subscriptionPricesDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionPricesDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<SubscriptionPricesDeleteInstanceResponse, SubscriptionPricesDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionPrices/{id}'
}); };

export const subscriptionPromotionalOffersCreateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionPromotionalOffersCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<SubscriptionPromotionalOffersCreateInstanceResponse, SubscriptionPromotionalOffersCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionPromotionalOffers'
}); };

export const subscriptionPromotionalOffersGetInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionPromotionalOffersGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionPromotionalOffersGetInstanceResponse, SubscriptionPromotionalOffersGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionPromotionalOffers/{id}'
}); };

export const subscriptionPromotionalOffersUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionPromotionalOffersUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<SubscriptionPromotionalOffersUpdateInstanceResponse, SubscriptionPromotionalOffersUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionPromotionalOffers/{id}'
}); };

export const subscriptionPromotionalOffersDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionPromotionalOffersDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<SubscriptionPromotionalOffersDeleteInstanceResponse, SubscriptionPromotionalOffersDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionPromotionalOffers/{id}'
}); };

export const subscriptionSubmissionsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionSubmissionsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<SubscriptionSubmissionsCreateInstanceResponse, SubscriptionSubmissionsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionSubmissions'
}); };

export const subscriptionsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<SubscriptionsCreateInstanceResponse, SubscriptionsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptions'
}); };

export const subscriptionsGetInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionsGetInstanceResponse, SubscriptionsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptions/{id}'
}); };

export const subscriptionsUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionsUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<SubscriptionsUpdateInstanceResponse, SubscriptionsUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptions/{id}'
}); };

export const subscriptionsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<SubscriptionsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<SubscriptionsDeleteInstanceResponse, SubscriptionsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptions/{id}'
}); };

export const territoriesGetCollection = <ThrowOnError extends boolean = false>(options?: Options<TerritoriesGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<TerritoriesGetCollectionResponse, TerritoriesGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/territories'
}); };

export const territoryAvailabilitiesUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<TerritoryAvailabilitiesUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<TerritoryAvailabilitiesUpdateInstanceResponse, TerritoryAvailabilitiesUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/territoryAvailabilities/{id}'
}); };

export const userInvitationsGetCollection = <ThrowOnError extends boolean = false>(options?: Options<UserInvitationsGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<UserInvitationsGetCollectionResponse, UserInvitationsGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/userInvitations'
}); };

export const userInvitationsCreateInstance = <ThrowOnError extends boolean = false>(options: Options<UserInvitationsCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<UserInvitationsCreateInstanceResponse, UserInvitationsCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/userInvitations'
}); };

export const userInvitationsGetInstance = <ThrowOnError extends boolean = false>(options: Options<UserInvitationsGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<UserInvitationsGetInstanceResponse, UserInvitationsGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/userInvitations/{id}'
}); };

export const userInvitationsDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<UserInvitationsDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<UserInvitationsDeleteInstanceResponse, UserInvitationsDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/userInvitations/{id}'
}); };

export const usersGetCollection = <ThrowOnError extends boolean = false>(options?: Options<UsersGetCollectionData, ThrowOnError>) => { return (options?.client ?? client).get<UsersGetCollectionResponse, UsersGetCollectionError, ThrowOnError>({
    ...options,
    url: '/v1/users'
}); };

export const usersGetInstance = <ThrowOnError extends boolean = false>(options: Options<UsersGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<UsersGetInstanceResponse, UsersGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/users/{id}'
}); };

export const usersUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<UsersUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<UsersUpdateInstanceResponse, UsersUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/users/{id}'
}); };

export const usersDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<UsersDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<UsersDeleteInstanceResponse, UsersDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/users/{id}'
}); };

export const winBackOffersCreateInstance = <ThrowOnError extends boolean = false>(options: Options<WinBackOffersCreateInstanceData, ThrowOnError>) => { return (options?.client ?? client).post<WinBackOffersCreateInstanceResponse, WinBackOffersCreateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/winBackOffers'
}); };

export const winBackOffersGetInstance = <ThrowOnError extends boolean = false>(options: Options<WinBackOffersGetInstanceData, ThrowOnError>) => { return (options?.client ?? client).get<WinBackOffersGetInstanceResponse, WinBackOffersGetInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/winBackOffers/{id}'
}); };

export const winBackOffersUpdateInstance = <ThrowOnError extends boolean = false>(options: Options<WinBackOffersUpdateInstanceData, ThrowOnError>) => { return (options?.client ?? client).patch<WinBackOffersUpdateInstanceResponse, WinBackOffersUpdateInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/winBackOffers/{id}'
}); };

export const winBackOffersDeleteInstance = <ThrowOnError extends boolean = false>(options: Options<WinBackOffersDeleteInstanceData, ThrowOnError>) => { return (options?.client ?? client).delete<WinBackOffersDeleteInstanceResponse, WinBackOffersDeleteInstanceError, ThrowOnError>({
    ...options,
    url: '/v1/winBackOffers/{id}'
}); };

export const alternativeDistributionPackageVersionsDeltasGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AlternativeDistributionPackageVersionsDeltasGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AlternativeDistributionPackageVersionsDeltasGetToManyRelatedResponse, AlternativeDistributionPackageVersionsDeltasGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/alternativeDistributionPackageVersions/{id}/deltas'
}); };

export const alternativeDistributionPackageVersionsVariantsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AlternativeDistributionPackageVersionsVariantsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AlternativeDistributionPackageVersionsVariantsGetToManyRelatedResponse, AlternativeDistributionPackageVersionsVariantsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/alternativeDistributionPackageVersions/{id}/variants'
}); };

export const alternativeDistributionPackagesVersionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AlternativeDistributionPackagesVersionsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AlternativeDistributionPackagesVersionsGetToManyRelatedResponse, AlternativeDistributionPackagesVersionsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/alternativeDistributionPackages/{id}/versions'
}); };

export const analyticsReportInstancesSegmentsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AnalyticsReportInstancesSegmentsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AnalyticsReportInstancesSegmentsGetToManyRelatedResponse, AnalyticsReportInstancesSegmentsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/analyticsReportInstances/{id}/segments'
}); };

export const analyticsReportRequestsReportsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AnalyticsReportRequestsReportsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AnalyticsReportRequestsReportsGetToManyRelatedResponse, AnalyticsReportRequestsReportsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/analyticsReportRequests/{id}/reports'
}); };

export const analyticsReportsInstancesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AnalyticsReportsInstancesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AnalyticsReportsInstancesGetToManyRelatedResponse, AnalyticsReportsInstancesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/analyticsReports/{id}/instances'
}); };

export const appAvailabilitiesV2TerritoryAvailabilitiesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppAvailabilitiesV2TerritoryAvailabilitiesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppAvailabilitiesV2TerritoryAvailabilitiesGetToManyRelatedResponse, AppAvailabilitiesV2TerritoryAvailabilitiesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v2/appAvailabilities/{id}/territoryAvailabilities'
}); };

/**
 * @deprecated
 */
export const appAvailabilitiesAvailableTerritoriesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppAvailabilitiesAvailableTerritoriesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppAvailabilitiesAvailableTerritoriesGetToManyRelatedResponse, AppAvailabilitiesAvailableTerritoriesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appAvailabilities/{id}/availableTerritories'
}); };

export const appCategoriesParentGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppCategoriesParentGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppCategoriesParentGetToOneRelatedResponse, AppCategoriesParentGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appCategories/{id}/parent'
}); };

export const appCategoriesSubcategoriesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppCategoriesSubcategoriesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppCategoriesSubcategoriesGetToManyRelatedResponse, AppCategoriesSubcategoriesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appCategories/{id}/subcategories'
}); };

export const appClipDefaultExperienceLocalizationsAppClipHeaderImageGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppClipDefaultExperienceLocalizationsAppClipHeaderImageGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppClipDefaultExperienceLocalizationsAppClipHeaderImageGetToOneRelatedResponse, AppClipDefaultExperienceLocalizationsAppClipHeaderImageGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appClipDefaultExperienceLocalizations/{id}/appClipHeaderImage'
}); };

export const appClipDefaultExperiencesAppClipAppStoreReviewDetailGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppClipDefaultExperiencesAppClipAppStoreReviewDetailGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppClipDefaultExperiencesAppClipAppStoreReviewDetailGetToOneRelatedResponse, AppClipDefaultExperiencesAppClipAppStoreReviewDetailGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appClipDefaultExperiences/{id}/appClipAppStoreReviewDetail'
}); };

export const appClipDefaultExperiencesAppClipDefaultExperienceLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppClipDefaultExperiencesAppClipDefaultExperienceLocalizationsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppClipDefaultExperiencesAppClipDefaultExperienceLocalizationsGetToManyRelatedResponse, AppClipDefaultExperiencesAppClipDefaultExperienceLocalizationsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appClipDefaultExperiences/{id}/appClipDefaultExperienceLocalizations'
}); };

export const appClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelationship = <ThrowOnError extends boolean = false>(options: Options<AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelationshipResponse, AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/appClipDefaultExperiences/{id}/relationships/releaseWithAppStoreVersion'
}); };

export const appClipDefaultExperiencesReleaseWithAppStoreVersionUpdateToOneRelationship = <ThrowOnError extends boolean = false>(options: Options<AppClipDefaultExperiencesReleaseWithAppStoreVersionUpdateToOneRelationshipData, ThrowOnError>) => { return (options?.client ?? client).patch<AppClipDefaultExperiencesReleaseWithAppStoreVersionUpdateToOneRelationshipResponse, AppClipDefaultExperiencesReleaseWithAppStoreVersionUpdateToOneRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/appClipDefaultExperiences/{id}/relationships/releaseWithAppStoreVersion'
}); };

export const appClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelatedResponse, AppClipDefaultExperiencesReleaseWithAppStoreVersionGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appClipDefaultExperiences/{id}/releaseWithAppStoreVersion'
}); };

export const appClipsAppClipAdvancedExperiencesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppClipsAppClipAdvancedExperiencesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppClipsAppClipAdvancedExperiencesGetToManyRelatedResponse, AppClipsAppClipAdvancedExperiencesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appClips/{id}/appClipAdvancedExperiences'
}); };

export const appClipsAppClipDefaultExperiencesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppClipsAppClipDefaultExperiencesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppClipsAppClipDefaultExperiencesGetToManyRelatedResponse, AppClipsAppClipDefaultExperiencesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appClips/{id}/appClipDefaultExperiences'
}); };

export const appCustomProductPageLocalizationsAppPreviewSetsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedResponse, AppCustomProductPageLocalizationsAppPreviewSetsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appCustomProductPageLocalizations/{id}/appPreviewSets'
}); };

export const appCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedResponse, AppCustomProductPageLocalizationsAppScreenshotSetsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appCustomProductPageLocalizations/{id}/appScreenshotSets'
}); };

export const appCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedResponse, AppCustomProductPageVersionsAppCustomProductPageLocalizationsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appCustomProductPageVersions/{id}/appCustomProductPageLocalizations'
}); };

export const appCustomProductPagesAppCustomProductPageVersionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppCustomProductPagesAppCustomProductPageVersionsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppCustomProductPagesAppCustomProductPageVersionsGetToManyRelatedResponse, AppCustomProductPagesAppCustomProductPageVersionsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appCustomProductPages/{id}/appCustomProductPageVersions'
}); };

/**
 * @deprecated
 */
export const appEncryptionDeclarationsAppGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppEncryptionDeclarationsAppGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppEncryptionDeclarationsAppGetToOneRelatedResponse, AppEncryptionDeclarationsAppGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appEncryptionDeclarations/{id}/app'
}); };

export const appEncryptionDeclarationsAppEncryptionDeclarationDocumentGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppEncryptionDeclarationsAppEncryptionDeclarationDocumentGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppEncryptionDeclarationsAppEncryptionDeclarationDocumentGetToOneRelatedResponse, AppEncryptionDeclarationsAppEncryptionDeclarationDocumentGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appEncryptionDeclarations/{id}/appEncryptionDeclarationDocument'
}); };

/**
 * @deprecated
 */
export const appEncryptionDeclarationsBuildsCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<AppEncryptionDeclarationsBuildsCreateToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).post<AppEncryptionDeclarationsBuildsCreateToManyRelationshipResponse, AppEncryptionDeclarationsBuildsCreateToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/appEncryptionDeclarations/{id}/relationships/builds'
}); };

export const appEventLocalizationsAppEventScreenshotsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppEventLocalizationsAppEventScreenshotsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppEventLocalizationsAppEventScreenshotsGetToManyRelatedResponse, AppEventLocalizationsAppEventScreenshotsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appEventLocalizations/{id}/appEventScreenshots'
}); };

export const appEventLocalizationsAppEventVideoClipsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppEventLocalizationsAppEventVideoClipsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppEventLocalizationsAppEventVideoClipsGetToManyRelatedResponse, AppEventLocalizationsAppEventVideoClipsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appEventLocalizations/{id}/appEventVideoClips'
}); };

export const appEventsLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppEventsLocalizationsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppEventsLocalizationsGetToManyRelatedResponse, AppEventsLocalizationsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appEvents/{id}/localizations'
}); };

export const appInfosAgeRatingDeclarationGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppInfosAgeRatingDeclarationGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppInfosAgeRatingDeclarationGetToOneRelatedResponse, AppInfosAgeRatingDeclarationGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appInfos/{id}/ageRatingDeclaration'
}); };

export const appInfosAppInfoLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppInfosAppInfoLocalizationsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppInfosAppInfoLocalizationsGetToManyRelatedResponse, AppInfosAppInfoLocalizationsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appInfos/{id}/appInfoLocalizations'
}); };

export const appInfosPrimaryCategoryGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppInfosPrimaryCategoryGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppInfosPrimaryCategoryGetToOneRelatedResponse, AppInfosPrimaryCategoryGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appInfos/{id}/primaryCategory'
}); };

export const appInfosPrimarySubcategoryOneGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppInfosPrimarySubcategoryOneGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppInfosPrimarySubcategoryOneGetToOneRelatedResponse, AppInfosPrimarySubcategoryOneGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appInfos/{id}/primarySubcategoryOne'
}); };

export const appInfosPrimarySubcategoryTwoGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppInfosPrimarySubcategoryTwoGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppInfosPrimarySubcategoryTwoGetToOneRelatedResponse, AppInfosPrimarySubcategoryTwoGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appInfos/{id}/primarySubcategoryTwo'
}); };

export const appInfosSecondaryCategoryGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppInfosSecondaryCategoryGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppInfosSecondaryCategoryGetToOneRelatedResponse, AppInfosSecondaryCategoryGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appInfos/{id}/secondaryCategory'
}); };

export const appInfosSecondarySubcategoryOneGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppInfosSecondarySubcategoryOneGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppInfosSecondarySubcategoryOneGetToOneRelatedResponse, AppInfosSecondarySubcategoryOneGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appInfos/{id}/secondarySubcategoryOne'
}); };

export const appInfosSecondarySubcategoryTwoGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppInfosSecondarySubcategoryTwoGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppInfosSecondarySubcategoryTwoGetToOneRelatedResponse, AppInfosSecondarySubcategoryTwoGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appInfos/{id}/secondarySubcategoryTwo'
}); };

export const appPreviewSetsAppPreviewsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<AppPreviewSetsAppPreviewsGetToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<AppPreviewSetsAppPreviewsGetToManyRelationshipResponse, AppPreviewSetsAppPreviewsGetToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/appPreviewSets/{id}/relationships/appPreviews'
}); };

export const appPreviewSetsAppPreviewsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<AppPreviewSetsAppPreviewsReplaceToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).patch<AppPreviewSetsAppPreviewsReplaceToManyRelationshipResponse, AppPreviewSetsAppPreviewsReplaceToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/appPreviewSets/{id}/relationships/appPreviews'
}); };

export const appPreviewSetsAppPreviewsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppPreviewSetsAppPreviewsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppPreviewSetsAppPreviewsGetToManyRelatedResponse, AppPreviewSetsAppPreviewsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appPreviewSets/{id}/appPreviews'
}); };

export const appPricePointsV3EqualizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppPricePointsV3EqualizationsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppPricePointsV3EqualizationsGetToManyRelatedResponse, AppPricePointsV3EqualizationsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v3/appPricePoints/{id}/equalizations'
}); };

export const appPriceSchedulesAutomaticPricesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppPriceSchedulesAutomaticPricesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppPriceSchedulesAutomaticPricesGetToManyRelatedResponse, AppPriceSchedulesAutomaticPricesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appPriceSchedules/{id}/automaticPrices'
}); };

export const appPriceSchedulesBaseTerritoryGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppPriceSchedulesBaseTerritoryGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppPriceSchedulesBaseTerritoryGetToOneRelatedResponse, AppPriceSchedulesBaseTerritoryGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appPriceSchedules/{id}/baseTerritory'
}); };

export const appPriceSchedulesManualPricesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppPriceSchedulesManualPricesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppPriceSchedulesManualPricesGetToManyRelatedResponse, AppPriceSchedulesManualPricesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appPriceSchedules/{id}/manualPrices'
}); };

export const appScreenshotSetsAppScreenshotsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<AppScreenshotSetsAppScreenshotsGetToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<AppScreenshotSetsAppScreenshotsGetToManyRelationshipResponse, AppScreenshotSetsAppScreenshotsGetToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/appScreenshotSets/{id}/relationships/appScreenshots'
}); };

export const appScreenshotSetsAppScreenshotsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<AppScreenshotSetsAppScreenshotsReplaceToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).patch<AppScreenshotSetsAppScreenshotsReplaceToManyRelationshipResponse, AppScreenshotSetsAppScreenshotsReplaceToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/appScreenshotSets/{id}/relationships/appScreenshots'
}); };

export const appScreenshotSetsAppScreenshotsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppScreenshotSetsAppScreenshotsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppScreenshotSetsAppScreenshotsGetToManyRelatedResponse, AppScreenshotSetsAppScreenshotsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appScreenshotSets/{id}/appScreenshots'
}); };

export const appStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelatedResponse, AppStoreReviewDetailsAppStoreReviewAttachmentsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreReviewDetails/{id}/appStoreReviewAttachments'
}); };

export const appStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelatedResponse, AppStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionExperimentTreatmentLocalizations/{id}/appPreviewSets'
}); };

export const appStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelatedResponse, AppStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionExperimentTreatmentLocalizations/{id}/appScreenshotSets'
}); };

export const appStoreVersionExperimentTreatmentsAppStoreVersionExperimentTreatmentLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionExperimentTreatmentsAppStoreVersionExperimentTreatmentLocalizationsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionExperimentTreatmentsAppStoreVersionExperimentTreatmentLocalizationsGetToManyRelatedResponse, AppStoreVersionExperimentTreatmentsAppStoreVersionExperimentTreatmentLocalizationsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionExperimentTreatments/{id}/appStoreVersionExperimentTreatmentLocalizations'
}); };

export const appStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelatedResponse, AppStoreVersionExperimentsV2AppStoreVersionExperimentTreatmentsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v2/appStoreVersionExperiments/{id}/appStoreVersionExperimentTreatments'
}); };

/**
 * @deprecated
 */
export const appStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelatedResponse, AppStoreVersionExperimentsAppStoreVersionExperimentTreatmentsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionExperiments/{id}/appStoreVersionExperimentTreatments'
}); };

export const appStoreVersionLocalizationsAppPreviewSetsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionLocalizationsAppPreviewSetsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionLocalizationsAppPreviewSetsGetToManyRelatedResponse, AppStoreVersionLocalizationsAppPreviewSetsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionLocalizations/{id}/appPreviewSets'
}); };

export const appStoreVersionLocalizationsAppScreenshotSetsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionLocalizationsAppScreenshotSetsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionLocalizationsAppScreenshotSetsGetToManyRelatedResponse, AppStoreVersionLocalizationsAppScreenshotSetsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersionLocalizations/{id}/appScreenshotSets'
}); };

/**
 * @deprecated
 */
export const appStoreVersionsAgeRatingDeclarationGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionsAgeRatingDeclarationGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionsAgeRatingDeclarationGetToOneRelatedResponse, AppStoreVersionsAgeRatingDeclarationGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersions/{id}/ageRatingDeclaration'
}); };

export const appStoreVersionsAlternativeDistributionPackageGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionsAlternativeDistributionPackageGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionsAlternativeDistributionPackageGetToOneRelatedResponse, AppStoreVersionsAlternativeDistributionPackageGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersions/{id}/alternativeDistributionPackage'
}); };

export const appStoreVersionsAppClipDefaultExperienceGetToOneRelationship = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionsAppClipDefaultExperienceGetToOneRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionsAppClipDefaultExperienceGetToOneRelationshipResponse, AppStoreVersionsAppClipDefaultExperienceGetToOneRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersions/{id}/relationships/appClipDefaultExperience'
}); };

export const appStoreVersionsAppClipDefaultExperienceUpdateToOneRelationship = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionsAppClipDefaultExperienceUpdateToOneRelationshipData, ThrowOnError>) => { return (options?.client ?? client).patch<AppStoreVersionsAppClipDefaultExperienceUpdateToOneRelationshipResponse, AppStoreVersionsAppClipDefaultExperienceUpdateToOneRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersions/{id}/relationships/appClipDefaultExperience'
}); };

export const appStoreVersionsAppClipDefaultExperienceGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionsAppClipDefaultExperienceGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionsAppClipDefaultExperienceGetToOneRelatedResponse, AppStoreVersionsAppClipDefaultExperienceGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersions/{id}/appClipDefaultExperience'
}); };

export const appStoreVersionsAppStoreReviewDetailGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionsAppStoreReviewDetailGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionsAppStoreReviewDetailGetToOneRelatedResponse, AppStoreVersionsAppStoreReviewDetailGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersions/{id}/appStoreReviewDetail'
}); };

/**
 * @deprecated
 */
export const appStoreVersionsAppStoreVersionExperimentsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionsAppStoreVersionExperimentsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionsAppStoreVersionExperimentsGetToManyRelatedResponse, AppStoreVersionsAppStoreVersionExperimentsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersions/{id}/appStoreVersionExperiments'
}); };

export const appStoreVersionsAppStoreVersionExperimentsV2GetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionsAppStoreVersionExperimentsV2GetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionsAppStoreVersionExperimentsV2GetToManyRelatedResponse, AppStoreVersionsAppStoreVersionExperimentsV2GetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersions/{id}/appStoreVersionExperimentsV2'
}); };

export const appStoreVersionsAppStoreVersionLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionsAppStoreVersionLocalizationsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionsAppStoreVersionLocalizationsGetToManyRelatedResponse, AppStoreVersionsAppStoreVersionLocalizationsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersions/{id}/appStoreVersionLocalizations'
}); };

export const appStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelatedResponse, AppStoreVersionsAppStoreVersionPhasedReleaseGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersions/{id}/appStoreVersionPhasedRelease'
}); };

/**
 * @deprecated
 */
export const appStoreVersionsAppStoreVersionSubmissionGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionsAppStoreVersionSubmissionGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionsAppStoreVersionSubmissionGetToOneRelatedResponse, AppStoreVersionsAppStoreVersionSubmissionGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersions/{id}/appStoreVersionSubmission'
}); };

export const appStoreVersionsBuildGetToOneRelationship = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionsBuildGetToOneRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionsBuildGetToOneRelationshipResponse, AppStoreVersionsBuildGetToOneRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersions/{id}/relationships/build'
}); };

export const appStoreVersionsBuildUpdateToOneRelationship = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionsBuildUpdateToOneRelationshipData, ThrowOnError>) => { return (options?.client ?? client).patch<AppStoreVersionsBuildUpdateToOneRelationshipResponse, AppStoreVersionsBuildUpdateToOneRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersions/{id}/relationships/build'
}); };

export const appStoreVersionsBuildGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionsBuildGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionsBuildGetToOneRelatedResponse, AppStoreVersionsBuildGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersions/{id}/build'
}); };

export const appStoreVersionsCustomerReviewsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionsCustomerReviewsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionsCustomerReviewsGetToManyRelatedResponse, AppStoreVersionsCustomerReviewsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersions/{id}/customerReviews'
}); };

export const appStoreVersionsGameCenterAppVersionGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionsGameCenterAppVersionGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionsGameCenterAppVersionGetToOneRelatedResponse, AppStoreVersionsGameCenterAppVersionGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersions/{id}/gameCenterAppVersion'
}); };

export const appStoreVersionsRoutingAppCoverageGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppStoreVersionsRoutingAppCoverageGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppStoreVersionsRoutingAppCoverageGetToOneRelatedResponse, AppStoreVersionsRoutingAppCoverageGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/appStoreVersions/{id}/routingAppCoverage'
}); };

export const appsAlternativeDistributionKeyGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppsAlternativeDistributionKeyGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsAlternativeDistributionKeyGetToOneRelatedResponse, AppsAlternativeDistributionKeyGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/alternativeDistributionKey'
}); };

export const appsAnalyticsReportRequestsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppsAnalyticsReportRequestsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsAnalyticsReportRequestsGetToManyRelatedResponse, AppsAnalyticsReportRequestsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/analyticsReportRequests'
}); };

/**
 * @deprecated
 */
export const appsAppAvailabilityGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppsAppAvailabilityGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsAppAvailabilityGetToOneRelatedResponse, AppsAppAvailabilityGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/appAvailability'
}); };

export const appsAppAvailabilityV2GetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppsAppAvailabilityV2GetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsAppAvailabilityV2GetToOneRelatedResponse, AppsAppAvailabilityV2GetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/appAvailabilityV2'
}); };

export const appsAppClipsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppsAppClipsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsAppClipsGetToManyRelatedResponse, AppsAppClipsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/appClips'
}); };

export const appsAppCustomProductPagesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppsAppCustomProductPagesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsAppCustomProductPagesGetToManyRelatedResponse, AppsAppCustomProductPagesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/appCustomProductPages'
}); };

export const appsAppEncryptionDeclarationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppsAppEncryptionDeclarationsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsAppEncryptionDeclarationsGetToManyRelatedResponse, AppsAppEncryptionDeclarationsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/appEncryptionDeclarations'
}); };

export const appsAppEventsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppsAppEventsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsAppEventsGetToManyRelatedResponse, AppsAppEventsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/appEvents'
}); };

export const appsAppInfosGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppsAppInfosGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsAppInfosGetToManyRelatedResponse, AppsAppInfosGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/appInfos'
}); };

export const appsAppPricePointsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppsAppPricePointsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsAppPricePointsGetToManyRelatedResponse, AppsAppPricePointsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/appPricePoints'
}); };

export const appsAppPriceScheduleGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppsAppPriceScheduleGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsAppPriceScheduleGetToOneRelatedResponse, AppsAppPriceScheduleGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/appPriceSchedule'
}); };

export const appsAppStoreVersionExperimentsV2GetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppsAppStoreVersionExperimentsV2GetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsAppStoreVersionExperimentsV2GetToManyRelatedResponse, AppsAppStoreVersionExperimentsV2GetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/appStoreVersionExperimentsV2'
}); };

export const appsAppStoreVersionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppsAppStoreVersionsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsAppStoreVersionsGetToManyRelatedResponse, AppsAppStoreVersionsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/appStoreVersions'
}); };

export const appsBetaAppLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppsBetaAppLocalizationsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsBetaAppLocalizationsGetToManyRelatedResponse, AppsBetaAppLocalizationsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/betaAppLocalizations'
}); };

export const appsBetaAppReviewDetailGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppsBetaAppReviewDetailGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsBetaAppReviewDetailGetToOneRelatedResponse, AppsBetaAppReviewDetailGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/betaAppReviewDetail'
}); };

export const appsBetaGroupsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppsBetaGroupsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsBetaGroupsGetToManyRelatedResponse, AppsBetaGroupsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/betaGroups'
}); };

export const appsBetaLicenseAgreementGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppsBetaLicenseAgreementGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsBetaLicenseAgreementGetToOneRelatedResponse, AppsBetaLicenseAgreementGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/betaLicenseAgreement'
}); };

export const appsBetaTestersDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<AppsBetaTestersDeleteToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).delete<AppsBetaTestersDeleteToManyRelationshipResponse, AppsBetaTestersDeleteToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/relationships/betaTesters'
}); };

export const appsBuildsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppsBuildsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsBuildsGetToManyRelatedResponse, AppsBuildsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/builds'
}); };

export const appsCiProductGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppsCiProductGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsCiProductGetToOneRelatedResponse, AppsCiProductGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/ciProduct'
}); };

export const appsCustomerReviewsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppsCustomerReviewsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsCustomerReviewsGetToManyRelatedResponse, AppsCustomerReviewsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/customerReviews'
}); };

export const appsEndUserLicenseAgreementGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppsEndUserLicenseAgreementGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsEndUserLicenseAgreementGetToOneRelatedResponse, AppsEndUserLicenseAgreementGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/endUserLicenseAgreement'
}); };

export const appsGameCenterDetailGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppsGameCenterDetailGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsGameCenterDetailGetToOneRelatedResponse, AppsGameCenterDetailGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/gameCenterDetail'
}); };

/**
 * @deprecated
 */
export const appsGameCenterEnabledVersionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppsGameCenterEnabledVersionsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsGameCenterEnabledVersionsGetToManyRelatedResponse, AppsGameCenterEnabledVersionsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/gameCenterEnabledVersions'
}); };

/**
 * @deprecated
 */
export const appsInAppPurchasesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppsInAppPurchasesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsInAppPurchasesGetToManyRelatedResponse, AppsInAppPurchasesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/inAppPurchases'
}); };

export const appsInAppPurchasesV2GetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppsInAppPurchasesV2GetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsInAppPurchasesV2GetToManyRelatedResponse, AppsInAppPurchasesV2GetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/inAppPurchasesV2'
}); };

export const appsMarketplaceSearchDetailGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppsMarketplaceSearchDetailGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsMarketplaceSearchDetailGetToOneRelatedResponse, AppsMarketplaceSearchDetailGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/marketplaceSearchDetail'
}); };

export const appsPerfPowerMetricsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppsPerfPowerMetricsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsPerfPowerMetricsGetToManyRelatedResponse, AppsPerfPowerMetricsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/perfPowerMetrics'
}); };

/**
 * @deprecated
 */
export const appsPreOrderGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppsPreOrderGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsPreOrderGetToOneRelatedResponse, AppsPreOrderGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/preOrder'
}); };

export const appsPreReleaseVersionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppsPreReleaseVersionsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsPreReleaseVersionsGetToManyRelatedResponse, AppsPreReleaseVersionsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/preReleaseVersions'
}); };

export const appsPromotedPurchasesGetToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<AppsPromotedPurchasesGetToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<AppsPromotedPurchasesGetToManyRelationshipResponse, AppsPromotedPurchasesGetToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/relationships/promotedPurchases'
}); };

export const appsPromotedPurchasesReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<AppsPromotedPurchasesReplaceToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).patch<AppsPromotedPurchasesReplaceToManyRelationshipResponse, AppsPromotedPurchasesReplaceToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/relationships/promotedPurchases'
}); };

export const appsPromotedPurchasesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppsPromotedPurchasesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsPromotedPurchasesGetToManyRelatedResponse, AppsPromotedPurchasesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/promotedPurchases'
}); };

export const appsReviewSubmissionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppsReviewSubmissionsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsReviewSubmissionsGetToManyRelatedResponse, AppsReviewSubmissionsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/reviewSubmissions'
}); };

export const appsSubscriptionGracePeriodGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<AppsSubscriptionGracePeriodGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsSubscriptionGracePeriodGetToOneRelatedResponse, AppsSubscriptionGracePeriodGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/subscriptionGracePeriod'
}); };

export const appsSubscriptionGroupsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<AppsSubscriptionGroupsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<AppsSubscriptionGroupsGetToManyRelatedResponse, AppsSubscriptionGroupsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/subscriptionGroups'
}); };

export const betaAppLocalizationsAppGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<BetaAppLocalizationsAppGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BetaAppLocalizationsAppGetToOneRelatedResponse, BetaAppLocalizationsAppGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/betaAppLocalizations/{id}/app'
}); };

export const betaAppReviewDetailsAppGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<BetaAppReviewDetailsAppGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BetaAppReviewDetailsAppGetToOneRelatedResponse, BetaAppReviewDetailsAppGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/betaAppReviewDetails/{id}/app'
}); };

export const betaAppReviewSubmissionsBuildGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<BetaAppReviewSubmissionsBuildGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BetaAppReviewSubmissionsBuildGetToOneRelatedResponse, BetaAppReviewSubmissionsBuildGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/betaAppReviewSubmissions/{id}/build'
}); };

export const betaBuildLocalizationsBuildGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<BetaBuildLocalizationsBuildGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BetaBuildLocalizationsBuildGetToOneRelatedResponse, BetaBuildLocalizationsBuildGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/betaBuildLocalizations/{id}/build'
}); };

export const betaGroupsAppGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<BetaGroupsAppGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BetaGroupsAppGetToOneRelatedResponse, BetaGroupsAppGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/betaGroups/{id}/app'
}); };

export const betaGroupsBetaTestersGetToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<BetaGroupsBetaTestersGetToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<BetaGroupsBetaTestersGetToManyRelationshipResponse, BetaGroupsBetaTestersGetToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/betaGroups/{id}/relationships/betaTesters'
}); };

export const betaGroupsBetaTestersCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<BetaGroupsBetaTestersCreateToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).post<BetaGroupsBetaTestersCreateToManyRelationshipResponse, BetaGroupsBetaTestersCreateToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/betaGroups/{id}/relationships/betaTesters'
}); };

export const betaGroupsBetaTestersDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<BetaGroupsBetaTestersDeleteToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).delete<BetaGroupsBetaTestersDeleteToManyRelationshipResponse, BetaGroupsBetaTestersDeleteToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/betaGroups/{id}/relationships/betaTesters'
}); };

export const betaGroupsBetaTestersGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<BetaGroupsBetaTestersGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BetaGroupsBetaTestersGetToManyRelatedResponse, BetaGroupsBetaTestersGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/betaGroups/{id}/betaTesters'
}); };

export const betaGroupsBuildsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<BetaGroupsBuildsGetToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<BetaGroupsBuildsGetToManyRelationshipResponse, BetaGroupsBuildsGetToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/betaGroups/{id}/relationships/builds'
}); };

export const betaGroupsBuildsCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<BetaGroupsBuildsCreateToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).post<BetaGroupsBuildsCreateToManyRelationshipResponse, BetaGroupsBuildsCreateToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/betaGroups/{id}/relationships/builds'
}); };

export const betaGroupsBuildsDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<BetaGroupsBuildsDeleteToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).delete<BetaGroupsBuildsDeleteToManyRelationshipResponse, BetaGroupsBuildsDeleteToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/betaGroups/{id}/relationships/builds'
}); };

export const betaGroupsBuildsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<BetaGroupsBuildsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BetaGroupsBuildsGetToManyRelatedResponse, BetaGroupsBuildsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/betaGroups/{id}/builds'
}); };

export const betaLicenseAgreementsAppGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<BetaLicenseAgreementsAppGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BetaLicenseAgreementsAppGetToOneRelatedResponse, BetaLicenseAgreementsAppGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/betaLicenseAgreements/{id}/app'
}); };

export const betaTestersAppsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<BetaTestersAppsGetToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<BetaTestersAppsGetToManyRelationshipResponse, BetaTestersAppsGetToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/betaTesters/{id}/relationships/apps'
}); };

export const betaTestersAppsDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<BetaTestersAppsDeleteToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).delete<BetaTestersAppsDeleteToManyRelationshipResponse, BetaTestersAppsDeleteToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/betaTesters/{id}/relationships/apps'
}); };

export const betaTestersAppsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<BetaTestersAppsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BetaTestersAppsGetToManyRelatedResponse, BetaTestersAppsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/betaTesters/{id}/apps'
}); };

export const betaTestersBetaGroupsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<BetaTestersBetaGroupsGetToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<BetaTestersBetaGroupsGetToManyRelationshipResponse, BetaTestersBetaGroupsGetToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/betaTesters/{id}/relationships/betaGroups'
}); };

export const betaTestersBetaGroupsCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<BetaTestersBetaGroupsCreateToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).post<BetaTestersBetaGroupsCreateToManyRelationshipResponse, BetaTestersBetaGroupsCreateToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/betaTesters/{id}/relationships/betaGroups'
}); };

export const betaTestersBetaGroupsDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<BetaTestersBetaGroupsDeleteToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).delete<BetaTestersBetaGroupsDeleteToManyRelationshipResponse, BetaTestersBetaGroupsDeleteToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/betaTesters/{id}/relationships/betaGroups'
}); };

export const betaTestersBetaGroupsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<BetaTestersBetaGroupsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BetaTestersBetaGroupsGetToManyRelatedResponse, BetaTestersBetaGroupsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/betaTesters/{id}/betaGroups'
}); };

export const betaTestersBuildsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<BetaTestersBuildsGetToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<BetaTestersBuildsGetToManyRelationshipResponse, BetaTestersBuildsGetToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/betaTesters/{id}/relationships/builds'
}); };

export const betaTestersBuildsCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<BetaTestersBuildsCreateToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).post<BetaTestersBuildsCreateToManyRelationshipResponse, BetaTestersBuildsCreateToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/betaTesters/{id}/relationships/builds'
}); };

export const betaTestersBuildsDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<BetaTestersBuildsDeleteToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).delete<BetaTestersBuildsDeleteToManyRelationshipResponse, BetaTestersBuildsDeleteToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/betaTesters/{id}/relationships/builds'
}); };

export const betaTestersBuildsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<BetaTestersBuildsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BetaTestersBuildsGetToManyRelatedResponse, BetaTestersBuildsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/betaTesters/{id}/builds'
}); };

export const buildBetaDetailsBuildGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<BuildBetaDetailsBuildGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BuildBetaDetailsBuildGetToOneRelatedResponse, BuildBetaDetailsBuildGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/buildBetaDetails/{id}/build'
}); };

export const buildBundlesAppClipDomainCacheStatusGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<BuildBundlesAppClipDomainCacheStatusGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BuildBundlesAppClipDomainCacheStatusGetToOneRelatedResponse, BuildBundlesAppClipDomainCacheStatusGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/buildBundles/{id}/appClipDomainCacheStatus'
}); };

export const buildBundlesAppClipDomainDebugStatusGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<BuildBundlesAppClipDomainDebugStatusGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BuildBundlesAppClipDomainDebugStatusGetToOneRelatedResponse, BuildBundlesAppClipDomainDebugStatusGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/buildBundles/{id}/appClipDomainDebugStatus'
}); };

export const buildBundlesBetaAppClipInvocationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<BuildBundlesBetaAppClipInvocationsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BuildBundlesBetaAppClipInvocationsGetToManyRelatedResponse, BuildBundlesBetaAppClipInvocationsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/buildBundles/{id}/betaAppClipInvocations'
}); };

export const buildBundlesBuildBundleFileSizesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<BuildBundlesBuildBundleFileSizesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BuildBundlesBuildBundleFileSizesGetToManyRelatedResponse, BuildBundlesBuildBundleFileSizesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/buildBundles/{id}/buildBundleFileSizes'
}); };

export const buildsAppGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<BuildsAppGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BuildsAppGetToOneRelatedResponse, BuildsAppGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/builds/{id}/app'
}); };

export const buildsAppEncryptionDeclarationGetToOneRelationship = <ThrowOnError extends boolean = false>(options: Options<BuildsAppEncryptionDeclarationGetToOneRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<BuildsAppEncryptionDeclarationGetToOneRelationshipResponse, BuildsAppEncryptionDeclarationGetToOneRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/builds/{id}/relationships/appEncryptionDeclaration'
}); };

export const buildsAppEncryptionDeclarationUpdateToOneRelationship = <ThrowOnError extends boolean = false>(options: Options<BuildsAppEncryptionDeclarationUpdateToOneRelationshipData, ThrowOnError>) => { return (options?.client ?? client).patch<BuildsAppEncryptionDeclarationUpdateToOneRelationshipResponse, BuildsAppEncryptionDeclarationUpdateToOneRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/builds/{id}/relationships/appEncryptionDeclaration'
}); };

export const buildsAppEncryptionDeclarationGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<BuildsAppEncryptionDeclarationGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BuildsAppEncryptionDeclarationGetToOneRelatedResponse, BuildsAppEncryptionDeclarationGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/builds/{id}/appEncryptionDeclaration'
}); };

export const buildsAppStoreVersionGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<BuildsAppStoreVersionGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BuildsAppStoreVersionGetToOneRelatedResponse, BuildsAppStoreVersionGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/builds/{id}/appStoreVersion'
}); };

export const buildsBetaAppReviewSubmissionGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<BuildsBetaAppReviewSubmissionGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BuildsBetaAppReviewSubmissionGetToOneRelatedResponse, BuildsBetaAppReviewSubmissionGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/builds/{id}/betaAppReviewSubmission'
}); };

export const buildsBetaBuildLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<BuildsBetaBuildLocalizationsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BuildsBetaBuildLocalizationsGetToManyRelatedResponse, BuildsBetaBuildLocalizationsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/builds/{id}/betaBuildLocalizations'
}); };

export const buildsBetaGroupsCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<BuildsBetaGroupsCreateToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).post<BuildsBetaGroupsCreateToManyRelationshipResponse, BuildsBetaGroupsCreateToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/builds/{id}/relationships/betaGroups'
}); };

export const buildsBetaGroupsDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<BuildsBetaGroupsDeleteToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).delete<BuildsBetaGroupsDeleteToManyRelationshipResponse, BuildsBetaGroupsDeleteToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/builds/{id}/relationships/betaGroups'
}); };

export const buildsBuildBetaDetailGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<BuildsBuildBetaDetailGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BuildsBuildBetaDetailGetToOneRelatedResponse, BuildsBuildBetaDetailGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/builds/{id}/buildBetaDetail'
}); };

export const buildsDiagnosticSignaturesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<BuildsDiagnosticSignaturesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BuildsDiagnosticSignaturesGetToManyRelatedResponse, BuildsDiagnosticSignaturesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/builds/{id}/diagnosticSignatures'
}); };

export const buildsIconsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<BuildsIconsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BuildsIconsGetToManyRelatedResponse, BuildsIconsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/builds/{id}/icons'
}); };

export const buildsIndividualTestersGetToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<BuildsIndividualTestersGetToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<BuildsIndividualTestersGetToManyRelationshipResponse, BuildsIndividualTestersGetToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/builds/{id}/relationships/individualTesters'
}); };

export const buildsIndividualTestersCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<BuildsIndividualTestersCreateToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).post<BuildsIndividualTestersCreateToManyRelationshipResponse, BuildsIndividualTestersCreateToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/builds/{id}/relationships/individualTesters'
}); };

export const buildsIndividualTestersDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<BuildsIndividualTestersDeleteToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).delete<BuildsIndividualTestersDeleteToManyRelationshipResponse, BuildsIndividualTestersDeleteToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/builds/{id}/relationships/individualTesters'
}); };

export const buildsIndividualTestersGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<BuildsIndividualTestersGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BuildsIndividualTestersGetToManyRelatedResponse, BuildsIndividualTestersGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/builds/{id}/individualTesters'
}); };

export const buildsPerfPowerMetricsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<BuildsPerfPowerMetricsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BuildsPerfPowerMetricsGetToManyRelatedResponse, BuildsPerfPowerMetricsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/builds/{id}/perfPowerMetrics'
}); };

export const buildsPreReleaseVersionGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<BuildsPreReleaseVersionGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BuildsPreReleaseVersionGetToOneRelatedResponse, BuildsPreReleaseVersionGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/builds/{id}/preReleaseVersion'
}); };

export const bundleIdsAppGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<BundleIdsAppGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BundleIdsAppGetToOneRelatedResponse, BundleIdsAppGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/bundleIds/{id}/app'
}); };

export const bundleIdsBundleIdCapabilitiesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<BundleIdsBundleIdCapabilitiesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BundleIdsBundleIdCapabilitiesGetToManyRelatedResponse, BundleIdsBundleIdCapabilitiesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/bundleIds/{id}/bundleIdCapabilities'
}); };

export const bundleIdsProfilesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<BundleIdsProfilesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<BundleIdsProfilesGetToManyRelatedResponse, BundleIdsProfilesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/bundleIds/{id}/profiles'
}); };

export const ciBuildActionsArtifactsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<CiBuildActionsArtifactsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<CiBuildActionsArtifactsGetToManyRelatedResponse, CiBuildActionsArtifactsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/ciBuildActions/{id}/artifacts'
}); };

export const ciBuildActionsBuildRunGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<CiBuildActionsBuildRunGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<CiBuildActionsBuildRunGetToOneRelatedResponse, CiBuildActionsBuildRunGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/ciBuildActions/{id}/buildRun'
}); };

export const ciBuildActionsIssuesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<CiBuildActionsIssuesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<CiBuildActionsIssuesGetToManyRelatedResponse, CiBuildActionsIssuesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/ciBuildActions/{id}/issues'
}); };

export const ciBuildActionsTestResultsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<CiBuildActionsTestResultsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<CiBuildActionsTestResultsGetToManyRelatedResponse, CiBuildActionsTestResultsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/ciBuildActions/{id}/testResults'
}); };

export const ciBuildRunsActionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<CiBuildRunsActionsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<CiBuildRunsActionsGetToManyRelatedResponse, CiBuildRunsActionsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/ciBuildRuns/{id}/actions'
}); };

export const ciBuildRunsBuildsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<CiBuildRunsBuildsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<CiBuildRunsBuildsGetToManyRelatedResponse, CiBuildRunsBuildsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/ciBuildRuns/{id}/builds'
}); };

export const ciMacOsVersionsXcodeVersionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<CiMacOsVersionsXcodeVersionsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<CiMacOsVersionsXcodeVersionsGetToManyRelatedResponse, CiMacOsVersionsXcodeVersionsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/ciMacOsVersions/{id}/xcodeVersions'
}); };

export const ciProductsAdditionalRepositoriesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<CiProductsAdditionalRepositoriesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<CiProductsAdditionalRepositoriesGetToManyRelatedResponse, CiProductsAdditionalRepositoriesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/ciProducts/{id}/additionalRepositories'
}); };

export const ciProductsAppGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<CiProductsAppGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<CiProductsAppGetToOneRelatedResponse, CiProductsAppGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/ciProducts/{id}/app'
}); };

export const ciProductsBuildRunsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<CiProductsBuildRunsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<CiProductsBuildRunsGetToManyRelatedResponse, CiProductsBuildRunsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/ciProducts/{id}/buildRuns'
}); };

export const ciProductsPrimaryRepositoriesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<CiProductsPrimaryRepositoriesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<CiProductsPrimaryRepositoriesGetToManyRelatedResponse, CiProductsPrimaryRepositoriesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/ciProducts/{id}/primaryRepositories'
}); };

export const ciProductsWorkflowsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<CiProductsWorkflowsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<CiProductsWorkflowsGetToManyRelatedResponse, CiProductsWorkflowsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/ciProducts/{id}/workflows'
}); };

export const ciWorkflowsBuildRunsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<CiWorkflowsBuildRunsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<CiWorkflowsBuildRunsGetToManyRelatedResponse, CiWorkflowsBuildRunsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/ciWorkflows/{id}/buildRuns'
}); };

export const ciWorkflowsRepositoryGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<CiWorkflowsRepositoryGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<CiWorkflowsRepositoryGetToOneRelatedResponse, CiWorkflowsRepositoryGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/ciWorkflows/{id}/repository'
}); };

export const ciXcodeVersionsMacOsVersionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<CiXcodeVersionsMacOsVersionsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<CiXcodeVersionsMacOsVersionsGetToManyRelatedResponse, CiXcodeVersionsMacOsVersionsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/ciXcodeVersions/{id}/macOsVersions'
}); };

export const customerReviewsResponseGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<CustomerReviewsResponseGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<CustomerReviewsResponseGetToOneRelatedResponse, CustomerReviewsResponseGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/customerReviews/{id}/response'
}); };

export const diagnosticSignaturesLogsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<DiagnosticSignaturesLogsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<DiagnosticSignaturesLogsGetToManyRelatedResponse, DiagnosticSignaturesLogsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/diagnosticSignatures/{id}/logs'
}); };

export const endUserLicenseAgreementsTerritoriesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<EndUserLicenseAgreementsTerritoriesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<EndUserLicenseAgreementsTerritoriesGetToManyRelatedResponse, EndUserLicenseAgreementsTerritoriesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/endUserLicenseAgreements/{id}/territories'
}); };

export const gameCenterAchievementLocalizationsGameCenterAchievementGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementLocalizationsGameCenterAchievementGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterAchievementLocalizationsGameCenterAchievementGetToOneRelatedResponse, GameCenterAchievementLocalizationsGameCenterAchievementGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievementLocalizations/{id}/gameCenterAchievement'
}); };

export const gameCenterAchievementLocalizationsGameCenterAchievementImageGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementLocalizationsGameCenterAchievementImageGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterAchievementLocalizationsGameCenterAchievementImageGetToOneRelatedResponse, GameCenterAchievementLocalizationsGameCenterAchievementImageGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievementLocalizations/{id}/gameCenterAchievementImage'
}); };

export const gameCenterAchievementsGroupAchievementGetToOneRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementsGroupAchievementGetToOneRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterAchievementsGroupAchievementGetToOneRelationshipResponse, GameCenterAchievementsGroupAchievementGetToOneRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievements/{id}/relationships/groupAchievement'
}); };

export const gameCenterAchievementsGroupAchievementUpdateToOneRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementsGroupAchievementUpdateToOneRelationshipData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterAchievementsGroupAchievementUpdateToOneRelationshipResponse, GameCenterAchievementsGroupAchievementUpdateToOneRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievements/{id}/relationships/groupAchievement'
}); };

export const gameCenterAchievementsGroupAchievementGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementsGroupAchievementGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterAchievementsGroupAchievementGetToOneRelatedResponse, GameCenterAchievementsGroupAchievementGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievements/{id}/groupAchievement'
}); };

export const gameCenterAchievementsLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementsLocalizationsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterAchievementsLocalizationsGetToManyRelatedResponse, GameCenterAchievementsLocalizationsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievements/{id}/localizations'
}); };

export const gameCenterAchievementsReleasesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterAchievementsReleasesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterAchievementsReleasesGetToManyRelatedResponse, GameCenterAchievementsReleasesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAchievements/{id}/releases'
}); };

export const gameCenterAppVersionsAppStoreVersionGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterAppVersionsAppStoreVersionGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterAppVersionsAppStoreVersionGetToOneRelatedResponse, GameCenterAppVersionsAppStoreVersionGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAppVersions/{id}/appStoreVersion'
}); };

export const gameCenterAppVersionsCompatibilityVersionsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterAppVersionsCompatibilityVersionsGetToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterAppVersionsCompatibilityVersionsGetToManyRelationshipResponse, GameCenterAppVersionsCompatibilityVersionsGetToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAppVersions/{id}/relationships/compatibilityVersions'
}); };

export const gameCenterAppVersionsCompatibilityVersionsCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterAppVersionsCompatibilityVersionsCreateToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterAppVersionsCompatibilityVersionsCreateToManyRelationshipResponse, GameCenterAppVersionsCompatibilityVersionsCreateToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAppVersions/{id}/relationships/compatibilityVersions'
}); };

export const gameCenterAppVersionsCompatibilityVersionsDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterAppVersionsCompatibilityVersionsDeleteToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).delete<GameCenterAppVersionsCompatibilityVersionsDeleteToManyRelationshipResponse, GameCenterAppVersionsCompatibilityVersionsDeleteToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAppVersions/{id}/relationships/compatibilityVersions'
}); };

export const gameCenterAppVersionsCompatibilityVersionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterAppVersionsCompatibilityVersionsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterAppVersionsCompatibilityVersionsGetToManyRelatedResponse, GameCenterAppVersionsCompatibilityVersionsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterAppVersions/{id}/compatibilityVersions'
}); };

export const gameCenterDetailsAchievementReleasesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterDetailsAchievementReleasesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterDetailsAchievementReleasesGetToManyRelatedResponse, GameCenterDetailsAchievementReleasesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterDetails/{id}/achievementReleases'
}); };

export const gameCenterDetailsGameCenterAchievementsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterDetailsGameCenterAchievementsGetToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterDetailsGameCenterAchievementsGetToManyRelationshipResponse, GameCenterDetailsGameCenterAchievementsGetToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterDetails/{id}/relationships/gameCenterAchievements'
}); };

export const gameCenterDetailsGameCenterAchievementsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterDetailsGameCenterAchievementsReplaceToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterDetailsGameCenterAchievementsReplaceToManyRelationshipResponse, GameCenterDetailsGameCenterAchievementsReplaceToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterDetails/{id}/relationships/gameCenterAchievements'
}); };

export const gameCenterDetailsGameCenterAchievementsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterDetailsGameCenterAchievementsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterDetailsGameCenterAchievementsGetToManyRelatedResponse, GameCenterDetailsGameCenterAchievementsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterDetails/{id}/gameCenterAchievements'
}); };

export const gameCenterDetailsGameCenterAppVersionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterDetailsGameCenterAppVersionsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterDetailsGameCenterAppVersionsGetToManyRelatedResponse, GameCenterDetailsGameCenterAppVersionsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterDetails/{id}/gameCenterAppVersions'
}); };

export const gameCenterDetailsGameCenterGroupGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterDetailsGameCenterGroupGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterDetailsGameCenterGroupGetToOneRelatedResponse, GameCenterDetailsGameCenterGroupGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterDetails/{id}/gameCenterGroup'
}); };

export const gameCenterDetailsGameCenterLeaderboardSetsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelationshipResponse, GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterDetails/{id}/relationships/gameCenterLeaderboardSets'
}); };

export const gameCenterDetailsGameCenterLeaderboardSetsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterDetailsGameCenterLeaderboardSetsReplaceToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterDetailsGameCenterLeaderboardSetsReplaceToManyRelationshipResponse, GameCenterDetailsGameCenterLeaderboardSetsReplaceToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterDetails/{id}/relationships/gameCenterLeaderboardSets'
}); };

export const gameCenterDetailsGameCenterLeaderboardSetsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedResponse, GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterDetails/{id}/gameCenterLeaderboardSets'
}); };

export const gameCenterDetailsGameCenterLeaderboardsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterDetailsGameCenterLeaderboardsGetToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterDetailsGameCenterLeaderboardsGetToManyRelationshipResponse, GameCenterDetailsGameCenterLeaderboardsGetToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterDetails/{id}/relationships/gameCenterLeaderboards'
}); };

export const gameCenterDetailsGameCenterLeaderboardsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterDetailsGameCenterLeaderboardsReplaceToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterDetailsGameCenterLeaderboardsReplaceToManyRelationshipResponse, GameCenterDetailsGameCenterLeaderboardsReplaceToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterDetails/{id}/relationships/gameCenterLeaderboards'
}); };

export const gameCenterDetailsGameCenterLeaderboardsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedResponse, GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterDetails/{id}/gameCenterLeaderboards'
}); };

export const gameCenterDetailsLeaderboardReleasesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterDetailsLeaderboardReleasesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterDetailsLeaderboardReleasesGetToManyRelatedResponse, GameCenterDetailsLeaderboardReleasesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterDetails/{id}/leaderboardReleases'
}); };

export const gameCenterDetailsLeaderboardSetReleasesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedResponse, GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterDetails/{id}/leaderboardSetReleases'
}); };

/**
 * @deprecated
 */
export const gameCenterEnabledVersionsCompatibleVersionsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterEnabledVersionsCompatibleVersionsGetToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterEnabledVersionsCompatibleVersionsGetToManyRelationshipResponse, GameCenterEnabledVersionsCompatibleVersionsGetToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions'
}); };

/**
 * @deprecated
 */
export const gameCenterEnabledVersionsCompatibleVersionsCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterEnabledVersionsCompatibleVersionsCreateToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterEnabledVersionsCompatibleVersionsCreateToManyRelationshipResponse, GameCenterEnabledVersionsCompatibleVersionsCreateToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions'
}); };

/**
 * @deprecated
 */
export const gameCenterEnabledVersionsCompatibleVersionsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterEnabledVersionsCompatibleVersionsReplaceToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterEnabledVersionsCompatibleVersionsReplaceToManyRelationshipResponse, GameCenterEnabledVersionsCompatibleVersionsReplaceToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions'
}); };

/**
 * @deprecated
 */
export const gameCenterEnabledVersionsCompatibleVersionsDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterEnabledVersionsCompatibleVersionsDeleteToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).delete<GameCenterEnabledVersionsCompatibleVersionsDeleteToManyRelationshipResponse, GameCenterEnabledVersionsCompatibleVersionsDeleteToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions'
}); };

/**
 * @deprecated
 */
export const gameCenterEnabledVersionsCompatibleVersionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterEnabledVersionsCompatibleVersionsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterEnabledVersionsCompatibleVersionsGetToManyRelatedResponse, GameCenterEnabledVersionsCompatibleVersionsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterEnabledVersions/{id}/compatibleVersions'
}); };

export const gameCenterGroupsGameCenterAchievementsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterGroupsGameCenterAchievementsGetToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterGroupsGameCenterAchievementsGetToManyRelationshipResponse, GameCenterGroupsGameCenterAchievementsGetToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterGroups/{id}/relationships/gameCenterAchievements'
}); };

export const gameCenterGroupsGameCenterAchievementsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterGroupsGameCenterAchievementsReplaceToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterGroupsGameCenterAchievementsReplaceToManyRelationshipResponse, GameCenterGroupsGameCenterAchievementsReplaceToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterGroups/{id}/relationships/gameCenterAchievements'
}); };

export const gameCenterGroupsGameCenterAchievementsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterGroupsGameCenterAchievementsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterGroupsGameCenterAchievementsGetToManyRelatedResponse, GameCenterGroupsGameCenterAchievementsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterGroups/{id}/gameCenterAchievements'
}); };

export const gameCenterGroupsGameCenterDetailsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterGroupsGameCenterDetailsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterGroupsGameCenterDetailsGetToManyRelatedResponse, GameCenterGroupsGameCenterDetailsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterGroups/{id}/gameCenterDetails'
}); };

export const gameCenterGroupsGameCenterLeaderboardSetsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelationshipResponse, GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterGroups/{id}/relationships/gameCenterLeaderboardSets'
}); };

export const gameCenterGroupsGameCenterLeaderboardSetsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterGroupsGameCenterLeaderboardSetsReplaceToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterGroupsGameCenterLeaderboardSetsReplaceToManyRelationshipResponse, GameCenterGroupsGameCenterLeaderboardSetsReplaceToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterGroups/{id}/relationships/gameCenterLeaderboardSets'
}); };

export const gameCenterGroupsGameCenterLeaderboardSetsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelatedResponse, GameCenterGroupsGameCenterLeaderboardSetsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterGroups/{id}/gameCenterLeaderboardSets'
}); };

export const gameCenterGroupsGameCenterLeaderboardsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterGroupsGameCenterLeaderboardsGetToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterGroupsGameCenterLeaderboardsGetToManyRelationshipResponse, GameCenterGroupsGameCenterLeaderboardsGetToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterGroups/{id}/relationships/gameCenterLeaderboards'
}); };

export const gameCenterGroupsGameCenterLeaderboardsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterGroupsGameCenterLeaderboardsReplaceToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterGroupsGameCenterLeaderboardsReplaceToManyRelationshipResponse, GameCenterGroupsGameCenterLeaderboardsReplaceToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterGroups/{id}/relationships/gameCenterLeaderboards'
}); };

export const gameCenterGroupsGameCenterLeaderboardsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterGroupsGameCenterLeaderboardsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterGroupsGameCenterLeaderboardsGetToManyRelatedResponse, GameCenterGroupsGameCenterLeaderboardsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterGroups/{id}/gameCenterLeaderboards'
}); };

export const gameCenterLeaderboardLocalizationsGameCenterLeaderboardImageGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardLocalizationsGameCenterLeaderboardImageGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardLocalizationsGameCenterLeaderboardImageGetToOneRelatedResponse, GameCenterLeaderboardLocalizationsGameCenterLeaderboardImageGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardLocalizations/{id}/gameCenterLeaderboardImage'
}); };

export const gameCenterLeaderboardSetLocalizationsGameCenterLeaderboardSetImageGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetLocalizationsGameCenterLeaderboardSetImageGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardSetLocalizationsGameCenterLeaderboardSetImageGetToOneRelatedResponse, GameCenterLeaderboardSetLocalizationsGameCenterLeaderboardSetImageGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSetLocalizations/{id}/gameCenterLeaderboardSetImage'
}); };

export const gameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedResponse, GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSetMemberLocalizations/{id}/gameCenterLeaderboard'
}); };

export const gameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedResponse, GameCenterLeaderboardSetMemberLocalizationsGameCenterLeaderboardSetGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSetMemberLocalizations/{id}/gameCenterLeaderboardSet'
}); };

export const gameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelationshipResponse, GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSets/{id}/relationships/gameCenterLeaderboards'
}); };

export const gameCenterLeaderboardSetsGameCenterLeaderboardsCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetsGameCenterLeaderboardsCreateToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).post<GameCenterLeaderboardSetsGameCenterLeaderboardsCreateToManyRelationshipResponse, GameCenterLeaderboardSetsGameCenterLeaderboardsCreateToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSets/{id}/relationships/gameCenterLeaderboards'
}); };

export const gameCenterLeaderboardSetsGameCenterLeaderboardsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetsGameCenterLeaderboardsReplaceToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterLeaderboardSetsGameCenterLeaderboardsReplaceToManyRelationshipResponse, GameCenterLeaderboardSetsGameCenterLeaderboardsReplaceToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSets/{id}/relationships/gameCenterLeaderboards'
}); };

export const gameCenterLeaderboardSetsGameCenterLeaderboardsDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetsGameCenterLeaderboardsDeleteToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).delete<GameCenterLeaderboardSetsGameCenterLeaderboardsDeleteToManyRelationshipResponse, GameCenterLeaderboardSetsGameCenterLeaderboardsDeleteToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSets/{id}/relationships/gameCenterLeaderboards'
}); };

export const gameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelatedResponse, GameCenterLeaderboardSetsGameCenterLeaderboardsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSets/{id}/gameCenterLeaderboards'
}); };

export const gameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelationshipResponse, GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSets/{id}/relationships/groupLeaderboardSet'
}); };

export const gameCenterLeaderboardSetsGroupLeaderboardSetUpdateToOneRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetsGroupLeaderboardSetUpdateToOneRelationshipData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterLeaderboardSetsGroupLeaderboardSetUpdateToOneRelationshipResponse, GameCenterLeaderboardSetsGroupLeaderboardSetUpdateToOneRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSets/{id}/relationships/groupLeaderboardSet'
}); };

export const gameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelatedResponse, GameCenterLeaderboardSetsGroupLeaderboardSetGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSets/{id}/groupLeaderboardSet'
}); };

export const gameCenterLeaderboardSetsLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetsLocalizationsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardSetsLocalizationsGetToManyRelatedResponse, GameCenterLeaderboardSetsLocalizationsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSets/{id}/localizations'
}); };

export const gameCenterLeaderboardSetsReleasesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardSetsReleasesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardSetsReleasesGetToManyRelatedResponse, GameCenterLeaderboardSetsReleasesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboardSets/{id}/releases'
}); };

export const gameCenterLeaderboardsGroupLeaderboardGetToOneRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardsGroupLeaderboardGetToOneRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardsGroupLeaderboardGetToOneRelationshipResponse, GameCenterLeaderboardsGroupLeaderboardGetToOneRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboards/{id}/relationships/groupLeaderboard'
}); };

export const gameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationship = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationshipData, ThrowOnError>) => { return (options?.client ?? client).patch<GameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationshipResponse, GameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboards/{id}/relationships/groupLeaderboard'
}); };

export const gameCenterLeaderboardsGroupLeaderboardGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedResponse, GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboards/{id}/groupLeaderboard'
}); };

export const gameCenterLeaderboardsLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardsLocalizationsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardsLocalizationsGetToManyRelatedResponse, GameCenterLeaderboardsLocalizationsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboards/{id}/localizations'
}); };

export const gameCenterLeaderboardsReleasesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterLeaderboardsReleasesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterLeaderboardsReleasesGetToManyRelatedResponse, GameCenterLeaderboardsReleasesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterLeaderboards/{id}/releases'
}); };

export const gameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedResponse, GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingRuleSets/{id}/matchmakingQueues'
}); };

export const gameCenterMatchmakingRuleSetsRulesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingRuleSetsRulesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterMatchmakingRuleSetsRulesGetToManyRelatedResponse, GameCenterMatchmakingRuleSetsRulesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingRuleSets/{id}/rules'
}); };

export const gameCenterMatchmakingRuleSetsTeamsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingRuleSetsTeamsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterMatchmakingRuleSetsTeamsGetToManyRelatedResponse, GameCenterMatchmakingRuleSetsTeamsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingRuleSets/{id}/teams'
}); };

export const inAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<InAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<InAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelatedResponse, InAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchaseAvailabilities/{id}/availableTerritories'
}); };

export const inAppPurchasePriceSchedulesAutomaticPricesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<InAppPurchasePriceSchedulesAutomaticPricesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<InAppPurchasePriceSchedulesAutomaticPricesGetToManyRelatedResponse, InAppPurchasePriceSchedulesAutomaticPricesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchasePriceSchedules/{id}/automaticPrices'
}); };

export const inAppPurchasePriceSchedulesBaseTerritoryGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<InAppPurchasePriceSchedulesBaseTerritoryGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<InAppPurchasePriceSchedulesBaseTerritoryGetToOneRelatedResponse, InAppPurchasePriceSchedulesBaseTerritoryGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchasePriceSchedules/{id}/baseTerritory'
}); };

export const inAppPurchasePriceSchedulesManualPricesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<InAppPurchasePriceSchedulesManualPricesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<InAppPurchasePriceSchedulesManualPricesGetToManyRelatedResponse, InAppPurchasePriceSchedulesManualPricesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/inAppPurchasePriceSchedules/{id}/manualPrices'
}); };

export const inAppPurchasesV2AppStoreReviewScreenshotGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<InAppPurchasesV2AppStoreReviewScreenshotGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<InAppPurchasesV2AppStoreReviewScreenshotGetToOneRelatedResponse, InAppPurchasesV2AppStoreReviewScreenshotGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v2/inAppPurchases/{id}/appStoreReviewScreenshot'
}); };

export const inAppPurchasesV2ContentGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<InAppPurchasesV2ContentGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<InAppPurchasesV2ContentGetToOneRelatedResponse, InAppPurchasesV2ContentGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v2/inAppPurchases/{id}/content'
}); };

export const inAppPurchasesV2IapPriceScheduleGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<InAppPurchasesV2IapPriceScheduleGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<InAppPurchasesV2IapPriceScheduleGetToOneRelatedResponse, InAppPurchasesV2IapPriceScheduleGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v2/inAppPurchases/{id}/iapPriceSchedule'
}); };

export const inAppPurchasesV2ImagesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<InAppPurchasesV2ImagesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<InAppPurchasesV2ImagesGetToManyRelatedResponse, InAppPurchasesV2ImagesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v2/inAppPurchases/{id}/images'
}); };

export const inAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<InAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<InAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelatedResponse, InAppPurchasesV2InAppPurchaseAvailabilityGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v2/inAppPurchases/{id}/inAppPurchaseAvailability'
}); };

export const inAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<InAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<InAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelatedResponse, InAppPurchasesV2InAppPurchaseLocalizationsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v2/inAppPurchases/{id}/inAppPurchaseLocalizations'
}); };

export const inAppPurchasesV2PricePointsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<InAppPurchasesV2PricePointsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<InAppPurchasesV2PricePointsGetToManyRelatedResponse, InAppPurchasesV2PricePointsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v2/inAppPurchases/{id}/pricePoints'
}); };

export const inAppPurchasesV2PromotedPurchaseGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<InAppPurchasesV2PromotedPurchaseGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<InAppPurchasesV2PromotedPurchaseGetToOneRelatedResponse, InAppPurchasesV2PromotedPurchaseGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v2/inAppPurchases/{id}/promotedPurchase'
}); };

export const preReleaseVersionsAppGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<PreReleaseVersionsAppGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<PreReleaseVersionsAppGetToOneRelatedResponse, PreReleaseVersionsAppGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/preReleaseVersions/{id}/app'
}); };

export const preReleaseVersionsBuildsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<PreReleaseVersionsBuildsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<PreReleaseVersionsBuildsGetToManyRelatedResponse, PreReleaseVersionsBuildsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/preReleaseVersions/{id}/builds'
}); };

export const profilesBundleIdGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<ProfilesBundleIdGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<ProfilesBundleIdGetToOneRelatedResponse, ProfilesBundleIdGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/profiles/{id}/bundleId'
}); };

export const profilesCertificatesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<ProfilesCertificatesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<ProfilesCertificatesGetToManyRelatedResponse, ProfilesCertificatesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/profiles/{id}/certificates'
}); };

export const profilesDevicesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<ProfilesDevicesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<ProfilesDevicesGetToManyRelatedResponse, ProfilesDevicesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/profiles/{id}/devices'
}); };

/**
 * @deprecated
 */
export const promotedPurchasesPromotionImagesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<PromotedPurchasesPromotionImagesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<PromotedPurchasesPromotionImagesGetToManyRelatedResponse, PromotedPurchasesPromotionImagesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/promotedPurchases/{id}/promotionImages'
}); };

export const reviewSubmissionsItemsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<ReviewSubmissionsItemsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<ReviewSubmissionsItemsGetToManyRelatedResponse, ReviewSubmissionsItemsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/reviewSubmissions/{id}/items'
}); };

export const scmProvidersRepositoriesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<ScmProvidersRepositoriesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<ScmProvidersRepositoriesGetToManyRelatedResponse, ScmProvidersRepositoriesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/scmProviders/{id}/repositories'
}); };

export const scmRepositoriesGitReferencesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<ScmRepositoriesGitReferencesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<ScmRepositoriesGitReferencesGetToManyRelatedResponse, ScmRepositoriesGitReferencesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/scmRepositories/{id}/gitReferences'
}); };

export const scmRepositoriesPullRequestsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<ScmRepositoriesPullRequestsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<ScmRepositoriesPullRequestsGetToManyRelatedResponse, ScmRepositoriesPullRequestsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/scmRepositories/{id}/pullRequests'
}); };

export const subscriptionAvailabilitiesAvailableTerritoriesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<SubscriptionAvailabilitiesAvailableTerritoriesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionAvailabilitiesAvailableTerritoriesGetToManyRelatedResponse, SubscriptionAvailabilitiesAvailableTerritoriesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionAvailabilities/{id}/availableTerritories'
}); };

export const subscriptionGroupsSubscriptionGroupLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<SubscriptionGroupsSubscriptionGroupLocalizationsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionGroupsSubscriptionGroupLocalizationsGetToManyRelatedResponse, SubscriptionGroupsSubscriptionGroupLocalizationsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionGroups/{id}/subscriptionGroupLocalizations'
}); };

export const subscriptionGroupsSubscriptionsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<SubscriptionGroupsSubscriptionsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionGroupsSubscriptionsGetToManyRelatedResponse, SubscriptionGroupsSubscriptionsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionGroups/{id}/subscriptions'
}); };

export const subscriptionOfferCodeOneTimeUseCodesValuesGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<SubscriptionOfferCodeOneTimeUseCodesValuesGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionOfferCodeOneTimeUseCodesValuesGetToOneRelatedResponse, SubscriptionOfferCodeOneTimeUseCodesValuesGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionOfferCodeOneTimeUseCodes/{id}/values'
}); };

export const subscriptionOfferCodesCustomCodesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<SubscriptionOfferCodesCustomCodesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionOfferCodesCustomCodesGetToManyRelatedResponse, SubscriptionOfferCodesCustomCodesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionOfferCodes/{id}/customCodes'
}); };

export const subscriptionOfferCodesOneTimeUseCodesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<SubscriptionOfferCodesOneTimeUseCodesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionOfferCodesOneTimeUseCodesGetToManyRelatedResponse, SubscriptionOfferCodesOneTimeUseCodesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionOfferCodes/{id}/oneTimeUseCodes'
}); };

export const subscriptionOfferCodesPricesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<SubscriptionOfferCodesPricesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionOfferCodesPricesGetToManyRelatedResponse, SubscriptionOfferCodesPricesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionOfferCodes/{id}/prices'
}); };

export const subscriptionPricePointsEqualizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<SubscriptionPricePointsEqualizationsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionPricePointsEqualizationsGetToManyRelatedResponse, SubscriptionPricePointsEqualizationsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionPricePoints/{id}/equalizations'
}); };

export const subscriptionPromotionalOffersPricesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<SubscriptionPromotionalOffersPricesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionPromotionalOffersPricesGetToManyRelatedResponse, SubscriptionPromotionalOffersPricesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptionPromotionalOffers/{id}/prices'
}); };

export const subscriptionsAppStoreReviewScreenshotGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<SubscriptionsAppStoreReviewScreenshotGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionsAppStoreReviewScreenshotGetToOneRelatedResponse, SubscriptionsAppStoreReviewScreenshotGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptions/{id}/appStoreReviewScreenshot'
}); };

export const subscriptionsImagesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<SubscriptionsImagesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionsImagesGetToManyRelatedResponse, SubscriptionsImagesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptions/{id}/images'
}); };

export const subscriptionsIntroductoryOffersGetToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<SubscriptionsIntroductoryOffersGetToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionsIntroductoryOffersGetToManyRelationshipResponse, SubscriptionsIntroductoryOffersGetToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptions/{id}/relationships/introductoryOffers'
}); };

export const subscriptionsIntroductoryOffersDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<SubscriptionsIntroductoryOffersDeleteToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).delete<SubscriptionsIntroductoryOffersDeleteToManyRelationshipResponse, SubscriptionsIntroductoryOffersDeleteToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptions/{id}/relationships/introductoryOffers'
}); };

export const subscriptionsIntroductoryOffersGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<SubscriptionsIntroductoryOffersGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionsIntroductoryOffersGetToManyRelatedResponse, SubscriptionsIntroductoryOffersGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptions/{id}/introductoryOffers'
}); };

export const subscriptionsOfferCodesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<SubscriptionsOfferCodesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionsOfferCodesGetToManyRelatedResponse, SubscriptionsOfferCodesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptions/{id}/offerCodes'
}); };

export const subscriptionsPricePointsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<SubscriptionsPricePointsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionsPricePointsGetToManyRelatedResponse, SubscriptionsPricePointsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptions/{id}/pricePoints'
}); };

export const subscriptionsPricesGetToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<SubscriptionsPricesGetToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionsPricesGetToManyRelationshipResponse, SubscriptionsPricesGetToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptions/{id}/relationships/prices'
}); };

export const subscriptionsPricesDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<SubscriptionsPricesDeleteToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).delete<SubscriptionsPricesDeleteToManyRelationshipResponse, SubscriptionsPricesDeleteToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptions/{id}/relationships/prices'
}); };

export const subscriptionsPricesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<SubscriptionsPricesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionsPricesGetToManyRelatedResponse, SubscriptionsPricesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptions/{id}/prices'
}); };

export const subscriptionsPromotedPurchaseGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<SubscriptionsPromotedPurchaseGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionsPromotedPurchaseGetToOneRelatedResponse, SubscriptionsPromotedPurchaseGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptions/{id}/promotedPurchase'
}); };

export const subscriptionsPromotionalOffersGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<SubscriptionsPromotionalOffersGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionsPromotionalOffersGetToManyRelatedResponse, SubscriptionsPromotionalOffersGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptions/{id}/promotionalOffers'
}); };

export const subscriptionsSubscriptionAvailabilityGetToOneRelated = <ThrowOnError extends boolean = false>(options: Options<SubscriptionsSubscriptionAvailabilityGetToOneRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionsSubscriptionAvailabilityGetToOneRelatedResponse, SubscriptionsSubscriptionAvailabilityGetToOneRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptions/{id}/subscriptionAvailability'
}); };

export const subscriptionsSubscriptionLocalizationsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<SubscriptionsSubscriptionLocalizationsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionsSubscriptionLocalizationsGetToManyRelatedResponse, SubscriptionsSubscriptionLocalizationsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptions/{id}/subscriptionLocalizations'
}); };

export const subscriptionsWinBackOffersGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<SubscriptionsWinBackOffersGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<SubscriptionsWinBackOffersGetToManyRelatedResponse, SubscriptionsWinBackOffersGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/subscriptions/{id}/winBackOffers'
}); };

export const userInvitationsVisibleAppsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<UserInvitationsVisibleAppsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<UserInvitationsVisibleAppsGetToManyRelatedResponse, UserInvitationsVisibleAppsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/userInvitations/{id}/visibleApps'
}); };

export const usersVisibleAppsGetToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<UsersVisibleAppsGetToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).get<UsersVisibleAppsGetToManyRelationshipResponse, UsersVisibleAppsGetToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/users/{id}/relationships/visibleApps'
}); };

export const usersVisibleAppsCreateToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<UsersVisibleAppsCreateToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).post<UsersVisibleAppsCreateToManyRelationshipResponse, UsersVisibleAppsCreateToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/users/{id}/relationships/visibleApps'
}); };

export const usersVisibleAppsReplaceToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<UsersVisibleAppsReplaceToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).patch<UsersVisibleAppsReplaceToManyRelationshipResponse, UsersVisibleAppsReplaceToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/users/{id}/relationships/visibleApps'
}); };

export const usersVisibleAppsDeleteToManyRelationship = <ThrowOnError extends boolean = false>(options: Options<UsersVisibleAppsDeleteToManyRelationshipData, ThrowOnError>) => { return (options?.client ?? client).delete<UsersVisibleAppsDeleteToManyRelationshipResponse, UsersVisibleAppsDeleteToManyRelationshipError, ThrowOnError>({
    ...options,
    url: '/v1/users/{id}/relationships/visibleApps'
}); };

export const usersVisibleAppsGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<UsersVisibleAppsGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<UsersVisibleAppsGetToManyRelatedResponse, UsersVisibleAppsGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/users/{id}/visibleApps'
}); };

export const winBackOffersPricesGetToManyRelated = <ThrowOnError extends boolean = false>(options: Options<WinBackOffersPricesGetToManyRelatedData, ThrowOnError>) => { return (options?.client ?? client).get<WinBackOffersPricesGetToManyRelatedResponse, WinBackOffersPricesGetToManyRelatedError, ThrowOnError>({
    ...options,
    url: '/v1/winBackOffers/{id}/prices'
}); };

export const appsBetaTesterUsagesGetMetrics = <ThrowOnError extends boolean = false>(options: Options<AppsBetaTesterUsagesGetMetricsData, ThrowOnError>) => { return (options?.client ?? client).get<AppsBetaTesterUsagesGetMetricsResponse, AppsBetaTesterUsagesGetMetricsError, ThrowOnError>({
    ...options,
    url: '/v1/apps/{id}/metrics/betaTesterUsages'
}); };

export const betaGroupsBetaTesterUsagesGetMetrics = <ThrowOnError extends boolean = false>(options: Options<BetaGroupsBetaTesterUsagesGetMetricsData, ThrowOnError>) => { return (options?.client ?? client).get<BetaGroupsBetaTesterUsagesGetMetricsResponse, BetaGroupsBetaTesterUsagesGetMetricsError, ThrowOnError>({
    ...options,
    url: '/v1/betaGroups/{id}/metrics/betaTesterUsages'
}); };

export const betaTestersBetaTesterUsagesGetMetrics = <ThrowOnError extends boolean = false>(options: Options<BetaTestersBetaTesterUsagesGetMetricsData, ThrowOnError>) => { return (options?.client ?? client).get<BetaTestersBetaTesterUsagesGetMetricsResponse, BetaTestersBetaTesterUsagesGetMetricsError, ThrowOnError>({
    ...options,
    url: '/v1/betaTesters/{id}/metrics/betaTesterUsages'
}); };

export const buildsBetaBuildUsagesGetMetrics = <ThrowOnError extends boolean = false>(options: Options<BuildsBetaBuildUsagesGetMetricsData, ThrowOnError>) => { return (options?.client ?? client).get<BuildsBetaBuildUsagesGetMetricsResponse, BuildsBetaBuildUsagesGetMetricsError, ThrowOnError>({
    ...options,
    url: '/v1/builds/{id}/metrics/betaBuildUsages'
}); };

export const gameCenterDetailsClassicMatchmakingRequestsGetMetrics = <ThrowOnError extends boolean = false>(options: Options<GameCenterDetailsClassicMatchmakingRequestsGetMetricsData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterDetailsClassicMatchmakingRequestsGetMetricsResponse, GameCenterDetailsClassicMatchmakingRequestsGetMetricsError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterDetails/{id}/metrics/classicMatchmakingRequests'
}); };

export const gameCenterDetailsRuleBasedMatchmakingRequestsGetMetrics = <ThrowOnError extends boolean = false>(options: Options<GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsResponse, GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterDetails/{id}/metrics/ruleBasedMatchmakingRequests'
}); };

export const gameCenterMatchmakingQueuesExperimentMatchmakingQueueSizesGetMetrics = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingQueuesExperimentMatchmakingQueueSizesGetMetricsData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterMatchmakingQueuesExperimentMatchmakingQueueSizesGetMetricsResponse, GameCenterMatchmakingQueuesExperimentMatchmakingQueueSizesGetMetricsError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingQueues/{id}/metrics/experimentMatchmakingQueueSizes'
}); };

export const gameCenterMatchmakingQueuesExperimentMatchmakingRequestsGetMetrics = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingQueuesExperimentMatchmakingRequestsGetMetricsData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterMatchmakingQueuesExperimentMatchmakingRequestsGetMetricsResponse, GameCenterMatchmakingQueuesExperimentMatchmakingRequestsGetMetricsError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingQueues/{id}/metrics/experimentMatchmakingRequests'
}); };

export const gameCenterMatchmakingQueuesMatchmakingQueueSizesGetMetrics = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingQueuesMatchmakingQueueSizesGetMetricsData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterMatchmakingQueuesMatchmakingQueueSizesGetMetricsResponse, GameCenterMatchmakingQueuesMatchmakingQueueSizesGetMetricsError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingQueues/{id}/metrics/matchmakingQueueSizes'
}); };

export const gameCenterMatchmakingQueuesMatchmakingRequestsGetMetrics = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingQueuesMatchmakingRequestsGetMetricsData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterMatchmakingQueuesMatchmakingRequestsGetMetricsResponse, GameCenterMatchmakingQueuesMatchmakingRequestsGetMetricsError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingQueues/{id}/metrics/matchmakingRequests'
}); };

export const gameCenterMatchmakingQueuesMatchmakingSessionsGetMetrics = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingQueuesMatchmakingSessionsGetMetricsData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterMatchmakingQueuesMatchmakingSessionsGetMetricsResponse, GameCenterMatchmakingQueuesMatchmakingSessionsGetMetricsError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingQueues/{id}/metrics/matchmakingSessions'
}); };

export const gameCenterMatchmakingRulesMatchmakingBooleanRuleResultsGetMetrics = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingRulesMatchmakingBooleanRuleResultsGetMetricsData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterMatchmakingRulesMatchmakingBooleanRuleResultsGetMetricsResponse, GameCenterMatchmakingRulesMatchmakingBooleanRuleResultsGetMetricsError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingRules/{id}/metrics/matchmakingBooleanRuleResults'
}); };

export const gameCenterMatchmakingRulesMatchmakingNumberRuleResultsGetMetrics = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingRulesMatchmakingNumberRuleResultsGetMetricsData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterMatchmakingRulesMatchmakingNumberRuleResultsGetMetricsResponse, GameCenterMatchmakingRulesMatchmakingNumberRuleResultsGetMetricsError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingRules/{id}/metrics/matchmakingNumberRuleResults'
}); };

export const gameCenterMatchmakingRulesMatchmakingRuleErrorsGetMetrics = <ThrowOnError extends boolean = false>(options: Options<GameCenterMatchmakingRulesMatchmakingRuleErrorsGetMetricsData, ThrowOnError>) => { return (options?.client ?? client).get<GameCenterMatchmakingRulesMatchmakingRuleErrorsGetMetricsResponse, GameCenterMatchmakingRulesMatchmakingRuleErrorsGetMetricsError, ThrowOnError>({
    ...options,
    url: '/v1/gameCenterMatchmakingRules/{id}/metrics/matchmakingRuleErrors'
}); };